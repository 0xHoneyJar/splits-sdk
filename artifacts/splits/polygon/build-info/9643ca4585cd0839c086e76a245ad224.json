{
  "id": "9643ca4585cd0839c086e76a245ad224",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/interfaces/ISplitMain.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.8.4;\n\nimport {ERC20} from '@rari-capital/solmate/src/tokens/ERC20.sol';\n\n/**\n * @title ISplitMain\n * @author 0xSplits <will@0xSplits.xyz>\n */\ninterface ISplitMain {\n  /**\n   * FUNCTIONS\n   */\n\n  function walletImplementation() external returns (address);\n\n  function createSplit(\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee,\n    address controller\n  ) external returns (address);\n\n  function predictImmutableSplitAddress(\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee\n  ) external view returns (address);\n\n  function updateSplit(\n    address split,\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee\n  ) external;\n\n  function transferControl(address split, address newController) external;\n\n  function cancelControlTransfer(address split) external;\n\n  function acceptControl(address split) external;\n\n  function makeSplitImmutable(address split) external;\n\n  function distributeETH(\n    address split,\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee,\n    address distributorAddress\n  ) external;\n\n  function updateAndDistributeETH(\n    address split,\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee,\n    address distributorAddress\n  ) external;\n\n  function distributeERC20(\n    address split,\n    ERC20 token,\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee,\n    address distributorAddress\n  ) external;\n\n  function updateAndDistributeERC20(\n    address split,\n    ERC20 token,\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee,\n    address distributorAddress\n  ) external;\n\n  function withdraw(\n    address account,\n    uint256 withdrawETH,\n    ERC20[] calldata tokens\n  ) external;\n\n  /**\n   * EVENTS\n   */\n\n  /** @notice emitted after each successful split creation\n   *  @param split Address of the created split\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   *  @param controller Controlling address (0x0 if immutable)\n   */\n  event CreateSplit(\n    address indexed split,\n    address[] accounts,\n    uint32[] percentAllocations,\n    uint32 distributorFee,\n    address controller\n  );\n\n  /** @notice emitted after each successful split update\n   *  @param split Address of the updated split\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   */\n  event UpdateSplit(\n    address indexed split,\n    address[] accounts,\n    uint32[] percentAllocations,\n    uint32 distributorFee\n  );\n\n  /** @notice emitted after each initiated split control transfer\n   *  @param split Address of the split control transfer was initiated for\n   *  @param newPotentialController Address of the split's new potential controller\n   */\n  event InitiateControlTransfer(\n    address indexed split,\n    address indexed newPotentialController\n  );\n\n  /** @notice emitted after each canceled split control transfer\n   *  @param split Address of the split control transfer was canceled for\n   */\n  event CancelControlTransfer(address indexed split);\n\n  /** @notice emitted after each successful split control transfer\n   *  @param split Address of the split control was transferred for\n   *  @param previousController Address of the split's previous controller\n   *  @param newController Address of the split's new controller\n   */\n  event ControlTransfer(\n    address indexed split,\n    address indexed previousController,\n    address indexed newController\n  );\n\n  /** @notice emitted after each successful ETH balance split\n   *  @param split Address of the split that distributed its balance\n   *  @param amount Amount of ETH distributed\n   *  @param distributorAddress Address to credit distributor fee to\n   */\n  event DistributeETH(\n    address indexed split,\n    uint256 amount,\n    address indexed distributorAddress\n  );\n\n  /** @notice emitted after each successful ERC20 balance split\n   *  @param split Address of the split that distributed its balance\n   *  @param token Address of ERC20 distributed\n   *  @param amount Amount of ERC20 distributed\n   *  @param distributorAddress Address to credit distributor fee to\n   */\n  event DistributeERC20(\n    address indexed split,\n    ERC20 indexed token,\n    uint256 amount,\n    address indexed distributorAddress\n  );\n\n  /** @notice emitted after each successful withdrawal\n   *  @param account Address that funds were withdrawn to\n   *  @param ethAmount Amount of ETH withdrawn\n   *  @param tokens Addresses of ERC20s withdrawn\n   *  @param tokenAmounts Amounts of corresponding ERC20s withdrawn\n   */\n  event Withdrawal(\n    address indexed account,\n    uint256 ethAmount,\n    ERC20[] tokens,\n    uint256[] tokenAmounts\n  );\n}\n"
      },
      "@rari-capital/solmate/src/tokens/ERC20.sol": {
        "content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\nabstract contract ERC20 {\n    /*///////////////////////////////////////////////////////////////\n                                  EVENTS\n    //////////////////////////////////////////////////////////////*/\n\n    event Transfer(address indexed from, address indexed to, uint256 amount);\n\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\n\n    /*///////////////////////////////////////////////////////////////\n                             METADATA STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    string public name;\n\n    string public symbol;\n\n    uint8 public immutable decimals;\n\n    /*///////////////////////////////////////////////////////////////\n                              ERC20 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    uint256 public totalSupply;\n\n    mapping(address => uint256) public balanceOf;\n\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    /*///////////////////////////////////////////////////////////////\n                             EIP-2612 STORAGE\n    //////////////////////////////////////////////////////////////*/\n\n    bytes32 public constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    uint256 internal immutable INITIAL_CHAIN_ID;\n\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\n\n    mapping(address => uint256) public nonces;\n\n    /*///////////////////////////////////////////////////////////////\n                               CONSTRUCTOR\n    //////////////////////////////////////////////////////////////*/\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals\n    ) {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n\n        INITIAL_CHAIN_ID = block.chainid;\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                              ERC20 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        allowance[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n\n        return true;\n    }\n\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        balanceOf[msg.sender] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(msg.sender, to, amount);\n\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual returns (bool) {\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\n\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\n\n        balanceOf[from] -= amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        return true;\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                              EIP-2612 LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        require(deadline >= block.timestamp, \"PERMIT_DEADLINE_EXPIRED\");\n\n        // Unchecked because the only math done is incrementing\n        // the owner's nonce which cannot realistically overflow.\n        unchecked {\n            bytes32 digest = keccak256(\n                abi.encodePacked(\n                    \"\\x19\\x01\",\n                    DOMAIN_SEPARATOR(),\n                    keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\n                )\n            );\n\n            address recoveredAddress = ecrecover(digest, v, r, s);\n\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \"INVALID_SIGNER\");\n\n            allowance[recoveredAddress][spender] = value;\n        }\n\n        emit Approval(owner, spender, value);\n    }\n\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\n    }\n\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                    keccak256(bytes(name)),\n                    keccak256(\"1\"),\n                    block.chainid,\n                    address(this)\n                )\n            );\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                       INTERNAL MINT/BURN LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function _mint(address to, uint256 amount) internal virtual {\n        totalSupply += amount;\n\n        // Cannot overflow because the sum of all user\n        // balances can't exceed the max uint256 value.\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        emit Transfer(address(0), to, amount);\n    }\n\n    function _burn(address from, uint256 amount) internal virtual {\n        balanceOf[from] -= amount;\n\n        // Cannot underflow because a user's balance\n        // will never be larger than the total supply.\n        unchecked {\n            totalSupply -= amount;\n        }\n\n        emit Transfer(from, address(0), amount);\n    }\n}\n"
      },
      "contracts/TestInternalTxn.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.8.4;\n\nimport {ISplitMain} from 'contracts/interfaces/ISplitMain.sol';\n\ncontract TestInternalTxn {\n  ISplitMain constant splitMain =\n    ISplitMain(0x2ed6c4B5dA6378c7897AC67Ba9e43102Feb694EE);\n\n  constructor() {}\n\n  function create(\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee,\n    address controller\n  ) external returns (address) {\n    return\n      splitMain.createSplit(\n        accounts,\n        percentAllocations,\n        distributorFee,\n        controller\n      );\n  }\n\n  function update(\n    address split,\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee\n  ) external {\n    splitMain.updateSplit(split, accounts, percentAllocations, distributorFee);\n  }\n}\n"
      },
      "contracts/SplitWallet.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.8.4;\n\nimport {ISplitMain} from './interfaces/ISplitMain.sol';\nimport {ERC20} from '@rari-capital/solmate/src/tokens/ERC20.sol';\nimport {SafeTransferLib} from '@rari-capital/solmate/src/utils/SafeTransferLib.sol';\n\n/**\n * ERRORS\n */\n\n/// @notice Unauthorized sender\nerror Unauthorized();\n\n/**\n * @title SplitWallet\n * @author 0xSplits <will@0xSplits.xyz>\n * @notice The implementation logic for `SplitProxy`.\n * @dev `SplitProxy` handles `receive()` itself to avoid the gas cost with `DELEGATECALL`.\n */\ncontract SplitWallet {\n  using SafeTransferLib for address;\n  using SafeTransferLib for ERC20;\n\n  /**\n   * EVENTS\n   */\n\n  /** @notice emitted after each successful ETH transfer to proxy\n   *  @param split Address of the split that received ETH\n   *  @param amount Amount of ETH received\n   */\n  event ReceiveETH(address indexed split, uint256 amount);\n\n  /**\n   * STORAGE\n   */\n\n  /**\n   * STORAGE - CONSTANTS & IMMUTABLES\n   */\n\n  /// @notice address of SplitMain for split distributions & EOA/SC withdrawals\n  ISplitMain public immutable splitMain;\n\n  /**\n   * MODIFIERS\n   */\n\n  /// @notice Reverts if the sender isn't SplitMain\n  modifier onlySplitMain() {\n    if (msg.sender != address(splitMain)) revert Unauthorized();\n    _;\n  }\n\n  /**\n   * CONSTRUCTOR\n   */\n\n  constructor() {\n    splitMain = ISplitMain(msg.sender);\n  }\n\n  /**\n   * FUNCTIONS - PUBLIC & EXTERNAL\n   */\n\n  /** @notice Sends amount `amount` of ETH in proxy to SplitMain\n   *  @dev payable reduces gas cost; no vulnerability to accidentally lock\n   *  ETH introduced since fn call is restricted to SplitMain\n   *  @param amount Amount to send\n   */\n  function sendETHToMain(uint256 amount) external payable onlySplitMain() {\n    address(splitMain).safeTransferETH(amount);\n  }\n\n  /** @notice Sends amount `amount` of ERC20 `token` in proxy to SplitMain\n   *  @dev payable reduces gas cost; no vulnerability to accidentally lock\n   *  ETH introduced since fn call is restricted to SplitMain\n   *  @param token Token to send\n   *  @param amount Amount to send\n   */\n  function sendERC20ToMain(ERC20 token, uint256 amount)\n    external\n    payable\n    onlySplitMain()\n  {\n    token.safeTransfer(address(splitMain), amount);\n  }\n}\n"
      },
      "@rari-capital/solmate/src/utils/SafeTransferLib.sol": {
        "content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.8.0;\n\nimport {ERC20} from \"../tokens/ERC20.sol\";\n\n/// @notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol)\n/// @author Modified from Gnosis (https://github.com/gnosis/gp-v2-contracts/blob/main/src/contracts/libraries/GPv2SafeERC20.sol)\n/// @dev Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.\nlibrary SafeTransferLib {\n    /*///////////////////////////////////////////////////////////////\n                            ETH OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    function safeTransferETH(address to, uint256 amount) internal {\n        bool callStatus;\n\n        assembly {\n            // Transfer the ETH and store if it succeeded or not.\n            callStatus := call(gas(), to, amount, 0, 0, 0, 0)\n        }\n\n        require(callStatus, \"ETH_TRANSFER_FAILED\");\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                           ERC20 OPERATIONS\n    //////////////////////////////////////////////////////////////*/\n\n    function safeTransferFrom(\n        ERC20 token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        bool callStatus;\n\n        assembly {\n            // Get a pointer to some free memory.\n            let freeMemoryPointer := mload(0x40)\n\n            // Write the abi-encoded calldata to memory piece by piece:\n            mstore(freeMemoryPointer, 0x23b872dd00000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\n            mstore(add(freeMemoryPointer, 4), and(from, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \"from\" argument.\n            mstore(add(freeMemoryPointer, 36), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \"to\" argument.\n            mstore(add(freeMemoryPointer, 68), amount) // Finally append the \"amount\" argument. No mask as it's a full 32 byte value.\n\n            // Call the token and store if it succeeded or not.\n            // We use 100 because the calldata length is 4 + 32 * 3.\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 100, 0, 0)\n        }\n\n        require(didLastOptionalReturnCallSucceed(callStatus), \"TRANSFER_FROM_FAILED\");\n    }\n\n    function safeTransfer(\n        ERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        bool callStatus;\n\n        assembly {\n            // Get a pointer to some free memory.\n            let freeMemoryPointer := mload(0x40)\n\n            // Write the abi-encoded calldata to memory piece by piece:\n            mstore(freeMemoryPointer, 0xa9059cbb00000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\n            mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \"to\" argument.\n            mstore(add(freeMemoryPointer, 36), amount) // Finally append the \"amount\" argument. No mask as it's a full 32 byte value.\n\n            // Call the token and store if it succeeded or not.\n            // We use 68 because the calldata length is 4 + 32 * 2.\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 68, 0, 0)\n        }\n\n        require(didLastOptionalReturnCallSucceed(callStatus), \"TRANSFER_FAILED\");\n    }\n\n    function safeApprove(\n        ERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        bool callStatus;\n\n        assembly {\n            // Get a pointer to some free memory.\n            let freeMemoryPointer := mload(0x40)\n\n            // Write the abi-encoded calldata to memory piece by piece:\n            mstore(freeMemoryPointer, 0x095ea7b300000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\n            mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \"to\" argument.\n            mstore(add(freeMemoryPointer, 36), amount) // Finally append the \"amount\" argument. No mask as it's a full 32 byte value.\n\n            // Call the token and store if it succeeded or not.\n            // We use 68 because the calldata length is 4 + 32 * 2.\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 68, 0, 0)\n        }\n\n        require(didLastOptionalReturnCallSucceed(callStatus), \"APPROVE_FAILED\");\n    }\n\n    /*///////////////////////////////////////////////////////////////\n                         INTERNAL HELPER LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    function didLastOptionalReturnCallSucceed(bool callStatus) private pure returns (bool success) {\n        assembly {\n            // Get how many bytes the call returned.\n            let returnDataSize := returndatasize()\n\n            // If the call reverted:\n            if iszero(callStatus) {\n                // Copy the revert message into memory.\n                returndatacopy(0, 0, returnDataSize)\n\n                // Revert with the same message.\n                revert(0, returnDataSize)\n            }\n\n            switch returnDataSize\n            case 32 {\n                // Copy the return data into memory.\n                returndatacopy(0, 0, returnDataSize)\n\n                // Set success to whether it returned true.\n                success := iszero(iszero(mload(0)))\n            }\n            case 0 {\n                // There was no return data.\n                success := 1\n            }\n            default {\n                // It returned some malformed input.\n                success := 0\n            }\n        }\n    }\n}\n"
      },
      "contracts/SplitMain.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.8.4;\n\nimport {ISplitMain} from 'contracts/interfaces/ISplitMain.sol';\nimport {SplitWallet} from 'contracts/SplitWallet.sol';\nimport {Clones} from 'contracts/libraries/Clones.sol';\nimport {ERC20} from '@rari-capital/solmate/src/tokens/ERC20.sol';\nimport {SafeTransferLib} from '@rari-capital/solmate/src/utils/SafeTransferLib.sol';\n\n/**\n\n                                             █████████\n                                          ███████████████                  █████████\n                                         █████████████████               █████████████                 ███████\n                                        ███████████████████             ███████████████               █████████\n                                        ███████████████████             ███████████████              ███████████\n                                        ███████████████████             ███████████████               █████████\n                                         █████████████████               █████████████                 ███████\n                                          ███████████████                  █████████\n                                             █████████\n\n                             ███████████\n                          █████████████████                 █████████\n                         ███████████████████             ███████████████                  █████████\n                        █████████████████████           █████████████████               █████████████                ███████\n                       ███████████████████████         ███████████████████             ███████████████              █████████\n                       ███████████████████████         ███████████████████             ███████████████             ███████████\n                       ███████████████████████         ███████████████████             ███████████████              █████████\n                        █████████████████████           █████████████████               █████████████                ███████\n                         ███████████████████              █████████████                   █████████\n                          █████████████████                 █████████\n                             ███████████\n\n           ███████████\n       ███████████████████                  ███████████\n     ███████████████████████              ███████████████                  █████████\n    █████████████████████████           ███████████████████             ███████████████               █████████\n   ███████████████████████████         █████████████████████           █████████████████            █████████████              ███████\n   ███████████████████████████        ███████████████████████         ███████████████████          ███████████████            █████████\n   ███████████████████████████        ███████████████████████         ███████████████████          ███████████████           ███████████\n   ███████████████████████████        ███████████████████████         ███████████████████          ███████████████            █████████\n   ███████████████████████████         █████████████████████           █████████████████            █████████████              ███████\n    █████████████████████████           ███████████████████              █████████████                █████████\n      █████████████████████               ███████████████                  █████████\n        █████████████████                   ███████████\n           ███████████\n\n                             ███████████\n                          █████████████████                 █████████\n                         ███████████████████             ███████████████                  █████████\n                        █████████████████████           █████████████████               █████████████                ███████\n                       ███████████████████████         ███████████████████             ███████████████              █████████\n                       ███████████████████████         ███████████████████             ███████████████             ███████████\n                       ███████████████████████         ███████████████████             ███████████████              █████████\n                        █████████████████████           █████████████████               █████████████                ███████\n                         ███████████████████              █████████████                   █████████\n                          █████████████████                 █████████\n                             ███████████\n\n                                             █████████\n                                          ███████████████                  █████████\n                                         █████████████████               █████████████                 ███████\n                                        ███████████████████             ███████████████               █████████\n                                        ███████████████████             ███████████████              ███████████\n                                        ███████████████████             ███████████████               █████████\n                                         █████████████████               █████████████                 ███████\n                                          ███████████████                  █████████\n                                             █████████\n\n */\n\n/**\n * ERRORS\n */\n\n/// @notice Unauthorized sender `sender`\n/// @param sender Transaction sender\nerror Unauthorized(address sender);\n/// @notice Invalid number of accounts `accountsLength`, must have at least 2\n/// @param accountsLength Length of accounts array\nerror InvalidSplit__TooFewAccounts(uint256 accountsLength);\n/// @notice Array lengths of accounts & percentAllocations don't match (`accountsLength` != `allocationsLength`)\n/// @param accountsLength Length of accounts array\n/// @param allocationsLength Length of percentAllocations array\nerror InvalidSplit__AccountsAndAllocationsMismatch(\n  uint256 accountsLength,\n  uint256 allocationsLength\n);\n/// @notice Invalid percentAllocations sum `allocationsSum` must equal `PERCENTAGE_SCALE`\n/// @param allocationsSum Sum of percentAllocations array\nerror InvalidSplit__InvalidAllocationsSum(uint32 allocationsSum);\n/// @notice Invalid accounts ordering at `index`\n/// @param index Index of out-of-order account\nerror InvalidSplit__AccountsOutOfOrder(uint256 index);\n/// @notice Invalid percentAllocation of zero at `index`\n/// @param index Index of zero percentAllocation\nerror InvalidSplit__AllocationMustBePositive(uint256 index);\n/// @notice Invalid distributorFee `distributorFee` cannot be greater than 10% (1e5)\n/// @param distributorFee Invalid distributorFee amount\nerror InvalidSplit__InvalidDistributorFee(uint32 distributorFee);\n/// @notice Invalid hash `hash` from split data (accounts, percentAllocations, distributorFee)\n/// @param hash Invalid hash\nerror InvalidSplit__InvalidHash(bytes32 hash);\n/// @notice Invalid new controlling address `newController` for mutable split\n/// @param newController Invalid new controller\nerror InvalidNewController(address newController);\n\n/**\n * @title SplitMain\n * @author 0xSplits <will@0xSplits.xyz>\n * @notice A composable and gas-efficient protocol for deploying splitter contracts.\n * @dev Split recipients, ownerships, and keeper fees are stored onchain as calldata & re-passed as args / validated\n * via hashing when needed. Each split gets its own address & proxy for maximum composability with other contracts onchain.\n * For these proxies, we extended EIP-1167 Minimal Proxy Contract to avoid `DELEGATECALL` inside `receive()` to accept\n * hard gas-capped `sends` & `transfers`.\n */\ncontract SplitMain is ISplitMain {\n  using SafeTransferLib for address;\n  using SafeTransferLib for ERC20;\n\n  /**\n   * STRUCTS\n   */\n\n  /// @notice holds Split metadata\n  struct Split {\n    bytes32 hash;\n    address controller;\n    address newPotentialController;\n  }\n\n  /**\n   * STORAGE\n   */\n\n  /**\n   * STORAGE - CONSTANTS & IMMUTABLES\n   */\n\n  /// @notice constant to scale uints into percentages (1e6 == 100%)\n  uint256 public constant PERCENTAGE_SCALE = 1e6;\n  /// @notice maximum distributor fee; 1e5 = 10% * PERCENTAGE_SCALE\n  uint256 internal constant MAX_DISTRIBUTOR_FEE = 1e5;\n  /// @notice address of wallet implementation for split proxies\n  address public immutable override walletImplementation;\n\n  /**\n   * STORAGE - VARIABLES - PRIVATE & INTERNAL\n   */\n\n  /// @notice mapping to account ETH balances\n  mapping(address => uint256) internal ethBalances;\n  /// @notice mapping to account ERC20 balances\n  mapping(ERC20 => mapping(address => uint256)) internal erc20Balances;\n  /// @notice mapping to Split metadata\n  mapping(address => Split) internal splits;\n\n  /**\n   * MODIFIERS\n   */\n\n  /** @notice Reverts if the sender doesn't own the split `split`\n   *  @param split Address to check for control\n   */\n  modifier onlySplitController(address split) {\n    if (msg.sender != splits[split].controller) revert Unauthorized(msg.sender);\n    _;\n  }\n\n  /** @notice Reverts if the sender isn't the new potential controller of split `split`\n   *  @param split Address to check for new potential control\n   */\n  modifier onlySplitNewPotentialController(address split) {\n    if (msg.sender != splits[split].newPotentialController)\n      revert Unauthorized(msg.sender);\n    _;\n  }\n\n  /** @notice Reverts if the split with recipients represented by `accounts` and `percentAllocations` is malformed\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   */\n  modifier validSplit(\n    address[] memory accounts,\n    uint32[] memory percentAllocations,\n    uint32 distributorFee\n  ) {\n    if (accounts.length < 2)\n      revert InvalidSplit__TooFewAccounts(accounts.length);\n    if (accounts.length != percentAllocations.length)\n      revert InvalidSplit__AccountsAndAllocationsMismatch(\n        accounts.length,\n        percentAllocations.length\n      );\n    // _getSum should overflow if any percentAllocation[i] < 0\n    if (_getSum(percentAllocations) != PERCENTAGE_SCALE)\n      revert InvalidSplit__InvalidAllocationsSum(_getSum(percentAllocations));\n    unchecked {\n      // overflow should be impossible in for-loop index\n      // cache accounts length to save gas\n      uint256 loopLength = accounts.length - 1;\n      for (uint256 i = 0; i < loopLength; ++i) {\n        // overflow should be impossible in array access math\n        if (accounts[i] >= accounts[i + 1])\n          revert InvalidSplit__AccountsOutOfOrder(i);\n        if (percentAllocations[i] == uint32(0))\n          revert InvalidSplit__AllocationMustBePositive(i);\n      }\n      // overflow should be impossible in array access math with validated equal array lengths\n      if (percentAllocations[loopLength] == uint32(0))\n        revert InvalidSplit__AllocationMustBePositive(loopLength);\n    }\n    if (distributorFee > MAX_DISTRIBUTOR_FEE)\n      revert InvalidSplit__InvalidDistributorFee(distributorFee);\n    _;\n  }\n\n  /** @notice Reverts if `newController` is the zero address\n   *  @param newController Proposed new controlling address\n   */\n  modifier validNewController(address newController) {\n    if (newController == address(0)) revert InvalidNewController(newController);\n    _;\n  }\n\n  /**\n   * CONSTRUCTOR\n   */\n\n  constructor() {\n    walletImplementation = address(new SplitWallet());\n  }\n\n  /**\n   * FUNCTIONS\n   */\n\n  /**\n   * FUNCTIONS - PUBLIC & EXTERNAL\n   */\n\n  /** @notice Receive ETH\n   *  @dev Used by split proxies in `distributeETH` to transfer ETH to `SplitMain`\n   *  Funds sent outside of `distributeETH` will be unrecoverable\n   */\n  receive() external payable {}\n\n  /** @notice Creates a new split with recipients `accounts` with ownerships `percentAllocations`, a keeper fee for splitting of `distributorFee` and the controlling address `controller`\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   *  @param controller Controlling address (0x0 if immutable)\n   *  @return split Address of newly created split\n   */\n  function createSplit(\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee,\n    address controller\n  )\n    external\n    override\n    validSplit(accounts, percentAllocations, distributorFee)\n    returns (address split)\n  {\n    bytes32 splitHash = _hashSplit(\n      accounts,\n      percentAllocations,\n      distributorFee\n    );\n    if (controller == address(0)) {\n      // create immutable split\n      split = Clones.cloneDeterministic(walletImplementation, splitHash);\n    } else {\n      // create mutable split\n      split = Clones.clone(walletImplementation);\n      splits[split].controller = controller;\n    }\n    // store split's hash in storage for future verification\n    splits[split].hash = splitHash;\n    emit CreateSplit(\n      split,\n      accounts,\n      percentAllocations,\n      distributorFee,\n      controller\n    );\n  }\n\n  /** @notice Predicts the address for an immutable split created with recipients `accounts` with ownerships `percentAllocations` and a keeper fee for splitting of `distributorFee`\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   *  @return split Predicted address of such an immutable split\n   */\n  function predictImmutableSplitAddress(\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee\n  )\n    external\n    view\n    override\n    validSplit(accounts, percentAllocations, distributorFee)\n    returns (address split)\n  {\n    bytes32 splitHash = _hashSplit(\n      accounts,\n      percentAllocations,\n      distributorFee\n    );\n    split = Clones.predictDeterministicAddress(walletImplementation, splitHash);\n  }\n\n  /** @notice Updates an existing split with recipients `accounts` with ownerships `percentAllocations` and a keeper fee for splitting of `distributorFee`\n   *  @param split Address of mutable split to update\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   */\n  function updateSplit(\n    address split,\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee\n  )\n    external\n    override\n    onlySplitController(split)\n    validSplit(accounts, percentAllocations, distributorFee)\n  {\n    _updateSplit(split, accounts, percentAllocations, distributorFee);\n  }\n\n  /** @notice Begins transfer of the controlling address of mutable split `split` to `newController`\n   *  @dev Two-step control transfer inspired by [dharma](https://github.com/dharma-eng/dharma-smart-wallet/blob/master/contracts/helpers/TwoStepOwnable.sol)\n   *  @param split Address of mutable split to transfer control for\n   *  @param newController Address to begin transferring control to\n   */\n  function transferControl(address split, address newController)\n    external\n    override\n    onlySplitController(split)\n    validNewController(newController)\n  {\n    splits[split].newPotentialController = newController;\n    emit InitiateControlTransfer(split, newController);\n  }\n\n  /** @notice Cancels transfer of the controlling address of mutable split `split`\n   *  @param split Address of mutable split to cancel control transfer for\n   */\n  function cancelControlTransfer(address split)\n    external\n    override\n    onlySplitController(split)\n  {\n    delete splits[split].newPotentialController;\n    emit CancelControlTransfer(split);\n  }\n\n  /** @notice Accepts transfer of the controlling address of mutable split `split`\n   *  @param split Address of mutable split to accept control transfer for\n   */\n  function acceptControl(address split)\n    external\n    override\n    onlySplitNewPotentialController(split)\n  {\n    delete splits[split].newPotentialController;\n    emit ControlTransfer(split, splits[split].controller, msg.sender);\n    splits[split].controller = msg.sender;\n  }\n\n  /** @notice Turns mutable split `split` immutable\n   *  @param split Address of mutable split to turn immutable\n   */\n  function makeSplitImmutable(address split)\n    external\n    override\n    onlySplitController(split)\n  {\n    delete splits[split].newPotentialController;\n    emit ControlTransfer(split, splits[split].controller, address(0));\n    splits[split].controller = address(0);\n  }\n\n  /** @notice Distributes the ETH balance for split `split`\n   *  @dev `accounts`, `percentAllocations`, and `distributorFee` are verified by hashing\n   *  & comparing to the hash in storage associated with split `split`\n   *  @param split Address of split to distribute balance for\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   *  @param distributorAddress Address to pay `distributorFee` to\n   */\n  function distributeETH(\n    address split,\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee,\n    address distributorAddress\n  ) external override validSplit(accounts, percentAllocations, distributorFee) {\n    // use internal fn instead of modifier to avoid stack depth compiler errors\n    _validSplitHash(split, accounts, percentAllocations, distributorFee);\n    _distributeETH(\n      split,\n      accounts,\n      percentAllocations,\n      distributorFee,\n      distributorAddress\n    );\n  }\n\n  /** @notice Updates & distributes the ETH balance for split `split`\n   *  @dev only callable by SplitController\n   *  @param split Address of split to distribute balance for\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   *  @param distributorAddress Address to pay `distributorFee` to\n   */\n  function updateAndDistributeETH(\n    address split,\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee,\n    address distributorAddress\n  )\n    external\n    override\n    onlySplitController(split)\n    validSplit(accounts, percentAllocations, distributorFee)\n  {\n    _updateSplit(split, accounts, percentAllocations, distributorFee);\n    // know splitHash is valid immediately after updating; only accessible via controller\n    _distributeETH(\n      split,\n      accounts,\n      percentAllocations,\n      distributorFee,\n      distributorAddress\n    );\n  }\n\n  /** @notice Distributes the ERC20 `token` balance for split `split`\n   *  @dev `accounts`, `percentAllocations`, and `distributorFee` are verified by hashing\n   *  & comparing to the hash in storage associated with split `split`\n   *  @dev pernicious ERC20s may cause overflow in this function inside\n   *  _scaleAmountByPercentage, but results do not affect ETH & other ERC20 balances\n   *  @param split Address of split to distribute balance for\n   *  @param token Address of ERC20 to distribute balance for\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   *  @param distributorAddress Address to pay `distributorFee` to\n   */\n  function distributeERC20(\n    address split,\n    ERC20 token,\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee,\n    address distributorAddress\n  ) external override validSplit(accounts, percentAllocations, distributorFee) {\n    // use internal fn instead of modifier to avoid stack depth compiler errors\n    _validSplitHash(split, accounts, percentAllocations, distributorFee);\n    _distributeERC20(\n      split,\n      token,\n      accounts,\n      percentAllocations,\n      distributorFee,\n      distributorAddress\n    );\n  }\n\n  /** @notice Updates & distributes the ERC20 `token` balance for split `split`\n   *  @dev only callable by SplitController\n   *  @dev pernicious ERC20s may cause overflow in this function inside\n   *  _scaleAmountByPercentage, but results do not affect ETH & other ERC20 balances\n   *  @param split Address of split to distribute balance for\n   *  @param token Address of ERC20 to distribute balance for\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   *  @param distributorAddress Address to pay `distributorFee` to\n   */\n  function updateAndDistributeERC20(\n    address split,\n    ERC20 token,\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee,\n    address distributorAddress\n  )\n    external\n    override\n    onlySplitController(split)\n    validSplit(accounts, percentAllocations, distributorFee)\n  {\n    _updateSplit(split, accounts, percentAllocations, distributorFee);\n    // know splitHash is valid immediately after updating; only accessible via controller\n    _distributeERC20(\n      split,\n      token,\n      accounts,\n      percentAllocations,\n      distributorFee,\n      distributorAddress\n    );\n  }\n\n  /** @notice Withdraw ETH &/ ERC20 balances for account `account`\n   *  @param account Address to withdraw on behalf of\n   *  @param withdrawETH Withdraw all ETH if nonzero\n   *  @param tokens Addresses of ERC20s to withdraw\n   */\n  function withdraw(\n    address account,\n    uint256 withdrawETH,\n    ERC20[] calldata tokens\n  ) external override {\n    uint256[] memory tokenAmounts = new uint256[](tokens.length);\n    uint256 ethAmount;\n    if (withdrawETH != 0) {\n      ethAmount = _withdraw(account);\n    }\n    unchecked {\n      // overflow should be impossible in for-loop index\n      for (uint256 i = 0; i < tokens.length; ++i) {\n        // overflow should be impossible in array length math\n        tokenAmounts[i] = _withdrawERC20(account, tokens[i]);\n      }\n      emit Withdrawal(account, ethAmount, tokens, tokenAmounts);\n    }\n  }\n\n  /**\n   * FUNCTIONS - VIEWS\n   */\n\n  /** @notice Returns the current hash of split `split`\n   *  @param split Split to return hash for\n   *  @return Split's hash\n   */\n  function getHash(address split) external view returns (bytes32) {\n    return splits[split].hash;\n  }\n\n  /** @notice Returns the current controller of split `split`\n   *  @param split Split to return controller for\n   *  @return Split's controller\n   */\n  function getController(address split) external view returns (address) {\n    return splits[split].controller;\n  }\n\n  /** @notice Returns the current newPotentialController of split `split`\n   *  @param split Split to return newPotentialController for\n   *  @return Split's newPotentialController\n   */\n  function getNewPotentialController(address split)\n    external\n    view\n    returns (address)\n  {\n    return splits[split].newPotentialController;\n  }\n\n  /** @notice Returns the current ETH balance of account `account`\n   *  @param account Account to return ETH balance for\n   *  @return Account's balance of ETH\n   */\n  function getETHBalance(address account) external view returns (uint256) {\n    return\n      ethBalances[account] + (splits[account].hash != 0 ? account.balance : 0);\n  }\n\n  /** @notice Returns the ERC20 balance of token `token` for account `account`\n   *  @param account Account to return ERC20 `token` balance for\n   *  @param token Token to return balance for\n   *  @return Account's balance of `token`\n   */\n  function getERC20Balance(address account, ERC20 token)\n    external\n    view\n    returns (uint256)\n  {\n    return\n      erc20Balances[token][account] +\n      (splits[account].hash != 0 ? token.balanceOf(account) : 0);\n  }\n\n  /**\n   * FUNCTIONS - PRIVATE & INTERNAL\n   */\n\n  /** @notice Sums array of uint32s\n   *  @param numbers Array of uint32s to sum\n   *  @return sum Sum of `numbers`.\n   */\n  function _getSum(uint32[] memory numbers) internal pure returns (uint32 sum) {\n    // overflow should be impossible in for-loop index\n    uint256 numbersLength = numbers.length;\n    for (uint256 i = 0; i < numbersLength; ) {\n      sum += numbers[i];\n      unchecked {\n        // overflow should be impossible in for-loop index\n        ++i;\n      }\n    }\n  }\n\n  /** @notice Hashes a split\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   *  @return computedHash Hash of the split.\n   */\n  function _hashSplit(\n    address[] memory accounts,\n    uint32[] memory percentAllocations,\n    uint32 distributorFee\n  ) internal pure returns (bytes32) {\n    return\n      keccak256(abi.encodePacked(accounts, percentAllocations, distributorFee));\n  }\n\n  /** @notice Updates an existing split with recipients `accounts` with ownerships `percentAllocations` and a keeper fee for splitting of `distributorFee`\n   *  @param split Address of mutable split to update\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   */\n  function _updateSplit(\n    address split,\n    address[] calldata accounts,\n    uint32[] calldata percentAllocations,\n    uint32 distributorFee\n  ) internal {\n    bytes32 splitHash = _hashSplit(\n      accounts,\n      percentAllocations,\n      distributorFee\n    );\n    // store new hash in storage for future verification\n    splits[split].hash = splitHash;\n    emit UpdateSplit(split, accounts, percentAllocations, distributorFee);\n  }\n\n  /** @notice Checks hash from `accounts`, `percentAllocations`, and `distributorFee` against the hash stored for `split`\n   *  @param split Address of hash to check\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   */\n  function _validSplitHash(\n    address split,\n    address[] memory accounts,\n    uint32[] memory percentAllocations,\n    uint32 distributorFee\n  ) internal view {\n    bytes32 hash = _hashSplit(accounts, percentAllocations, distributorFee);\n    if (splits[split].hash != hash) revert InvalidSplit__InvalidHash(hash);\n  }\n\n  /** @notice Distributes the ETH balance for split `split`\n   *  @dev `accounts`, `percentAllocations`, and `distributorFee` must be verified before calling\n   *  @param split Address of split to distribute balance for\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   *  @param distributorAddress Address to pay `distributorFee` to\n   */\n  function _distributeETH(\n    address split,\n    address[] memory accounts,\n    uint32[] memory percentAllocations,\n    uint32 distributorFee,\n    address distributorAddress\n  ) internal {\n    uint256 mainBalance = ethBalances[split];\n    uint256 proxyBalance = split.balance;\n    // if mainBalance is positive, leave 1 in SplitMain for gas efficiency\n    uint256 amountToSplit;\n    unchecked {\n      // underflow should be impossible\n      if (mainBalance > 0) mainBalance -= 1;\n      // overflow should be impossible\n      amountToSplit = mainBalance + proxyBalance;\n    }\n    if (mainBalance > 0) ethBalances[split] = 1;\n    // emit event with gross amountToSplit (before deducting distributorFee)\n    emit DistributeETH(split, amountToSplit, distributorAddress);\n    if (distributorFee != 0) {\n      // given `amountToSplit`, calculate keeper fee\n      uint256 distributorFeeAmount = _scaleAmountByPercentage(\n        amountToSplit,\n        distributorFee\n      );\n      unchecked {\n        // credit keeper with fee\n        // overflow should be impossible with validated distributorFee\n        ethBalances[\n          distributorAddress != address(0) ? distributorAddress : msg.sender\n        ] += distributorFeeAmount;\n        // given keeper fee, calculate how much to distribute to split recipients\n        // underflow should be impossible with validated distributorFee\n        amountToSplit -= distributorFeeAmount;\n      }\n    }\n    unchecked {\n      // distribute remaining balance\n      // overflow should be impossible in for-loop index\n      // cache accounts length to save gas\n      uint256 accountsLength = accounts.length;\n      for (uint256 i = 0; i < accountsLength; ++i) {\n        // overflow should be impossible with validated allocations\n        ethBalances[accounts[i]] += _scaleAmountByPercentage(\n          amountToSplit,\n          percentAllocations[i]\n        );\n      }\n    }\n    // flush proxy ETH balance to SplitMain\n    // split proxy should be guaranteed to exist at this address after validating splitHash\n    // (attacker can't deploy own contract to address with high balance & empty sendETHToMain\n    // to drain ETH from SplitMain)\n    // could technically check if (change in proxy balance == change in SplitMain balance)\n    // before/after external call, but seems like extra gas for no practical benefit\n    if (proxyBalance > 0) SplitWallet(split).sendETHToMain(proxyBalance);\n  }\n\n  /** @notice Distributes the ERC20 `token` balance for split `split`\n   *  @dev `accounts`, `percentAllocations`, and `distributorFee` must be verified before calling\n   *  @dev pernicious ERC20s may cause overflow in this function inside\n   *  _scaleAmountByPercentage, but results do not affect ETH & other ERC20 balances\n   *  @param split Address of split to distribute balance for\n   *  @param token Address of ERC20 to distribute balance for\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\n   *  @param percentAllocations Percent allocations associated with each address\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n   *  @param distributorAddress Address to pay `distributorFee` to\n   */\n  function _distributeERC20(\n    address split,\n    ERC20 token,\n    address[] memory accounts,\n    uint32[] memory percentAllocations,\n    uint32 distributorFee,\n    address distributorAddress\n  ) internal {\n    uint256 amountToSplit;\n    uint256 mainBalance = erc20Balances[token][split];\n    uint256 proxyBalance = token.balanceOf(split);\n    unchecked {\n      // if mainBalance &/ proxyBalance are positive, leave 1 for gas efficiency\n      // underflow should be impossible\n      if (proxyBalance > 0) proxyBalance -= 1;\n      // underflow should be impossible\n      if (mainBalance > 0) {\n        mainBalance -= 1;\n      }\n      // overflow should be impossible\n      amountToSplit = mainBalance + proxyBalance;\n    }\n    if (mainBalance > 0) erc20Balances[token][split] = 1;\n    // emit event with gross amountToSplit (before deducting distributorFee)\n    emit DistributeERC20(split, token, amountToSplit, distributorAddress);\n    if (distributorFee != 0) {\n      // given `amountToSplit`, calculate keeper fee\n      uint256 distributorFeeAmount = _scaleAmountByPercentage(\n        amountToSplit,\n        distributorFee\n      );\n      // overflow should be impossible with validated distributorFee\n      unchecked {\n        // credit keeper with fee\n        erc20Balances[token][\n          distributorAddress != address(0) ? distributorAddress : msg.sender\n        ] += distributorFeeAmount;\n        // given keeper fee, calculate how much to distribute to split recipients\n        amountToSplit -= distributorFeeAmount;\n      }\n    }\n    // distribute remaining balance\n    // overflows should be impossible in for-loop with validated allocations\n    unchecked {\n      // cache accounts length to save gas\n      uint256 accountsLength = accounts.length;\n      for (uint256 i = 0; i < accountsLength; ++i) {\n        erc20Balances[token][accounts[i]] += _scaleAmountByPercentage(\n          amountToSplit,\n          percentAllocations[i]\n        );\n      }\n    }\n    // split proxy should be guaranteed to exist at this address after validating splitHash\n    // (attacker can't deploy own contract to address with high ERC20 balance & empty\n    // sendERC20ToMain to drain ERC20 from SplitMain)\n    // doesn't support rebasing or fee-on-transfer tokens\n    // flush extra proxy ERC20 balance to SplitMain\n    if (proxyBalance > 0)\n      SplitWallet(split).sendERC20ToMain(token, proxyBalance);\n  }\n\n  /** @notice Multiplies an amount by a scaled percentage\n   *  @param amount Amount to get `scaledPercentage` of\n   *  @param scaledPercent Percent scaled by PERCENTAGE_SCALE\n   *  @return scaledAmount Percent of `amount`.\n   */\n  function _scaleAmountByPercentage(uint256 amount, uint256 scaledPercent)\n    internal\n    pure\n    returns (uint256 scaledAmount)\n  {\n    // use assembly to bypass checking for overflow & division by 0\n    // scaledPercent has been validated to be < PERCENTAGE_SCALE)\n    // & PERCENTAGE_SCALE will never be 0\n    // pernicious ERC20s may cause overflow, but results do not affect ETH & other ERC20 balances\n    assembly {\n      /* eg (100 * 2*1e4) / (1e6) */\n      scaledAmount := div(mul(amount, scaledPercent), PERCENTAGE_SCALE)\n    }\n  }\n\n  /** @notice Withdraw ETH for account `account`\n   *  @param account Account to withdrawn ETH for\n   *  @return withdrawn Amount of ETH withdrawn\n   */\n  function _withdraw(address account) internal returns (uint256 withdrawn) {\n    // leave balance of 1 for gas efficiency\n    // underflow if ethBalance is 0\n    withdrawn = ethBalances[account] - 1;\n    ethBalances[account] = 1;\n    account.safeTransferETH(withdrawn);\n  }\n\n  /** @notice Withdraw ERC20 `token` for account `account`\n   *  @param account Account to withdrawn ERC20 `token` for\n   *  @return withdrawn Amount of ERC20 `token` withdrawn\n   */\n  function _withdrawERC20(address account, ERC20 token)\n    internal\n    returns (uint256 withdrawn)\n  {\n    // leave balance of 1 for gas efficiency\n    // underflow if erc20Balance is 0\n    withdrawn = erc20Balances[token][account] - 1;\n    erc20Balances[token][account] = 1;\n    token.safeTransfer(account, withdrawn);\n  }\n}\n"
      },
      "contracts/libraries/Clones.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.8.4;\n\n/// @notice create opcode failed\nerror CreateError();\n/// @notice create2 opcode failed\nerror Create2Error();\n\nlibrary Clones {\n  /**\n   * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`\n   * except when someone calls `receive()` and then it emits an event matching\n   * `SplitWallet.ReceiveETH(indexed address, amount)`\n   * Inspired by OZ & 0age's minimal clone implementations based on eip 1167 found at\n   * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.3.0/contracts/proxy/Clones.sol\n   * and https://medium.com/coinmonks/the-more-minimal-proxy-5756ae08ee48\n   *\n   * This function uses the create2 opcode and a `salt` to deterministically deploy\n   * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n   * the clones cannot be deployed twice at the same address.\n   *\n   * init: 0x3d605d80600a3d3981f3\n   * 3d   returndatasize  0\n   * 605d push1 0x5d      0x5d 0\n   * 80   dup1            0x5d 0x5d 0\n   * 600a push1 0x0a      0x0a 0x5d 0x5d 0\n   * 3d   returndatasize  0 0x0a 0x5d 0x5d 0\n   * 39   codecopy        0x5d 0                      destOffset offset length     memory[destOffset:destOffset+length] = address(this).code[offset:offset+length]       copy executing contracts bytecode\n   * 81   dup2            0 0x5d 0\n   * f3   return          0                           offset length                return memory[offset:offset+length]                                                   returns from this contract call\n   *\n   * contract: 0x36603057343d52307f830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b160203da23d3df35b3d3d3d3d363d3d37363d73bebebebebebebebebebebebebebebebebebebebe5af43d3d93803e605b57fd5bf3\n   *     0x000     36       calldatasize      cds\n   *     0x001     6030     push1 0x30        0x30 cds\n   * ,=< 0x003     57       jumpi\n   * |   0x004     34       callvalue         cv\n   * |   0x005     3d       returndatasize    0 cv\n   * |   0x006     52       mstore\n   * |   0x007     30       address           addr\n   * |   0x008     7f830d.. push32 0x830d..   id addr\n   * |   0x029     6020     push1 0x20        0x20 id addr\n   * |   0x02b     3d       returndatasize    0 0x20 id addr\n   * |   0x02c     a2       log2\n   * |   0x02d     3d       returndatasize    0\n   * |   0x02e     3d       returndatasize    0 0\n   * |   0x02f     f3       return\n   * `-> 0x030     5b       jumpdest\n   *     0x031     3d       returndatasize    0\n   *     0x032     3d       returndatasize    0 0\n   *     0x033     3d       returndatasize    0 0 0\n   *     0x034     3d       returndatasize    0 0 0 0\n   *     0x035     36       calldatasize      cds 0 0 0 0\n   *     0x036     3d       returndatasize    0 cds 0 0 0 0\n   *     0x037     3d       returndatasize    0 0 cds 0 0 0 0\n   *     0x038     37       calldatacopy      0 0 0 0\n   *     0x039     36       calldatasize      cds 0 0 0 0\n   *     0x03a     3d       returndatasize    0 cds 0 0 0 0\n   *     0x03b     73bebe.. push20 0xbebe..   0xbebe 0 cds 0 0 0 0\n   *     0x050     5a       gas               gas 0xbebe 0 cds 0 0 0 0\n   *     0x051     f4       delegatecall      suc 0 0\n   *     0x052     3d       returndatasize    rds suc 0 0\n   *     0x053     3d       returndatasize    rds rds suc 0 0\n   *     0x054     93       swap4             0 rds suc 0 rds\n   *     0x055     80       dup1              0 0 rds suc 0 rds\n   *     0x056     3e       returndatacopy    suc 0 rds\n   *     0x057     605b     push1 0x5b        0x5b suc 0 rds\n   * ,=< 0x059     57       jumpi             0 rds\n   * |   0x05a     fd       revert\n   * `-> 0x05b     5b       jumpdest          0 rds\n   *     0x05c     f3       return\n   *\n   */\n  function clone(address implementation) internal returns (address instance) {\n    assembly {\n      let ptr := mload(0x40)\n      mstore(\n        ptr,\n        0x3d605d80600a3d3981f336603057343d52307f00000000000000000000000000\n      )\n      mstore(\n        add(ptr, 0x13),\n        0x830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b1\n      )\n      mstore(\n        add(ptr, 0x33),\n        0x60203da23d3df35b3d3d3d3d363d3d37363d7300000000000000000000000000\n      )\n      mstore(add(ptr, 0x46), shl(0x60, implementation))\n      mstore(\n        add(ptr, 0x5a),\n        0x5af43d3d93803e605b57fd5bf300000000000000000000000000000000000000\n      )\n      instance := create(0, ptr, 0x67)\n    }\n    if (instance == address(0)) revert CreateError();\n  }\n\n  function cloneDeterministic(address implementation, bytes32 salt)\n    internal\n    returns (address instance)\n  {\n    assembly {\n      let ptr := mload(0x40)\n      mstore(\n        ptr,\n        0x3d605d80600a3d3981f336603057343d52307f00000000000000000000000000\n      )\n      mstore(\n        add(ptr, 0x13),\n        0x830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b1\n      )\n      mstore(\n        add(ptr, 0x33),\n        0x60203da23d3df35b3d3d3d3d363d3d37363d7300000000000000000000000000\n      )\n      mstore(add(ptr, 0x46), shl(0x60, implementation))\n      mstore(\n        add(ptr, 0x5a),\n        0x5af43d3d93803e605b57fd5bf300000000000000000000000000000000000000\n      )\n      instance := create2(0, ptr, 0x67, salt)\n    }\n    if (instance == address(0)) revert Create2Error();\n  }\n\n  /**\n   * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n   */\n  function predictDeterministicAddress(\n    address implementation,\n    bytes32 salt,\n    address deployer\n  ) internal pure returns (address predicted) {\n    assembly {\n      let ptr := mload(0x40)\n      mstore(\n        ptr,\n        0x3d605d80600a3d3981f336603057343d52307f00000000000000000000000000\n      )\n      mstore(\n        add(ptr, 0x13),\n        0x830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b1\n      )\n      mstore(\n        add(ptr, 0x33),\n        0x60203da23d3df35b3d3d3d3d363d3d37363d7300000000000000000000000000\n      )\n      mstore(add(ptr, 0x46), shl(0x60, implementation))\n      mstore(\n        add(ptr, 0x5a),\n        0x5af43d3d93803e605b57fd5bf3ff000000000000000000000000000000000000\n      )\n      mstore(add(ptr, 0x68), shl(0x60, deployer))\n      mstore(add(ptr, 0x7c), salt)\n      mstore(add(ptr, 0x9c), keccak256(ptr, 0x67))\n      predicted := keccak256(add(ptr, 0x67), 0x55)\n    }\n  }\n\n  /**\n   * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n   */\n  function predictDeterministicAddress(address implementation, bytes32 salt)\n    internal\n    view\n    returns (address predicted)\n  {\n    return predictDeterministicAddress(implementation, salt, address(this));\n  }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates",
            "devdoc",
            "userdoc"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "@rari-capital/solmate/src/tokens/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)",
            "details": "Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "PERMIT_TYPEHASH()": "30adf81f",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\",\"details\":\"Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Modern and gas efficient ERC20 + EIP-2612 implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@rari-capital/solmate/src/tokens/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*///////////////////////////////////////////////////////////////\\n                                  EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    bytes32 public constant PERMIT_TYPEHASH =\\n        keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            bytes32 digest = keccak256(\\n                abi.encodePacked(\\n                    \\\"\\\\x19\\\\x01\\\",\\n                    DOMAIN_SEPARATOR(),\\n                    keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\n                )\\n            );\\n\\n            address recoveredAddress = ecrecover(digest, v, r, s);\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 20,
                "contract": "@rari-capital/solmate/src/tokens/ERC20.sol:ERC20",
                "label": "name",
                "offset": 0,
                "slot": "0",
                "type": "t_string_storage"
              },
              {
                "astId": 22,
                "contract": "@rari-capital/solmate/src/tokens/ERC20.sol:ERC20",
                "label": "symbol",
                "offset": 0,
                "slot": "1",
                "type": "t_string_storage"
              },
              {
                "astId": 26,
                "contract": "@rari-capital/solmate/src/tokens/ERC20.sol:ERC20",
                "label": "totalSupply",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 30,
                "contract": "@rari-capital/solmate/src/tokens/ERC20.sol:ERC20",
                "label": "balanceOf",
                "offset": 0,
                "slot": "3",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 36,
                "contract": "@rari-capital/solmate/src/tokens/ERC20.sol:ERC20",
                "label": "allowance",
                "offset": 0,
                "slot": "4",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
              },
              {
                "astId": 49,
                "contract": "@rari-capital/solmate/src/tokens/ERC20.sol:ERC20",
                "label": "nonces",
                "offset": 0,
                "slot": "5",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(address => uint256))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_uint256)"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "notice": "Modern and gas efficient ERC20 + EIP-2612 implementation.",
            "version": 1
          }
        }
      },
      "@rari-capital/solmate/src/utils/SafeTransferLib.sol": {
        "SafeTransferLib": {
          "abi": [],
          "devdoc": {
            "author": "Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol)Modified from Gnosis (https://github.com/gnosis/gp-v2-contracts/blob/main/src/contracts/libraries/GPv2SafeERC20.sol)",
            "details": "Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ddbb70356f0f8f58797b7ee300ef6c644118430e957530d285acabbd78276b64736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xDD 0xBB PUSH17 0x356F0F8F58797B7EE300EF6C644118430E SWAP6 PUSH22 0x30D285ACABBD78276B64736F6C634300080400330000 ",
              "sourceMap": "571:5258:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;571:5258:1;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ddbb70356f0f8f58797b7ee300ef6c644118430e957530d285acabbd78276b64736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xDD 0xBB PUSH17 0x356F0F8F58797B7EE300EF6C644118430E SWAP6 PUSH22 0x30D285ACABBD78276B64736F6C634300080400330000 ",
              "sourceMap": "571:5258:1:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "103",
                "totalCost": "17303"
              },
              "internal": {
                "didLastOptionalReturnCallSucceed(bool)": "infinite",
                "safeApprove(contract ERC20,address,uint256)": "infinite",
                "safeTransfer(contract ERC20,address,uint256)": "infinite",
                "safeTransferETH(address,uint256)": "infinite",
                "safeTransferFrom(contract ERC20,address,address,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol)Modified from Gnosis (https://github.com/gnosis/gp-v2-contracts/blob/main/src/contracts/libraries/GPv2SafeERC20.sol)\",\"details\":\"Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Safe ETH and ERC20 transfer library that gracefully handles missing return values.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@rari-capital/solmate/src/utils/SafeTransferLib.sol\":\"SafeTransferLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*///////////////////////////////////////////////////////////////\\n                                  EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    bytes32 public constant PERMIT_TYPEHASH =\\n        keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            bytes32 digest = keccak256(\\n                abi.encodePacked(\\n                    \\\"\\\\x19\\\\x01\\\",\\n                    DOMAIN_SEPARATOR(),\\n                    keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\n                )\\n            );\\n\\n            address recoveredAddress = ecrecover(digest, v, r, s);\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\"},\"@rari-capital/solmate/src/utils/SafeTransferLib.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\nimport {ERC20} from \\\"../tokens/ERC20.sol\\\";\\n\\n/// @notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol)\\n/// @author Modified from Gnosis (https://github.com/gnosis/gp-v2-contracts/blob/main/src/contracts/libraries/GPv2SafeERC20.sol)\\n/// @dev Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.\\nlibrary SafeTransferLib {\\n    /*///////////////////////////////////////////////////////////////\\n                            ETH OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Transfer the ETH and store if it succeeded or not.\\n            callStatus := call(gas(), to, amount, 0, 0, 0, 0)\\n        }\\n\\n        require(callStatus, \\\"ETH_TRANSFER_FAILED\\\");\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                           ERC20 OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function safeTransferFrom(\\n        ERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Get a pointer to some free memory.\\n            let freeMemoryPointer := mload(0x40)\\n\\n            // Write the abi-encoded calldata to memory piece by piece:\\n            mstore(freeMemoryPointer, 0x23b872dd00000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\\n            mstore(add(freeMemoryPointer, 4), and(from, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"from\\\" argument.\\n            mstore(add(freeMemoryPointer, 36), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"to\\\" argument.\\n            mstore(add(freeMemoryPointer, 68), amount) // Finally append the \\\"amount\\\" argument. No mask as it's a full 32 byte value.\\n\\n            // Call the token and store if it succeeded or not.\\n            // We use 100 because the calldata length is 4 + 32 * 3.\\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 100, 0, 0)\\n        }\\n\\n        require(didLastOptionalReturnCallSucceed(callStatus), \\\"TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function safeTransfer(\\n        ERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Get a pointer to some free memory.\\n            let freeMemoryPointer := mload(0x40)\\n\\n            // Write the abi-encoded calldata to memory piece by piece:\\n            mstore(freeMemoryPointer, 0xa9059cbb00000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\\n            mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"to\\\" argument.\\n            mstore(add(freeMemoryPointer, 36), amount) // Finally append the \\\"amount\\\" argument. No mask as it's a full 32 byte value.\\n\\n            // Call the token and store if it succeeded or not.\\n            // We use 68 because the calldata length is 4 + 32 * 2.\\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 68, 0, 0)\\n        }\\n\\n        require(didLastOptionalReturnCallSucceed(callStatus), \\\"TRANSFER_FAILED\\\");\\n    }\\n\\n    function safeApprove(\\n        ERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Get a pointer to some free memory.\\n            let freeMemoryPointer := mload(0x40)\\n\\n            // Write the abi-encoded calldata to memory piece by piece:\\n            mstore(freeMemoryPointer, 0x095ea7b300000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\\n            mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"to\\\" argument.\\n            mstore(add(freeMemoryPointer, 36), amount) // Finally append the \\\"amount\\\" argument. No mask as it's a full 32 byte value.\\n\\n            // Call the token and store if it succeeded or not.\\n            // We use 68 because the calldata length is 4 + 32 * 2.\\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 68, 0, 0)\\n        }\\n\\n        require(didLastOptionalReturnCallSucceed(callStatus), \\\"APPROVE_FAILED\\\");\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                         INTERNAL HELPER LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function didLastOptionalReturnCallSucceed(bool callStatus) private pure returns (bool success) {\\n        assembly {\\n            // Get how many bytes the call returned.\\n            let returnDataSize := returndatasize()\\n\\n            // If the call reverted:\\n            if iszero(callStatus) {\\n                // Copy the revert message into memory.\\n                returndatacopy(0, 0, returnDataSize)\\n\\n                // Revert with the same message.\\n                revert(0, returnDataSize)\\n            }\\n\\n            switch returnDataSize\\n            case 32 {\\n                // Copy the return data into memory.\\n                returndatacopy(0, 0, returnDataSize)\\n\\n                // Set success to whether it returned true.\\n                success := iszero(iszero(mload(0)))\\n            }\\n            case 0 {\\n                // There was no return data.\\n                success := 1\\n            }\\n            default {\\n                // It returned some malformed input.\\n                success := 0\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcc39d0f5693925ea1e8c517f7cc24211a9899c83a57e62d806180cdb056b6b75\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "notice": "Safe ETH and ERC20 transfer library that gracefully handles missing return values.",
            "version": 1
          }
        }
      },
      "contracts/SplitMain.sol": {
        "SplitMain": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "Create2Error",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "CreateError",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newController",
                  "type": "address"
                }
              ],
              "name": "InvalidNewController",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "accountsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "allocationsLength",
                  "type": "uint256"
                }
              ],
              "name": "InvalidSplit__AccountsAndAllocationsMismatch",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "InvalidSplit__AccountsOutOfOrder",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "InvalidSplit__AllocationMustBePositive",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "allocationsSum",
                  "type": "uint32"
                }
              ],
              "name": "InvalidSplit__InvalidAllocationsSum",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                }
              ],
              "name": "InvalidSplit__InvalidDistributorFee",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ],
              "name": "InvalidSplit__InvalidHash",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "accountsLength",
                  "type": "uint256"
                }
              ],
              "name": "InvalidSplit__TooFewAccounts",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                }
              ],
              "name": "CancelControlTransfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousController",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newController",
                  "type": "address"
                }
              ],
              "name": "ControlTransfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "controller",
                  "type": "address"
                }
              ],
              "name": "CreateSplit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "distributorAddress",
                  "type": "address"
                }
              ],
              "name": "DistributeERC20",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "distributorAddress",
                  "type": "address"
                }
              ],
              "name": "DistributeETH",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newPotentialController",
                  "type": "address"
                }
              ],
              "name": "InitiateControlTransfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                }
              ],
              "name": "UpdateSplit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "ethAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "contract ERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "tokenAmounts",
                  "type": "uint256[]"
                }
              ],
              "name": "Withdrawal",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "PERCENTAGE_SCALE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                }
              ],
              "name": "acceptControl",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                }
              ],
              "name": "cancelControlTransfer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "controller",
                  "type": "address"
                }
              ],
              "name": "createSplit",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "distributorAddress",
                  "type": "address"
                }
              ],
              "name": "distributeERC20",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "distributorAddress",
                  "type": "address"
                }
              ],
              "name": "distributeETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                }
              ],
              "name": "getController",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "getERC20Balance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getETHBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                }
              ],
              "name": "getHash",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                }
              ],
              "name": "getNewPotentialController",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                }
              ],
              "name": "makeSplitImmutable",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                }
              ],
              "name": "predictImmutableSplitAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "newController",
                  "type": "address"
                }
              ],
              "name": "transferControl",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "distributorAddress",
                  "type": "address"
                }
              ],
              "name": "updateAndDistributeERC20",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "distributorAddress",
                  "type": "address"
                }
              ],
              "name": "updateAndDistributeETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                }
              ],
              "name": "updateSplit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "walletImplementation",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawETH",
                  "type": "uint256"
                },
                {
                  "internalType": "contract ERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "devdoc": {
            "author": "0xSplits <will@0xSplits.xyz>",
            "details": "Split recipients, ownerships, and keeper fees are stored onchain as calldata & re-passed as args / validated via hashing when needed. Each split gets its own address & proxy for maximum composability with other contracts onchain. For these proxies, we extended EIP-1167 Minimal Proxy Contract to avoid `DELEGATECALL` inside `receive()` to accept hard gas-capped `sends` & `transfers`.",
            "errors": {
              "InvalidNewController(address)": [
                {
                  "params": {
                    "newController": "Invalid new controller"
                  }
                }
              ],
              "InvalidSplit__AccountsAndAllocationsMismatch(uint256,uint256)": [
                {
                  "params": {
                    "accountsLength": "Length of accounts array",
                    "allocationsLength": "Length of percentAllocations array"
                  }
                }
              ],
              "InvalidSplit__AccountsOutOfOrder(uint256)": [
                {
                  "params": {
                    "index": "Index of out-of-order account"
                  }
                }
              ],
              "InvalidSplit__AllocationMustBePositive(uint256)": [
                {
                  "params": {
                    "index": "Index of zero percentAllocation"
                  }
                }
              ],
              "InvalidSplit__InvalidAllocationsSum(uint32)": [
                {
                  "params": {
                    "allocationsSum": "Sum of percentAllocations array"
                  }
                }
              ],
              "InvalidSplit__InvalidDistributorFee(uint32)": [
                {
                  "params": {
                    "distributorFee": "Invalid distributorFee amount"
                  }
                }
              ],
              "InvalidSplit__InvalidHash(bytes32)": [
                {
                  "params": {
                    "hash": "Invalid hash"
                  }
                }
              ],
              "InvalidSplit__TooFewAccounts(uint256)": [
                {
                  "params": {
                    "accountsLength": "Length of accounts array"
                  }
                }
              ],
              "Unauthorized(address)": [
                {
                  "params": {
                    "sender": "Transaction sender"
                  }
                }
              ]
            },
            "kind": "dev",
            "methods": {
              "acceptControl(address)": {
                "params": {
                  "split": "Address of mutable split to accept control transfer for"
                }
              },
              "cancelControlTransfer(address)": {
                "params": {
                  "split": "Address of mutable split to cancel control transfer for"
                }
              },
              "createSplit(address[],uint32[],uint32,address)": {
                "params": {
                  "accounts": "Ordered, unique list of addresses with ownership in the split",
                  "controller": "Controlling address (0x0 if immutable)",
                  "distributorFee": "Keeper fee paid by split to cover gas costs of distribution",
                  "percentAllocations": "Percent allocations associated with each address"
                },
                "returns": {
                  "split": "Address of newly created split"
                }
              },
              "distributeERC20(address,address,address[],uint32[],uint32,address)": {
                "details": "`accounts`, `percentAllocations`, and `distributorFee` are verified by hashing  & comparing to the hash in storage associated with split `split`pernicious ERC20s may cause overflow in this function inside  _scaleAmountByPercentage, but results do not affect ETH & other ERC20 balances",
                "params": {
                  "accounts": "Ordered, unique list of addresses with ownership in the split",
                  "distributorAddress": "Address to pay `distributorFee` to",
                  "distributorFee": "Keeper fee paid by split to cover gas costs of distribution",
                  "percentAllocations": "Percent allocations associated with each address",
                  "split": "Address of split to distribute balance for",
                  "token": "Address of ERC20 to distribute balance for"
                }
              },
              "distributeETH(address,address[],uint32[],uint32,address)": {
                "details": "`accounts`, `percentAllocations`, and `distributorFee` are verified by hashing  & comparing to the hash in storage associated with split `split`",
                "params": {
                  "accounts": "Ordered, unique list of addresses with ownership in the split",
                  "distributorAddress": "Address to pay `distributorFee` to",
                  "distributorFee": "Keeper fee paid by split to cover gas costs of distribution",
                  "percentAllocations": "Percent allocations associated with each address",
                  "split": "Address of split to distribute balance for"
                }
              },
              "getController(address)": {
                "params": {
                  "split": "Split to return controller for"
                },
                "returns": {
                  "_0": "Split's controller"
                }
              },
              "getERC20Balance(address,address)": {
                "params": {
                  "account": "Account to return ERC20 `token` balance for",
                  "token": "Token to return balance for"
                },
                "returns": {
                  "_0": "Account's balance of `token`"
                }
              },
              "getETHBalance(address)": {
                "params": {
                  "account": "Account to return ETH balance for"
                },
                "returns": {
                  "_0": "Account's balance of ETH"
                }
              },
              "getHash(address)": {
                "params": {
                  "split": "Split to return hash for"
                },
                "returns": {
                  "_0": "Split's hash"
                }
              },
              "getNewPotentialController(address)": {
                "params": {
                  "split": "Split to return newPotentialController for"
                },
                "returns": {
                  "_0": "Split's newPotentialController"
                }
              },
              "makeSplitImmutable(address)": {
                "params": {
                  "split": "Address of mutable split to turn immutable"
                }
              },
              "predictImmutableSplitAddress(address[],uint32[],uint32)": {
                "params": {
                  "accounts": "Ordered, unique list of addresses with ownership in the split",
                  "distributorFee": "Keeper fee paid by split to cover gas costs of distribution",
                  "percentAllocations": "Percent allocations associated with each address"
                },
                "returns": {
                  "split": "Predicted address of such an immutable split"
                }
              },
              "transferControl(address,address)": {
                "details": "Two-step control transfer inspired by [dharma](https://github.com/dharma-eng/dharma-smart-wallet/blob/master/contracts/helpers/TwoStepOwnable.sol)",
                "params": {
                  "newController": "Address to begin transferring control to",
                  "split": "Address of mutable split to transfer control for"
                }
              },
              "updateAndDistributeERC20(address,address,address[],uint32[],uint32,address)": {
                "details": "only callable by SplitControllerpernicious ERC20s may cause overflow in this function inside  _scaleAmountByPercentage, but results do not affect ETH & other ERC20 balances",
                "params": {
                  "accounts": "Ordered, unique list of addresses with ownership in the split",
                  "distributorAddress": "Address to pay `distributorFee` to",
                  "distributorFee": "Keeper fee paid by split to cover gas costs of distribution",
                  "percentAllocations": "Percent allocations associated with each address",
                  "split": "Address of split to distribute balance for",
                  "token": "Address of ERC20 to distribute balance for"
                }
              },
              "updateAndDistributeETH(address,address[],uint32[],uint32,address)": {
                "details": "only callable by SplitController",
                "params": {
                  "accounts": "Ordered, unique list of addresses with ownership in the split",
                  "distributorAddress": "Address to pay `distributorFee` to",
                  "distributorFee": "Keeper fee paid by split to cover gas costs of distribution",
                  "percentAllocations": "Percent allocations associated with each address",
                  "split": "Address of split to distribute balance for"
                }
              },
              "updateSplit(address,address[],uint32[],uint32)": {
                "params": {
                  "accounts": "Ordered, unique list of addresses with ownership in the split",
                  "distributorFee": "Keeper fee paid by split to cover gas costs of distribution",
                  "percentAllocations": "Percent allocations associated with each address",
                  "split": "Address of mutable split to update"
                }
              },
              "withdraw(address,uint256,address[])": {
                "params": {
                  "account": "Address to withdraw on behalf of",
                  "tokens": "Addresses of ERC20s to withdraw",
                  "withdrawETH": "Withdraw all ETH if nonzero"
                }
              }
            },
            "title": "SplitMain",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a06040523480156200001157600080fd5b50604051620000209062000054565b604051809103906000f0801580156200003d573d6000803e3d6000fd5b5060601b6001600160601b03191660805262000062565b6103a0806200323283390190565b60805160601c61319c62000096600039600081816102b001528181610c1a0152818161106c015261109d015261319c6000f3fe6080604052600436106101185760003560e01c806377b1e4e9116100a0578063c7de644011610064578063c7de64401461034e578063d0e4b2f41461036e578063e10e51d61461038e578063e61cb05e146103cb578063ecef0ace146103eb57600080fd5b806377b1e4e91461027e5780638117abc11461029e57806388c662aa146102d2578063a5e3909e1461030e578063c3a8962c1461032e57600080fd5b80633bb66a7b116100e75780633bb66a7b146101cf5780633f26479e146101ef57806352844dd3146102065780636e5f69191461023e5780637601f7821461025e57600080fd5b80631267c6da146101245780631581130214610146578063189cbaa0146101665780631da0b8fc1461018657600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b5061014461013f366004612ae7565b61040b565b005b34801561015257600080fd5b50610144610161366004612c81565b6104a6565b34801561017257600080fd5b50610144610181366004612ae7565b61081a565b34801561019257600080fd5b506101bc6101a1366004612ae7565b6001600160a01b031660009081526002602052604090205490565b6040519081526020015b60405180910390f35b3480156101db57600080fd5b506101bc6101ea366004612ae7565b6108e5565b3480156101fb57600080fd5b506101bc620f424081565b34801561021257600080fd5b50610226610221366004612d92565b61093e565b6040516001600160a01b0390911681526020016101c6565b34801561024a57600080fd5b50610144610259366004612d38565b610c4d565b34801561026a57600080fd5b50610226610279366004612e10565b610d82565b34801561028a57600080fd5b50610144610299366004612c81565b611160565b3480156102aa57600080fd5b506102267f000000000000000000000000000000000000000000000000000000000000000081565b3480156102de57600080fd5b506102266102ed366004612ae7565b6001600160a01b039081166000908152600260205260409020600101541690565b34801561031a57600080fd5b50610144610329366004612bca565b6114a3565b34801561033a57600080fd5b506101bc610349366004612c6f565b6117c6565b34801561035a57600080fd5b50610144610369366004612ae7565b61189a565b34801561037a57600080fd5b50610144610389366004612b03565b611969565b34801561039a57600080fd5b506102266103a9366004612ae7565b6001600160a01b03908116600090815260026020819052604090912001541690565b3480156103d757600080fd5b506101446103e6366004612bca565b611a3b565b3480156103f757600080fd5b50610144610406366004612b3b565b611d8b565b6001600160a01b0381811660009081526002602052604090206001015482911633146104515760405163472511eb60e11b81523360048201526024015b60405180910390fd5b6001600160a01b038216600081815260026020819052604080832090910180546001600160a01b0319169055517f6c2460a415b84be3720c209fe02f2cad7a6bcba21e8637afe8957b7ec4b6ef879190a25050565b85858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808902828101820190935288825290935088925087918291850190849080828437600092019190915250508351869250600211159050610535578251604051630e8c626560e41b815260040161044891815260200190565b8151835114610564578251825160405163b34f351d60e01b815260048101929092526024820152604401610448565b620f42406105718361203c565b63ffffffff16146105a7576105858261203c565b60405163fcc487c160e01b815263ffffffff9091166004820152602401610448565b82516000190160005b8181101561069e578481600101815181106105db57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031685828151811061060c57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03161061063e5760405163ac6bd23360e01b815260048101829052602401610448565b600063ffffffff1684828151811061066657634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff16141561069657604051630db7e4c760e01b815260048101829052602401610448565b6001016105b0565b50600063ffffffff168382815181106106c757634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff1614156106f757604051630db7e4c760e01b815260048101829052602401610448565b50620186a08163ffffffff16111561072a5760405163308440e360e21b815263ffffffff82166004820152602401610448565b61079a8b8a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c9182918501908490808284376000920191909152508b925061208f915050565b61080d8b8b8b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808f0282810182019093528e82529093508e92508d9182918501908490808284376000920191909152508c92508b91506120e19050565b5050505050505050505050565b6001600160a01b03818116600090815260026020526040902060010154829116331461085b5760405163472511eb60e11b8152336004820152602401610448565b6001600160a01b03808316600081815260026020819052604080832091820180546001600160a01b0319169055600190910154905191931691907f943d69cf2bbe08a9d44b3c4ce6da17d939d758739370620871ce99a6437866d0908490a4506001600160a01b0316600090815260026020526040902060010180546001600160a01b0319169055565b6001600160a01b038116600090815260026020526040812054610909576000610915565b816001600160a01b0316315b6001600160a01b03831660009081526020819052604090205461093891906130e1565b92915050565b6000858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040805160208089028281018201909352888252909350889250879182918501908490808284376000920191909152505083518692506002111590506109cf578251604051630e8c626560e41b815260040161044891815260200190565b81518351146109fe578251825160405163b34f351d60e01b815260048101929092526024820152604401610448565b620f4240610a0b8361203c565b63ffffffff1614610a1f576105858261203c565b82516000190160005b81811015610b1657848160010181518110610a5357634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316858281518110610a8457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031610610ab65760405163ac6bd23360e01b815260048101829052602401610448565b600063ffffffff16848281518110610ade57634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415610b0e57604051630db7e4c760e01b815260048101829052602401610448565b600101610a28565b50600063ffffffff16838281518110610b3f57634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415610b6f57604051630db7e4c760e01b815260048101829052602401610448565b50620186a08163ffffffff161115610ba25760405163308440e360e21b815263ffffffff82166004820152602401610448565b6000610c138a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c9182918501908490808284376000920191909152508b92506123bb915050565b9050610c3f7f0000000000000000000000000000000000000000000000000000000000000000826123f1565b9a9950505050505050505050565b60008167ffffffffffffffff811115610c7657634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610c9f578160200160208202803683370190505b50905060008415610cb657610cb386612496565b90505b60005b83811015610d3257610cff87868684818110610ce557634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610cfa9190612ae7565b6124e9565b838281518110610d1f57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101610cb9565b50856001600160a01b03167fa9e30bf144f83390a4fe47562a4e16892108102221c674ff538da0b72a83d17482868686604051610d729493929190613051565b60405180910390a2505050505050565b600086868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808a02828101820190935289825290935089925088918291850190849080828437600092019190915250508351879250600211159050610e13578251604051630e8c626560e41b815260040161044891815260200190565b8151835114610e42578251825160405163b34f351d60e01b815260048101929092526024820152604401610448565b620f4240610e4f8361203c565b63ffffffff1614610e63576105858261203c565b82516000190160005b81811015610f5a57848160010181518110610e9757634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316858281518110610ec857634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031610610efa5760405163ac6bd23360e01b815260048101829052602401610448565b600063ffffffff16848281518110610f2257634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415610f5257604051630db7e4c760e01b815260048101829052602401610448565b600101610e6c565b50600063ffffffff16838281518110610f8357634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415610fb357604051630db7e4c760e01b815260048101829052602401610448565b50620186a08163ffffffff161115610fe65760405163308440e360e21b815263ffffffff82166004820152602401610448565b60006110578b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808f0282810182019093528e82529093508e92508d9182918501908490808284376000920191909152508c92506123bb915050565b90506001600160a01b038616611098576110917f000000000000000000000000000000000000000000000000000000000000000082612555565b94506110f5565b6110c17f0000000000000000000000000000000000000000000000000000000000000000612605565b6001600160a01b03818116600090815260026020526040902060010180546001600160a01b03191691891691909117905594505b6001600160a01b03851660008181526002602052604090819020839055517fd2bcf51a5767c814cfe0266a99141f75a32103bbf8c400fbc1ac0c3b73ce25e89061114a908e908e908e908e908e908e90613000565b60405180910390a2505050509695505050505050565b6001600160a01b0388811660009081526002602052604090206001015489911633146111a15760405163472511eb60e11b8152336004820152602401610448565b86868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808a02828101820190935289825290935089925088918291850190849080828437600092019190915250508351879250600211159050611230578251604051630e8c626560e41b815260040161044891815260200190565b815183511461125f578251825160405163b34f351d60e01b815260048101929092526024820152604401610448565b620f424061126c8361203c565b63ffffffff1614611280576105858261203c565b82516000190160005b81811015611377578481600101815181106112b457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03168582815181106112e557634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316106113175760405163ac6bd23360e01b815260048101829052602401610448565b600063ffffffff1684828151811061133f57634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff16141561136f57604051630db7e4c760e01b815260048101829052602401610448565b600101611289565b50600063ffffffff168382815181106113a057634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff1614156113d057604051630db7e4c760e01b815260048101829052602401610448565b50620186a08163ffffffff1611156114035760405163308440e360e21b815263ffffffff82166004820152602401610448565b6114118c8b8b8b8b8b6126b4565b6114958c8c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508d92508c91506120e19050565b505050505050505050505050565b6001600160a01b0387811660009081526002602052604090206001015488911633146114e45760405163472511eb60e11b8152336004820152602401610448565b86868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808a02828101820190935289825290935089925088918291850190849080828437600092019190915250508351879250600211159050611573578251604051630e8c626560e41b815260040161044891815260200190565b81518351146115a2578251825160405163b34f351d60e01b815260048101929092526024820152604401610448565b620f42406115af8361203c565b63ffffffff16146115c3576105858261203c565b82516000190160005b818110156116ba578481600101815181106115f757634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031685828151811061162857634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03161061165a5760405163ac6bd23360e01b815260048101829052602401610448565b600063ffffffff1684828151811061168257634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff1614156116b257604051630db7e4c760e01b815260048101829052602401610448565b6001016115cc565b50600063ffffffff168382815181106116e357634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff16141561171357604051630db7e4c760e01b815260048101829052602401610448565b50620186a08163ffffffff1611156117465760405163308440e360e21b815263ffffffff82166004820152602401610448565b6117548b8b8b8b8b8b6126b4565b61080d8b8b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808f0282810182019093528e82529093508e92508d9182918501908490808284376000920191909152508c92508b915061278d9050565b6001600160a01b0382166000908152600260205260408120546117ea576000611863565b6040516370a0823160e01b81526001600160a01b0384811660048301528316906370a082319060240160206040518083038186803b15801561182b57600080fd5b505afa15801561183f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118639190612ea1565b6001600160a01b0380841660009081526001602090815260408083209388168352929052205461189391906130e1565b9392505050565b6001600160a01b038181166000908152600260208190526040909120015482911633146118dc5760405163472511eb60e11b8152336004820152602401610448565b6001600160a01b03808316600081815260026020819052604080832091820180546001600160a01b0319169055600190910154905133949190911692917f943d69cf2bbe08a9d44b3c4ce6da17d939d758739370620871ce99a6437866d091a4506001600160a01b0316600090815260026020526040902060010180546001600160a01b03191633179055565b6001600160a01b0382811660009081526002602052604090206001015483911633146119aa5760405163472511eb60e11b8152336004820152602401610448565b816001600160a01b0381166119dd5760405163c369130760e01b81526001600160a01b0382166004820152602401610448565b6001600160a01b03848116600081815260026020819052604080832090910180546001600160a01b0319169488169485179055517f107cf6ea8668d533df1aab5bb8b6315bb0c25f0b6c955558d09368f290668fc79190a350505050565b85858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808902828101820190935288825290935088925087918291850190849080828437600092019190915250508351869250600211159050611aca578251604051630e8c626560e41b815260040161044891815260200190565b8151835114611af9578251825160405163b34f351d60e01b815260048101929092526024820152604401610448565b620f4240611b068361203c565b63ffffffff1614611b1a576105858261203c565b82516000190160005b81811015611c1157848160010181518110611b4e57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316858281518110611b7f57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031610611bb15760405163ac6bd23360e01b815260048101829052602401610448565b600063ffffffff16848281518110611bd957634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415611c0957604051630db7e4c760e01b815260048101829052602401610448565b600101611b23565b50600063ffffffff16838281518110611c3a57634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415611c6a57604051630db7e4c760e01b815260048101829052602401610448565b50620186a08163ffffffff161115611c9d5760405163308440e360e21b815263ffffffff82166004820152602401610448565b611d0d8a8a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c9182918501908490808284376000920191909152508b925061208f915050565b611d7f8a8a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c9182918501908490808284376000920191909152508b92508a915061278d9050565b50505050505050505050565b6001600160a01b038681166000908152600260205260409020600101548791163314611dcc5760405163472511eb60e11b8152336004820152602401610448565b85858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808902828101820190935288825290935088925087918291850190849080828437600092019190915250508351869250600211159050611e5b578251604051630e8c626560e41b815260040161044891815260200190565b8151835114611e8a578251825160405163b34f351d60e01b815260048101929092526024820152604401610448565b620f4240611e978361203c565b63ffffffff1614611eab576105858261203c565b82516000190160005b81811015611fa257848160010181518110611edf57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316858281518110611f1057634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031610611f425760405163ac6bd23360e01b815260048101829052602401610448565b600063ffffffff16848281518110611f6a57634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415611f9a57604051630db7e4c760e01b815260048101829052602401610448565b600101611eb4565b50600063ffffffff16838281518110611fcb57634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415611ffb57604051630db7e4c760e01b815260048101829052602401610448565b50620186a08163ffffffff16111561202e5760405163308440e360e21b815263ffffffff82166004820152602401610448565b611d7f8a8a8a8a8a8a6126b4565b8051600090815b818110156120885783818151811061206b57634e487b7160e01b600052603260045260246000fd5b60200260200101518361207e91906130f9565b9250600101612043565b5050919050565b600061209c8484846123bb565b6001600160a01b03861660009081526002602052604090205490915081146120da5760405163dd5ff45760e01b815260048101829052602401610448565b5050505050565b6001600160a01b038581166000818152600160209081526040808320948b16808452949091528082205490516370a0823160e01b815260048101949094529092909183916370a082319060240160206040518083038186803b15801561214657600080fd5b505afa15801561215a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217e9190612ea1565b9050801561218b57600019015b8115612198576001820391505b818101925081156121cc576001600160a01b038089166000908152600160208181526040808420948e168452939052919020555b836001600160a01b0316886001600160a01b03168a6001600160a01b03167fb5ee5dc3d2c31a019bbf2c787e0e9c97971c96aceea1c38c12fc8fd25c536d468660405161221b91815260200190565b60405180910390a463ffffffff85161561228d576001600160a01b038881166000908152600160205260408120620f424063ffffffff89168702049283929088166122665733612268565b875b6001600160a01b03168152602081019190915260400160002080549091019055909203915b865160005b81811015612345576122d6858983815181106122be57634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff16620f424091020490565b6001600160a01b038b1660009081526001602052604081208b519091908c908590811061231357634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b0316825281019190915260400160002080549091019055600101612292565b505080156123b057604051633e0f9fff60e11b81526001600160a01b038981166004830152602482018390528a1690637c1f3ffe90604401600060405180830381600087803b15801561239757600080fd5b505af11580156123ab573d6000803e3d6000fd5b505050505b505050505050505050565b60008383836040516020016123d293929190612f39565b6040516020818303038152906040528051906020012090509392505050565b6000611893838330604051723d605d80600a3d3981f336603057343d52307f60681b81527f830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b160138201527260203da23d3df35b3d3d3d3d363d3d37363d7360681b6033820152606093841b60468201526d5af43d3d93803e605b57fd5bf3ff60901b605a820152921b6068830152607c8201526067808220609c830152605591012090565b6001600160a01b0381166000908152602081905260408120546124bb90600190613121565b6001600160a01b0383166000818152602081905260409020600190559091506124e4908261296f565b919050565b6001600160a01b038082166000908152600160208181526040808420948716845293905291812054909161251c91613121565b6001600160a01b038084166000818152600160208181526040808420958a168452949052929020919091559091506109389084836129c5565b6000604051723d605d80600a3d3981f336603057343d52307f60681b81527f830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b160138201527260203da23d3df35b3d3d3d3d363d3d37363d7360681b60338201528360601b60468201526c5af43d3d93803e605b57fd5bf360981b605a820152826067826000f59150506001600160a01b0381166109385760405163380bbe1360e01b815260040160405180910390fd5b6000604051723d605d80600a3d3981f336603057343d52307f60681b81527f830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b160138201527260203da23d3df35b3d3d3d3d363d3d37363d7360681b60338201528260601b60468201526c5af43d3d93803e605b57fd5bf360981b605a8201526067816000f09150506001600160a01b0381166124e457604051630985da9b60e41b815260040160405180910390fd5b600061272586868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808a028281018201909352898252909350899250889182918501908490808284376000920191909152508792506123bb915050565b6001600160a01b0388166000818152600260205260409081902083905551919250907fce55a01ad467ce2f3080a2cef6eb951b65f489b97956f76c2c04bcddab92aaa99061277c9089908990899089908990612fc0565b60405180910390a250505050505050565b6001600160a01b03851660008181526020819052604081205491319082156127b6576001830392505b5081810182156127dd576001600160a01b0388166000908152602081905260409020600190555b836001600160a01b0316886001600160a01b03167f87c3ca0a87d9b82033e4bc55e6d30621f8d7e0c9d8ca7988edfde8932787b77b8360405161282291815260200190565b60405180910390a363ffffffff85161561288157620f424063ffffffff8616820204806000806001600160a01b03881661285c573361285e565b875b6001600160a01b0316815260208101919091526040016000208054909101905590035b865160005b81811015612907576128b2838983815181106122be57634e487b7160e01b600052603260045260246000fd5b6000808b84815181106128d557634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b0316825281019190915260400160002080549091019055600101612886565b5050811561296557604051632ac3affd60e21b8152600481018390526001600160a01b0389169063ab0ebff490602401600060405180830381600087803b15801561295157600080fd5b505af1158015611495573d6000803e3d6000fd5b5050505050505050565b600080600080600085875af19050806129c05760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606401610448565b505050565b600060405163a9059cbb60e01b81526001600160a01b03841660048201528260248201526000806044836000895af1915050612a0081612a44565b612a3e5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610448565b50505050565b60003d82612a5657806000803e806000fd5b8060208114612a6e578015612a7f5760009250612088565b816000803e60005115159250612088565b5060019392505050565b60008083601f840112612a9a578182fd5b50813567ffffffffffffffff811115612ab1578182fd5b6020830191508360208260051b8501011115612acc57600080fd5b9250929050565b803563ffffffff811681146124e457600080fd5b600060208284031215612af8578081fd5b81356118938161314e565b60008060408385031215612b15578081fd5b8235612b208161314e565b91506020830135612b308161314e565b809150509250929050565b60008060008060008060808789031215612b53578182fd5b8635612b5e8161314e565b9550602087013567ffffffffffffffff80821115612b7a578384fd5b612b868a838b01612a89565b90975095506040890135915080821115612b9e578384fd5b50612bab89828a01612a89565b9094509250612bbe905060608801612ad3565b90509295509295509295565b600080600080600080600060a0888a031215612be4578081fd5b8735612bef8161314e565b9650602088013567ffffffffffffffff80821115612c0b578283fd5b612c178b838c01612a89565b909850965060408a0135915080821115612c2f578283fd5b50612c3c8a828b01612a89565b9095509350612c4f905060608901612ad3565b91506080880135612c5f8161314e565b8091505092959891949750929550565b60008060408385031215612b15578182fd5b60008060008060008060008060c0898b031215612c9c578081fd5b8835612ca78161314e565b97506020890135612cb78161314e565b9650604089013567ffffffffffffffff80821115612cd3578283fd5b612cdf8c838d01612a89565b909850965060608b0135915080821115612cf7578283fd5b50612d048b828c01612a89565b9095509350612d17905060808a01612ad3565b915060a0890135612d278161314e565b809150509295985092959890939650565b60008060008060608587031215612d4d578384fd5b8435612d588161314e565b935060208501359250604085013567ffffffffffffffff811115612d7a578283fd5b612d8687828801612a89565b95989497509550505050565b600080600080600060608688031215612da9578081fd5b853567ffffffffffffffff80821115612dc0578283fd5b612dcc89838a01612a89565b90975095506020880135915080821115612de4578283fd5b50612df188828901612a89565b9094509250612e04905060408701612ad3565b90509295509295909350565b60008060008060008060808789031215612e28578182fd5b863567ffffffffffffffff80821115612e3f578384fd5b612e4b8a838b01612a89565b90985096506020890135915080821115612e63578384fd5b50612e7089828a01612a89565b9095509350612e83905060408801612ad3565b91506060870135612e938161314e565b809150509295509295509295565b600060208284031215612eb2578081fd5b5051919050565b81835260006020808501945082825b85811015612ef6578135612edb8161314e565b6001600160a01b031687529582019590820190600101612ec8565b509495945050505050565b81835260006020808501945082825b85811015612ef65763ffffffff612f2683612ad3565b1687529582019590820190600101612f10565b835160009082906020808801845b83811015612f6c5781516001600160a01b031685529382019390820190600101612f47565b50508651818801939250845b81811015612f9a57845163ffffffff1684529382019392820192600101612f78565b505050612fb3818660e01b6001600160e01b0319169052565b6004019695505050505050565b606081526000612fd4606083018789612eb9565b8281036020840152612fe7818688612f01565b91505063ffffffff831660408301529695505050505050565b60808152600061301460808301888a612eb9565b8281036020840152613027818789612f01565b63ffffffff95909516604084015250506001600160a01b0391909116606090910152949350505050565b84815260606020808301829052908201849052600090859060808401835b8781101561309d5783356130828161314e565b6001600160a01b03168252928201929082019060010161306f565b5084810360408601528551808252908201925081860190845b818110156130d2578251855293830193918301916001016130b6565b50929998505050505050505050565b600082198211156130f4576130f4613138565b500190565b600063ffffffff80831681851680830382111561311857613118613138565b01949350505050565b60008282101561313357613133613138565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461316357600080fd5b5056fea2646970667358221220e9325cf15dd6031aeedffbd7fc8a0dba57af230e427ad6f1099a977b399b2d0964736f6c6343000804003360a060405234801561001057600080fd5b5033606081901b60805261035461004c60003960008181604b0152818160bc015281816101080152818161013c015261018601526103546000f3fe6080604052600436106100345760003560e01c80630e769b2b146100395780637c1f3ffe14610089578063ab0ebff41461009e575b600080fd5b34801561004557600080fd5b5061006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61009c6100973660046102d0565b6100b1565b005b61009c6100ac366004610306565b610131565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100f9576040516282b42960e81b815260040160405180910390fd5b61012d6001600160a01b0383167f0000000000000000000000000000000000000000000000000000000000000000836101af565b5050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610179576040516282b42960e81b815260040160405180910390fd5b6101ac6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682610233565b50565b600060405163a9059cbb60e01b81526001600160a01b03841660048201528260248201526000806044836000895af19150506101ea81610289565b61022d5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064015b60405180910390fd5b50505050565b600080600080600085875af19050806102845760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606401610224565b505050565b60003d8261029b57806000803e806000fd5b80602081146102b35780156102c457600092506102c9565b816000803e600051151592506102c9565b600192505b5050919050565b600080604083850312156102e2578182fd5b82356001600160a01b03811681146102f8578283fd5b946020939093013593505050565b600060208284031215610317578081fd5b503591905056fea2646970667358221220def78b294d6b6603231a559c8366ba0d4f86b7f8e62b7e36307ace99c6f117d064736f6c63430008040033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x20 SWAP1 PUSH3 0x54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x3D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH3 0x62 JUMP JUMPDEST PUSH2 0x3A0 DUP1 PUSH3 0x3232 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x319C PUSH3 0x96 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2B0 ADD MSTORE DUP2 DUP2 PUSH2 0xC1A ADD MSTORE DUP2 DUP2 PUSH2 0x106C ADD MSTORE PUSH2 0x109D ADD MSTORE PUSH2 0x319C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77B1E4E9 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC7DE6440 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC7DE6440 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xD0E4B2F4 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xE10E51D6 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xE61CB05E EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xECEF0ACE EQ PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x77B1E4E9 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x8117ABC1 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x88C662AA EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xA5E3909E EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xC3A8962C EQ PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3BB66A7B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x3BB66A7B EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x3F26479E EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x52844DD3 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6E5F6919 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x7601F782 EQ PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1267C6DA EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x15811302 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x189CBAA0 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x1DA0B8FC EQ PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x11F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE7 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C81 JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE7 JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE7 JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH3 0xF4240 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D92 JUMP JUMPDEST PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D38 JUMP JUMPDEST PUSH2 0xC4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E10 JUMP JUMPDEST PUSH2 0xD82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C81 JUMP JUMPDEST PUSH2 0x1160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BCA JUMP JUMPDEST PUSH2 0x14A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6F JUMP JUMPDEST PUSH2 0x17C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE7 JUMP JUMPDEST PUSH2 0x189A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B03 JUMP JUMPDEST PUSH2 0x1969 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BCA JUMP JUMPDEST PUSH2 0x1A3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B3B JUMP JUMPDEST PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 SWAP2 AND CALLER EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD PUSH32 0x6C2460A415B84BE3720C209FE02F2CAD7A6BCBA21E8637AFE8957B7EC4B6EF87 SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP10 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP9 DUP3 MSTORE SWAP1 SWAP4 POP DUP9 SWAP3 POP DUP8 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP4 MLOAD DUP7 SWAP3 POP PUSH1 0x2 GT ISZERO SWAP1 POP PUSH2 0x535 JUMPI DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xE8C6265 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x564 JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xB34F351D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x448 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x571 DUP4 PUSH2 0x203C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ PUSH2 0x5A7 JUMPI PUSH2 0x585 DUP3 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFCC487C1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x69E JUMPI DUP5 DUP2 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x60C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC6BD233 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x666 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x696 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x5B0 JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH3 0x186A0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x72A JUMPI PUSH1 0x40 MLOAD PUSH4 0x308440E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH2 0x79A DUP12 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP12 SWAP3 POP PUSH2 0x208F SWAP2 POP POP JUMP JUMPDEST PUSH2 0x80D DUP12 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP16 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP15 DUP3 MSTORE SWAP1 SWAP4 POP DUP15 SWAP3 POP DUP14 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP13 SWAP3 POP DUP12 SWAP2 POP PUSH2 0x20E1 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 SWAP2 AND CALLER EQ PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 MLOAD SWAP2 SWAP4 AND SWAP2 SWAP1 PUSH32 0x943D69CF2BBE08A9D44B3C4CE6DA17D939D758739370620871CE99A6437866D0 SWAP1 DUP5 SWAP1 LOG4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x909 JUMPI PUSH1 0x0 PUSH2 0x915 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x938 SWAP2 SWAP1 PUSH2 0x30E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP10 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP9 DUP3 MSTORE SWAP1 SWAP4 POP DUP9 SWAP3 POP DUP8 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP4 MLOAD DUP7 SWAP3 POP PUSH1 0x2 GT ISZERO SWAP1 POP PUSH2 0x9CF JUMPI DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xE8C6265 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x9FE JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xB34F351D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x448 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xA0B DUP4 PUSH2 0x203C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ PUSH2 0xA1F JUMPI PUSH2 0x585 DUP3 PUSH2 0x203C JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB16 JUMPI DUP5 DUP2 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0xA53 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA84 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0xAB6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC6BD233 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xADE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xB0E JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xA28 JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB3F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH3 0x186A0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x308440E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC13 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP12 SWAP3 POP PUSH2 0x23BB SWAP2 POP POP JUMP JUMPDEST SWAP1 POP PUSH2 0xC3F PUSH32 0x0 DUP3 PUSH2 0x23F1 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC76 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC9F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP5 ISZERO PUSH2 0xCB6 JUMPI PUSH2 0xCB3 DUP7 PUSH2 0x2496 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD32 JUMPI PUSH2 0xCFF DUP8 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0xCE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCFA SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST PUSH2 0x24E9 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD1F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xCB9 JUMP JUMPDEST POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA9E30BF144F83390A4FE47562A4E16892108102221C674FF538DA0B72A83D174 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xD72 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP11 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP10 DUP3 MSTORE SWAP1 SWAP4 POP DUP10 SWAP3 POP DUP9 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP4 MLOAD DUP8 SWAP3 POP PUSH1 0x2 GT ISZERO SWAP1 POP PUSH2 0xE13 JUMPI DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xE8C6265 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xE42 JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xB34F351D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x448 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xE4F DUP4 PUSH2 0x203C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ PUSH2 0xE63 JUMPI PUSH2 0x585 DUP3 PUSH2 0x203C JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF5A JUMPI DUP5 DUP2 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0xE97 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xEC8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0xEFA JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC6BD233 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF22 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xE6C JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF83 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH3 0x186A0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xFE6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x308440E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1057 DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP16 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP15 DUP3 MSTORE SWAP1 SWAP4 POP DUP15 SWAP3 POP DUP14 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP13 SWAP3 POP PUSH2 0x23BB SWAP2 POP POP JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x1098 JUMPI PUSH2 0x1091 PUSH32 0x0 DUP3 PUSH2 0x2555 JUMP JUMPDEST SWAP5 POP PUSH2 0x10F5 JUMP JUMPDEST PUSH2 0x10C1 PUSH32 0x0 PUSH2 0x2605 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP10 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP5 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0xD2BCF51A5767C814CFE0266A99141F75A32103BBF8C400FBC1AC0C3B73CE25E8 SWAP1 PUSH2 0x114A SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP10 SWAP2 AND CALLER EQ PUSH2 0x11A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP11 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP10 DUP3 MSTORE SWAP1 SWAP4 POP DUP10 SWAP3 POP DUP9 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP4 MLOAD DUP8 SWAP3 POP PUSH1 0x2 GT ISZERO SWAP1 POP PUSH2 0x1230 JUMPI DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xE8C6265 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x125F JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xB34F351D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x448 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x126C DUP4 PUSH2 0x203C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ PUSH2 0x1280 JUMPI PUSH2 0x585 DUP3 PUSH2 0x203C JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1377 JUMPI DUP5 DUP2 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x12B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12E5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x1317 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC6BD233 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x133F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x136F JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1289 JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13A0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH3 0x186A0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1403 JUMPI PUSH1 0x40 MLOAD PUSH4 0x308440E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH2 0x1411 DUP13 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x26B4 JUMP JUMPDEST PUSH2 0x1495 DUP13 DUP13 DUP13 DUP13 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP14 SWAP3 POP DUP13 SWAP2 POP PUSH2 0x20E1 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP9 SWAP2 AND CALLER EQ PUSH2 0x14E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP11 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP10 DUP3 MSTORE SWAP1 SWAP4 POP DUP10 SWAP3 POP DUP9 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP4 MLOAD DUP8 SWAP3 POP PUSH1 0x2 GT ISZERO SWAP1 POP PUSH2 0x1573 JUMPI DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xE8C6265 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x15A2 JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xB34F351D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x448 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x15AF DUP4 PUSH2 0x203C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ PUSH2 0x15C3 JUMPI PUSH2 0x585 DUP3 PUSH2 0x203C JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16BA JUMPI DUP5 DUP2 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x15F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1628 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x165A JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC6BD233 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1682 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x16B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x15CC JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1713 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH3 0x186A0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1746 JUMPI PUSH1 0x40 MLOAD PUSH4 0x308440E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH2 0x1754 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x26B4 JUMP JUMPDEST PUSH2 0x80D DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP16 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP15 DUP3 MSTORE SWAP1 SWAP4 POP DUP15 SWAP3 POP DUP14 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP13 SWAP3 POP DUP12 SWAP2 POP PUSH2 0x278D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x17EA JUMPI PUSH1 0x0 PUSH2 0x1863 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x182B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x183F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1863 SWAP2 SWAP1 PUSH2 0x2EA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1893 SWAP2 SWAP1 PUSH2 0x30E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 SWAP2 AND CALLER EQ PUSH2 0x18DC JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 MLOAD CALLER SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP2 PUSH32 0x943D69CF2BBE08A9D44B3C4CE6DA17D939D758739370620871CE99A6437866D0 SWAP2 LOG4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 SWAP2 AND CALLER EQ PUSH2 0x19AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19DD JUMPI PUSH1 0x40 MLOAD PUSH4 0xC3691307 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP9 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0x107CF6EA8668D533DF1AAB5BB8B6315BB0C25F0B6C955558D09368F290668FC7 SWAP2 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP10 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP9 DUP3 MSTORE SWAP1 SWAP4 POP DUP9 SWAP3 POP DUP8 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP4 MLOAD DUP7 SWAP3 POP PUSH1 0x2 GT ISZERO SWAP1 POP PUSH2 0x1ACA JUMPI DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xE8C6265 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x1AF9 JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xB34F351D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x448 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x1B06 DUP4 PUSH2 0x203C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ PUSH2 0x1B1A JUMPI PUSH2 0x585 DUP3 PUSH2 0x203C JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C11 JUMPI DUP5 DUP2 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x1B4E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x1BB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC6BD233 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1BD9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1C09 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1B23 JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C3A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1C6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH3 0x186A0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1C9D JUMPI PUSH1 0x40 MLOAD PUSH4 0x308440E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH2 0x1D0D DUP11 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP12 SWAP3 POP PUSH2 0x208F SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D7F DUP11 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP12 SWAP3 POP DUP11 SWAP2 POP PUSH2 0x278D SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP8 SWAP2 AND CALLER EQ PUSH2 0x1DCC JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP10 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP9 DUP3 MSTORE SWAP1 SWAP4 POP DUP9 SWAP3 POP DUP8 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP4 MLOAD DUP7 SWAP3 POP PUSH1 0x2 GT ISZERO SWAP1 POP PUSH2 0x1E5B JUMPI DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xE8C6265 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x1E8A JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xB34F351D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x448 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x1E97 DUP4 PUSH2 0x203C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ PUSH2 0x1EAB JUMPI PUSH2 0x585 DUP3 PUSH2 0x203C JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FA2 JUMPI DUP5 DUP2 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x1EDF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F10 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x1F42 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC6BD233 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F6A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1F9A JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1EB4 JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1FCB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1FFB JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH3 0x186A0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x202E JUMPI PUSH1 0x40 MLOAD PUSH4 0x308440E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH2 0x1D7F DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x26B4 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2088 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x206B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x207E SWAP2 SWAP1 PUSH2 0x30F9 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 ADD PUSH2 0x2043 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209C DUP5 DUP5 DUP5 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 EQ PUSH2 0x20DA JUMPI PUSH1 0x40 MLOAD PUSH4 0xDD5FF457 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP12 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x215A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x217E SWAP2 SWAP1 PUSH2 0x2EA1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x218B JUMPI PUSH1 0x0 NOT ADD JUMPDEST DUP2 ISZERO PUSH2 0x2198 JUMPI PUSH1 0x1 DUP3 SUB SWAP2 POP JUMPDEST DUP2 DUP2 ADD SWAP3 POP DUP2 ISZERO PUSH2 0x21CC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 DUP15 AND DUP5 MSTORE SWAP4 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB5EE5DC3D2C31A019BBF2C787E0E9C97971C96ACEEA1C38C12FC8FD25C536D46 DUP7 PUSH1 0x40 MLOAD PUSH2 0x221B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH4 0xFFFFFFFF DUP6 AND ISZERO PUSH2 0x228D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH3 0xF4240 PUSH4 0xFFFFFFFF DUP10 AND DUP8 MUL DIV SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND PUSH2 0x2266 JUMPI CALLER PUSH2 0x2268 JUMP JUMPDEST DUP8 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE SWAP1 SWAP3 SUB SWAP2 JUMPDEST DUP7 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2345 JUMPI PUSH2 0x22D6 DUP6 DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x22BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH3 0xF4240 SWAP2 MUL DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP12 MLOAD SWAP1 SWAP2 SWAP1 DUP13 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x2313 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x2292 JUMP JUMPDEST POP POP DUP1 ISZERO PUSH2 0x23B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E0F9FFF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP11 AND SWAP1 PUSH4 0x7C1F3FFE SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23D2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1893 DUP4 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH19 0x3D605D80600A3D3981F336603057343D52307F PUSH1 0x68 SHL DUP2 MSTORE PUSH32 0x830D2D700A97AF574B186C80D40429385D24241565B08A7C559BA283A964D9B1 PUSH1 0x13 DUP3 ADD MSTORE PUSH19 0x60203DA23D3DF35B3D3D3D3D363D3D37363D73 PUSH1 0x68 SHL PUSH1 0x33 DUP3 ADD MSTORE PUSH1 0x60 SWAP4 DUP5 SHL PUSH1 0x46 DUP3 ADD MSTORE PUSH14 0x5AF43D3D93803E605B57FD5BF3FF PUSH1 0x90 SHL PUSH1 0x5A DUP3 ADD MSTORE SWAP3 SHL PUSH1 0x68 DUP4 ADD MSTORE PUSH1 0x7C DUP3 ADD MSTORE PUSH1 0x67 DUP1 DUP3 KECCAK256 PUSH1 0x9C DUP4 ADD MSTORE PUSH1 0x55 SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x24BB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE SWAP1 SWAP2 POP PUSH2 0x24E4 SWAP1 DUP3 PUSH2 0x296F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 DUP8 AND DUP5 MSTORE SWAP4 SWAP1 MSTORE SWAP2 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x251C SWAP2 PUSH2 0x3121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP6 DUP11 AND DUP5 MSTORE SWAP5 SWAP1 MSTORE SWAP3 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SWAP2 POP PUSH2 0x938 SWAP1 DUP5 DUP4 PUSH2 0x29C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH19 0x3D605D80600A3D3981F336603057343D52307F PUSH1 0x68 SHL DUP2 MSTORE PUSH32 0x830D2D700A97AF574B186C80D40429385D24241565B08A7C559BA283A964D9B1 PUSH1 0x13 DUP3 ADD MSTORE PUSH19 0x60203DA23D3DF35B3D3D3D3D363D3D37363D73 PUSH1 0x68 SHL PUSH1 0x33 DUP3 ADD MSTORE DUP4 PUSH1 0x60 SHL PUSH1 0x46 DUP3 ADD MSTORE PUSH13 0x5AF43D3D93803E605B57FD5BF3 PUSH1 0x98 SHL PUSH1 0x5A DUP3 ADD MSTORE DUP3 PUSH1 0x67 DUP3 PUSH1 0x0 CREATE2 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH4 0x380BBE13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH19 0x3D605D80600A3D3981F336603057343D52307F PUSH1 0x68 SHL DUP2 MSTORE PUSH32 0x830D2D700A97AF574B186C80D40429385D24241565B08A7C559BA283A964D9B1 PUSH1 0x13 DUP3 ADD MSTORE PUSH19 0x60203DA23D3DF35B3D3D3D3D363D3D37363D73 PUSH1 0x68 SHL PUSH1 0x33 DUP3 ADD MSTORE DUP3 PUSH1 0x60 SHL PUSH1 0x46 DUP3 ADD MSTORE PUSH13 0x5AF43D3D93803E605B57FD5BF3 PUSH1 0x98 SHL PUSH1 0x5A DUP3 ADD MSTORE PUSH1 0x67 DUP2 PUSH1 0x0 CREATE SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x24E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x985DA9B PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2725 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP11 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP10 DUP3 MSTORE SWAP1 SWAP4 POP DUP10 SWAP3 POP DUP9 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP8 SWAP3 POP PUSH2 0x23BB SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD SWAP2 SWAP3 POP SWAP1 PUSH32 0xCE55A01AD467CE2F3080A2CEF6EB951B65F489B97956F76C2C04BCDDAB92AAA9 SWAP1 PUSH2 0x277C SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x2FC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 BALANCE SWAP1 DUP3 ISZERO PUSH2 0x27B6 JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP JUMPDEST POP DUP2 DUP2 ADD DUP3 ISZERO PUSH2 0x27DD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x87C3CA0A87D9B82033E4BC55E6D30621F8D7E0C9D8CA7988EDFDE8932787B77B DUP4 PUSH1 0x40 MLOAD PUSH2 0x2822 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH4 0xFFFFFFFF DUP6 AND ISZERO PUSH2 0x2881 JUMPI PUSH3 0xF4240 PUSH4 0xFFFFFFFF DUP7 AND DUP3 MUL DIV DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x285C JUMPI CALLER PUSH2 0x285E JUMP JUMPDEST DUP8 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE SWAP1 SUB JUMPDEST DUP7 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2907 JUMPI PUSH2 0x28B2 DUP4 DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x22BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP12 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x28D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x2886 JUMP JUMPDEST POP POP DUP2 ISZERO PUSH2 0x2965 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2AC3AFFD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xAB0EBFF4 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1495 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 GAS CALL SWAP1 POP DUP1 PUSH2 0x29C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x11551217D514905394D1915497D19052531151 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x448 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE DUP3 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 PUSH1 0x44 DUP4 PUSH1 0x0 DUP10 GAS CALL SWAP2 POP POP PUSH2 0x2A00 DUP2 PUSH2 0x2A44 JUMP JUMPDEST PUSH2 0x2A3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1514905394D1915497D19052531151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x448 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 RETURNDATASIZE DUP3 PUSH2 0x2A56 JUMPI DUP1 PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP2 EQ PUSH2 0x2A6E JUMPI DUP1 ISZERO PUSH2 0x2A7F JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x2088 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD ISZERO ISZERO SWAP3 POP PUSH2 0x2088 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2A9A JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AB1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2ACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x24E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1893 DUP2 PUSH2 0x314E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B15 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2B20 DUP2 PUSH2 0x314E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2B30 DUP2 PUSH2 0x314E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2B53 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2B5E DUP2 PUSH2 0x314E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2B7A JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2B86 DUP11 DUP4 DUP12 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B9E JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x2BAB DUP10 DUP3 DUP11 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x2BBE SWAP1 POP PUSH1 0x60 DUP9 ADD PUSH2 0x2AD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2BE4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x2BEF DUP2 PUSH2 0x314E JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C0B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2C17 DUP12 DUP4 DUP13 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C2F JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2C3C DUP11 DUP3 DUP12 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x2C4F SWAP1 POP PUSH1 0x60 DUP10 ADD PUSH2 0x2AD3 JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH2 0x2C5F DUP2 PUSH2 0x314E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B15 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2C9C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2CA7 DUP2 PUSH2 0x314E JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x2CB7 DUP2 PUSH2 0x314E JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CD3 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2CDF DUP13 DUP4 DUP14 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CF7 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2D04 DUP12 DUP3 DUP13 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x2D17 SWAP1 POP PUSH1 0x80 DUP11 ADD PUSH2 0x2AD3 JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH2 0x2D27 DUP2 PUSH2 0x314E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2D4D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2D58 DUP2 PUSH2 0x314E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D7A JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2D86 DUP8 DUP3 DUP9 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2DA9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2DC0 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2DCC DUP10 DUP4 DUP11 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2DE4 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2DF1 DUP9 DUP3 DUP10 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x2E04 SWAP1 POP PUSH1 0x40 DUP8 ADD PUSH2 0x2AD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2E28 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E3F JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2E4B DUP11 DUP4 DUP12 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E63 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x2E70 DUP10 DUP3 DUP11 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x2E83 SWAP1 POP PUSH1 0x40 DUP9 ADD PUSH2 0x2AD3 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x2E93 DUP2 PUSH2 0x314E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EB2 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2EF6 JUMPI DUP2 CALLDATALOAD PUSH2 0x2EDB DUP2 PUSH2 0x314E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2EC8 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2EF6 JUMPI PUSH4 0xFFFFFFFF PUSH2 0x2F26 DUP4 PUSH2 0x2AD3 JUMP JUMPDEST AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F10 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP9 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F6C JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F47 JUMP JUMPDEST POP POP DUP7 MLOAD DUP2 DUP9 ADD SWAP4 SWAP3 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2F9A JUMPI DUP5 MLOAD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP3 DUP3 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2F78 JUMP JUMPDEST POP POP POP PUSH2 0x2FB3 DUP2 DUP7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x4 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2FD4 PUSH1 0x60 DUP4 ADD DUP8 DUP10 PUSH2 0x2EB9 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2FE7 DUP2 DUP7 DUP9 PUSH2 0x2F01 JUMP JUMPDEST SWAP2 POP POP PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3014 PUSH1 0x80 DUP4 ADD DUP9 DUP11 PUSH2 0x2EB9 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3027 DUP2 DUP8 DUP10 PUSH2 0x2F01 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP1 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP6 SWAP1 PUSH1 0x80 DUP5 ADD DUP4 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x309D JUMPI DUP4 CALLDATALOAD PUSH2 0x3082 DUP2 PUSH2 0x314E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x306F JUMP JUMPDEST POP DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE SWAP1 DUP3 ADD SWAP3 POP DUP2 DUP7 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x30D2 JUMPI DUP3 MLOAD DUP6 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x30B6 JUMP JUMPDEST POP SWAP3 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x30F4 JUMPI PUSH2 0x30F4 PUSH2 0x3138 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x3118 JUMPI PUSH2 0x3118 PUSH2 0x3138 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3133 JUMPI PUSH2 0x3133 PUSH2 0x3138 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 ORIGIN 0x5C CALL 0x5D 0xD6 SUB BYTE 0xEE 0xDF 0xFB 0xD7 0xFC DUP11 0xD 0xBA JUMPI 0xAF 0x23 0xE TIMESTAMP PUSH27 0xD6F1099A977B399B2D0964736F6C6343000804003360A060405234 DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x60 DUP2 SWAP1 SHL PUSH1 0x80 MSTORE PUSH2 0x354 PUSH2 0x4C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x4B ADD MSTORE DUP2 DUP2 PUSH1 0xBC ADD MSTORE DUP2 DUP2 PUSH2 0x108 ADD MSTORE DUP2 DUP2 PUSH2 0x13C ADD MSTORE PUSH2 0x186 ADD MSTORE PUSH2 0x354 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE769B2B EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x7C1F3FFE EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xAB0EBFF4 EQ PUSH2 0x9E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0xB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0xAC CALLDATASIZE PUSH1 0x4 PUSH2 0x306 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH32 0x0 DUP4 PUSH2 0x1AF JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x179 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 PUSH2 0x233 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE DUP3 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 PUSH1 0x44 DUP4 PUSH1 0x0 DUP10 GAS CALL SWAP2 POP POP PUSH2 0x1EA DUP2 PUSH2 0x289 JUMP JUMPDEST PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1514905394D1915497D19052531151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 GAS CALL SWAP1 POP DUP1 PUSH2 0x284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x11551217D514905394D1915497D19052531151 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x224 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 RETURNDATASIZE DUP3 PUSH2 0x29B JUMPI DUP1 PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP2 EQ PUSH2 0x2B3 JUMPI DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x2C9 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD ISZERO ISZERO SWAP3 POP PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2F8 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x317 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF7 DUP12 0x29 0x4D PUSH12 0x6603231A559C8366BA0D4F86 0xB7 0xF8 0xE6 0x2B PUSH31 0x36307ACE99C6F117D064736F6C634300080400330000000000000000000000 ",
              "sourceMap": "12217:27523:2:-:0;;;16020:74;;;;;;;;;;16071:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16040:49:2;;-1:-1:-1;;;;;;16040:49:2;;;12217:27523;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:15770:7",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "98:311:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "147:30:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "arrayPos",
                                          "nodeType": "YulIdentifier",
                                          "src": "156:8:7"
                                        },
                                        {
                                          "name": "arrayPos",
                                          "nodeType": "YulIdentifier",
                                          "src": "166:8:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "149:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "149:26:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "149:26:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "126:6:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "134:4:7",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "122:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "122:17:7"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "141:3:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "118:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "118:27:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:35:7"
                              },
                              "nodeType": "YulIf",
                              "src": "108:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "186:30:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "209:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "196:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "196:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "186:6:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "259:30:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "arrayPos",
                                          "nodeType": "YulIdentifier",
                                          "src": "268:8:7"
                                        },
                                        {
                                          "name": "arrayPos",
                                          "nodeType": "YulIdentifier",
                                          "src": "278:8:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "261:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "261:26:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "261:26:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "231:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "239:18:7",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "228:30:7"
                              },
                              "nodeType": "YulIf",
                              "src": "225:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "298:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "314:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "322:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "310:17:7"
                              },
                              "variableNames": [
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "298:8:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "387:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "396:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "399:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "389:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "389:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "389:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "350:6:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "362:1:7",
                                                "type": "",
                                                "value": "5"
                                              },
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "365:6:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "358:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "358:14:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "346:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "346:27:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "375:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "342:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "342:38:7"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "382:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "339:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "339:47:7"
                              },
                              "nodeType": "YulIf",
                              "src": "336:2:7"
                            }
                          ]
                        },
                        "name": "abi_decode_array_address_dyn_calldata",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "61:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "69:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulTypedName",
                            "src": "77:8:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "87:6:7",
                            "type": ""
                          }
                        ],
                        "src": "14:395:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "462:115:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "472:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "494:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "481:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "481:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "472:5:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "555:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "564:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "567:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "557:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "557:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "557:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "523:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "534:5:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "541:10:7",
                                            "type": "",
                                            "value": "0xffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "530:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "530:22:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "520:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "520:33:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "513:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "513:41:7"
                              },
                              "nodeType": "YulIf",
                              "src": "510:2:7"
                            }
                          ]
                        },
                        "name": "abi_decode_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "441:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "452:5:7",
                            "type": ""
                          }
                        ],
                        "src": "414:163:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "652:187:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "698:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "707:6:7"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "715:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "700:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "700:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "700:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "673:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "682:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "669:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "669:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "694:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "665:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "665:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "662:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "733:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "759:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "746:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "746:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "737:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "803:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "778:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "778:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "778:31:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "818:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "828:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "818:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "618:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "629:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "641:6:7",
                            "type": ""
                          }
                        ],
                        "src": "582:257:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "931:311:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "977:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "986:6:7"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "994:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "979:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "979:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "979:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "952:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "961:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "948:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "948:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "973:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "944:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "944:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "941:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1012:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1038:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1025:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1025:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1016:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1082:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1057:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1057:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1057:31:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1097:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1107:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1097:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1121:47:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1153:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1164:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1149:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1149:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1136:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1136:32:7"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1125:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1202:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1177:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1177:33:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1177:33:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1219:17:7",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "1229:7:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1219:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "889:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "900:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "912:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "920:6:7",
                            "type": ""
                          }
                        ],
                        "src": "844:398:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1436:821:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1483:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "1492:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "1500:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1485:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1485:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1485:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1457:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1466:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1453:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1453:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1478:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1449:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1449:33:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1446:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1518:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1544:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1531:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1531:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1522:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1588:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1563:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1563:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1563:31:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1603:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1613:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1603:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1627:46:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1658:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1669:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1654:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1654:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1641:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1641:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1631:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1682:28:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1692:18:7",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1686:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1737:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "1746:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "1754:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1739:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1739:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1739:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1725:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1733:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1722:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1722:14:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1719:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1772:96:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1840:9:7"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1851:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1836:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1836:22:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1860:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "1798:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1798:70:7"
                              },
                              "variables": [
                                {
                                  "name": "value1_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1776:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1786:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1877:18:7",
                              "value": {
                                "name": "value1_1",
                                "nodeType": "YulIdentifier",
                                "src": "1887:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1877:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1904:18:7",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "1914:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1904:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1931:48:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1964:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1975:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1960:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1960:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1947:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1947:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1935:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2008:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2017:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2025:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2010:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2010:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2010:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1994:8:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2004:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1991:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1991:16:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1988:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2043:98:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2111:9:7"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2122:8:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2107:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2107:24:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2133:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "2069:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2069:72:7"
                              },
                              "variables": [
                                {
                                  "name": "value3_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2047:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value4_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2057:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2150:18:7",
                              "value": {
                                "name": "value3_1",
                                "nodeType": "YulIdentifier",
                                "src": "2160:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2150:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2177:18:7",
                              "value": {
                                "name": "value4_1",
                                "nodeType": "YulIdentifier",
                                "src": "2187:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2177:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2204:47:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2236:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2247:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2232:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2232:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "2214:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2214:37:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "2204:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptrt_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1362:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1373:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1385:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1393:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1401:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1409:6:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "1417:6:7",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "1425:6:7",
                            "type": ""
                          }
                        ],
                        "src": "1247:1010:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2468:946:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2515:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value6",
                                          "nodeType": "YulIdentifier",
                                          "src": "2524:6:7"
                                        },
                                        {
                                          "name": "value6",
                                          "nodeType": "YulIdentifier",
                                          "src": "2532:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2517:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2517:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2517:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2489:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2498:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2485:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2485:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2510:3:7",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2481:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2481:33:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2478:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2550:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2576:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2563:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2563:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2554:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2620:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2595:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2595:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2595:31:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2635:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2645:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2635:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2659:46:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2690:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2701:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2686:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2686:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2673:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2673:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "2663:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2714:28:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2724:18:7",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2718:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2769:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value6",
                                          "nodeType": "YulIdentifier",
                                          "src": "2778:6:7"
                                        },
                                        {
                                          "name": "value6",
                                          "nodeType": "YulIdentifier",
                                          "src": "2786:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2771:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2771:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2771:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2757:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2765:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2754:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2754:14:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2751:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2804:96:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2872:9:7"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2883:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2868:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2868:22:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2892:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "2830:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2830:70:7"
                              },
                              "variables": [
                                {
                                  "name": "value1_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2808:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2818:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2909:18:7",
                              "value": {
                                "name": "value1_1",
                                "nodeType": "YulIdentifier",
                                "src": "2919:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2909:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2936:18:7",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "2946:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2936:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2963:48:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2996:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3007:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2992:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2992:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2979:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2979:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2967:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3040:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value6",
                                          "nodeType": "YulIdentifier",
                                          "src": "3049:6:7"
                                        },
                                        {
                                          "name": "value6",
                                          "nodeType": "YulIdentifier",
                                          "src": "3057:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3042:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3042:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3042:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3026:8:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3036:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3023:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3023:16:7"
                              },
                              "nodeType": "YulIf",
                              "src": "3020:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3075:98:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3143:9:7"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3154:8:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3139:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3139:24:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3165:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "3101:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3101:72:7"
                              },
                              "variables": [
                                {
                                  "name": "value3_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3079:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value4_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3089:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3182:18:7",
                              "value": {
                                "name": "value3_1",
                                "nodeType": "YulIdentifier",
                                "src": "3192:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "3182:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3209:18:7",
                              "value": {
                                "name": "value4_1",
                                "nodeType": "YulIdentifier",
                                "src": "3219:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "3209:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3236:47:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3268:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3279:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3264:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3264:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "3246:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3246:37:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "3236:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3292:48:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3324:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3335:3:7",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3320:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3320:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3307:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3307:33:7"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3296:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3374:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3349:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3349:33:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3349:33:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3391:17:7",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "3401:7:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value6",
                                  "nodeType": "YulIdentifier",
                                  "src": "3391:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptrt_uint32t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2386:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2397:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2409:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2417:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2425:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2433:6:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "2441:6:7",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "2449:6:7",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "2457:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2262:1152:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3519:311:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3565:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3574:6:7"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3582:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3567:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3567:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3567:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3540:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3549:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3536:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3536:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3561:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3532:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3532:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "3529:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3600:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3626:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3613:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3613:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "3604:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3670:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3645:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3645:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3645:31:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3685:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3695:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3685:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3709:47:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3741:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3752:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3737:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3737:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3724:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3724:32:7"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3713:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3790:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3765:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3765:33:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3765:33:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3807:17:7",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "3817:7:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3807:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_contract$_ERC20_$394",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3477:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3488:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3500:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3508:6:7",
                            "type": ""
                          }
                        ],
                        "src": "3419:411:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4071:1071:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4118:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4127:6:7"
                                        },
                                        {
                                          "name": "value7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4135:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4120:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4120:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4120:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4092:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4101:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4088:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4088:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4113:3:7",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4084:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4084:33:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4081:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4153:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4179:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4166:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4166:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "4157:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4223:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4198:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4198:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4198:31:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4238:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4248:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4238:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4262:47:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4294:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4305:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4290:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4290:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4277:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4277:32:7"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4266:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4343:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4318:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4318:33:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4318:33:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4360:17:7",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "4370:7:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4360:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4386:46:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4417:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4428:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4413:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4413:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4400:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4400:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4390:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4441:28:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4451:18:7",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4445:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4496:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4505:6:7"
                                        },
                                        {
                                          "name": "value7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4513:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4498:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4498:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4498:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4484:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4492:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4481:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4481:14:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4478:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4531:96:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4599:9:7"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4610:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4595:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4595:22:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4619:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "4557:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4557:70:7"
                              },
                              "variables": [
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4535:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value3_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4545:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4636:18:7",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "4646:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4636:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4663:18:7",
                              "value": {
                                "name": "value3_1",
                                "nodeType": "YulIdentifier",
                                "src": "4673:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4663:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4690:48:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4723:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4734:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4719:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4719:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4706:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4706:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4694:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4767:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4776:6:7"
                                        },
                                        {
                                          "name": "value7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4784:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4769:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4769:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4769:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4753:8:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4763:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4750:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4750:16:7"
                              },
                              "nodeType": "YulIf",
                              "src": "4747:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4802:98:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4870:9:7"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4881:8:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4866:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4866:24:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4892:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "4828:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4828:72:7"
                              },
                              "variables": [
                                {
                                  "name": "value4_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4806:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value5_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4816:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4909:18:7",
                              "value": {
                                "name": "value4_1",
                                "nodeType": "YulIdentifier",
                                "src": "4919:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "4909:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4936:18:7",
                              "value": {
                                "name": "value5_1",
                                "nodeType": "YulIdentifier",
                                "src": "4946:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "4936:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4963:48:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4995:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5006:3:7",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4991:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4991:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "4973:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4973:38:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value6",
                                  "nodeType": "YulIdentifier",
                                  "src": "4963:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5020:48:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5052:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5063:3:7",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5048:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5048:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5035:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5035:33:7"
                              },
                              "variables": [
                                {
                                  "name": "value_2",
                                  "nodeType": "YulTypedName",
                                  "src": "5024:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5102:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "5077:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5077:33:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5077:33:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5119:17:7",
                              "value": {
                                "name": "value_2",
                                "nodeType": "YulIdentifier",
                                "src": "5129:7:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value7",
                                  "nodeType": "YulIdentifier",
                                  "src": "5119:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_contract$_ERC20_$394t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptrt_uint32t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3981:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3992:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4004:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4012:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4020:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "4028:6:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "4036:6:7",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "4044:6:7",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "4052:6:7",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "4060:6:7",
                            "type": ""
                          }
                        ],
                        "src": "3835:1307:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5299:521:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5345:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5354:6:7"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5362:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5347:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5347:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5347:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5320:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5329:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5316:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5316:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5341:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5312:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5312:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "5309:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5380:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5406:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5393:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5393:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "5384:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5450:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "5425:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5425:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5425:31:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5465:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5475:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5465:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5489:42:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5516:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5527:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5512:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5512:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5499:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5499:32:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5489:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5540:46:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5571:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5582:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5567:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5567:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5554:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5554:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "5544:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5629:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "5638:6:7"
                                        },
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "5646:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5631:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5631:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5631:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5601:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5609:18:7",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5598:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5598:30:7"
                              },
                              "nodeType": "YulIf",
                              "src": "5595:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5664:96:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5732:9:7"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "5743:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5728:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5728:22:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5752:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "5690:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5690:70:7"
                              },
                              "variables": [
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5668:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value3_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5678:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5769:18:7",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "5779:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "5769:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5796:18:7",
                              "value": {
                                "name": "value3_1",
                                "nodeType": "YulIdentifier",
                                "src": "5806:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "5796:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256t_array$_t_contract$_ERC20_$394_$dyn_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5241:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5252:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5264:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5272:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5280:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "5288:6:7",
                            "type": ""
                          }
                        ],
                        "src": "5147:673:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5997:702:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6043:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "6052:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "6060:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6045:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6045:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6045:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6018:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6027:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6014:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6014:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6039:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6010:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6010:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "6007:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6078:37:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6105:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6092:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6092:23:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "6082:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6124:28:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6134:18:7",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6128:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6179:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "6188:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "6196:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6181:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6181:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6181:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6167:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6175:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6164:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6164:14:7"
                              },
                              "nodeType": "YulIf",
                              "src": "6161:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6214:96:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6282:9:7"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "6293:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6278:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6278:22:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6302:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "6240:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6240:70:7"
                              },
                              "variables": [
                                {
                                  "name": "value0_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6218:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value1_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6228:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6319:18:7",
                              "value": {
                                "name": "value0_1",
                                "nodeType": "YulIdentifier",
                                "src": "6329:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "6319:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6346:18:7",
                              "value": {
                                "name": "value1_1",
                                "nodeType": "YulIdentifier",
                                "src": "6356:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "6346:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6373:48:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6406:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6417:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6402:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6402:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6389:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6389:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6377:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6450:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "6459:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "6467:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6452:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6452:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6452:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6436:8:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6446:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6433:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6433:16:7"
                              },
                              "nodeType": "YulIf",
                              "src": "6430:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6485:98:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6553:9:7"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6564:8:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6549:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6549:24:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6575:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "6511:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6511:72:7"
                              },
                              "variables": [
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6489:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value3_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6499:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6592:18:7",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "6602:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "6592:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6619:18:7",
                              "value": {
                                "name": "value3_1",
                                "nodeType": "YulIdentifier",
                                "src": "6629:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "6619:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6646:47:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6678:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6689:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6674:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6674:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "6656:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6656:37:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "6646:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptrt_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5931:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5942:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5954:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5962:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5970:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "5978:6:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "5986:6:7",
                            "type": ""
                          }
                        ],
                        "src": "5825:874:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6893:821:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6940:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "6949:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "6957:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6942:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6942:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6942:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6914:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6923:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6910:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6910:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6935:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6906:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6906:33:7"
                              },
                              "nodeType": "YulIf",
                              "src": "6903:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6975:37:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7002:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6989:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6989:23:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "6979:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7021:28:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7031:18:7",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7025:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7076:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "7085:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "7093:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7078:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7078:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7078:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7064:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7072:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7061:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7061:14:7"
                              },
                              "nodeType": "YulIf",
                              "src": "7058:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7111:96:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7179:9:7"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "7190:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7175:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7175:22:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7199:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "7137:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7137:70:7"
                              },
                              "variables": [
                                {
                                  "name": "value0_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7115:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value1_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7125:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7216:18:7",
                              "value": {
                                "name": "value0_1",
                                "nodeType": "YulIdentifier",
                                "src": "7226:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7216:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7243:18:7",
                              "value": {
                                "name": "value1_1",
                                "nodeType": "YulIdentifier",
                                "src": "7253:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "7243:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7270:48:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7303:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7314:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7299:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7299:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7286:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7286:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7274:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7347:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "7356:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "7364:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7349:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7349:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7349:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7333:8:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7343:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7330:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7330:16:7"
                              },
                              "nodeType": "YulIf",
                              "src": "7327:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7382:98:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7450:9:7"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7461:8:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7446:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7446:24:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7472:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "7408:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7408:72:7"
                              },
                              "variables": [
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7386:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value3_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7396:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7489:18:7",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "7499:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "7489:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7516:18:7",
                              "value": {
                                "name": "value3_1",
                                "nodeType": "YulIdentifier",
                                "src": "7526:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "7516:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7543:47:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7575:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7586:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7571:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7571:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "7553:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7553:37:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "7543:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7599:45:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7629:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7640:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7625:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7625:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7612:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7612:32:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "7603:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7678:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "7653:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7653:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7653:31:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7693:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7703:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "7693:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptrt_uint32t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6819:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6830:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6842:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6850:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "6858:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "6866:6:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "6874:6:7",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "6882:6:7",
                            "type": ""
                          }
                        ],
                        "src": "6704:1010:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7802:187:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7848:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "7857:6:7"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "7865:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7850:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7850:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7850:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7823:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7832:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7819:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7819:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7844:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7815:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7815:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "7812:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7883:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7909:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7896:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7896:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "7887:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7953:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "7928:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7928:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7928:31:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7968:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7978:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7968:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_ERC20_$394",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7768:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "7779:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7791:6:7",
                            "type": ""
                          }
                        ],
                        "src": "7719:270:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8075:113:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8121:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "8130:6:7"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "8138:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8123:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8123:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8123:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8096:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8105:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8092:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8092:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8117:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8088:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8088:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "8085:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8156:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8172:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8166:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8166:16:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "8156:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8041:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "8052:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8064:6:7",
                            "type": ""
                          }
                        ],
                        "src": "7994:194:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8271:446:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8288:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8293:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8281:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8281:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8281:19:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8309:14:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8319:4:7",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "8313:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8332:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8343:3:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8348:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8339:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8339:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8332:3:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8360:19:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8374:5:7"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "8364:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8388:12:7",
                              "value": {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "8397:3:7"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "8392:1:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8458:234:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "8472:35:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "8500:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "8487:12:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8487:20:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "value_1",
                                        "nodeType": "YulTypedName",
                                        "src": "8476:7:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "8545:7:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "validator_revert_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "8520:24:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8520:33:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8520:33:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "8573:3:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "value_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "8582:7:7"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "8599:3:7",
                                                      "type": "",
                                                      "value": "160"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "8604:1:7",
                                                      "type": "",
                                                      "value": "1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8595:3:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "8595:11:7"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "8608:1:7",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "8591:3:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "8591:19:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "8578:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8578:33:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "8566:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8566:46:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8566:46:7"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8625:19:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "8636:3:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "8641:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8632:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8632:12:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "8625:3:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8657:25:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "8671:6:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "8679:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8667:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8667:15:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "8657:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "8420:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8423:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8417:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8417:13:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "8431:18:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8433:14:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "8442:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8445:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8438:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8438:9:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "8433:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "8413:3:7",
                                "statements": []
                              },
                              "src": "8409:283:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8701:10:7",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8708:3:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8701:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_array_address_dyn_calldata",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8240:5:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "8247:6:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8255:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8263:3:7",
                            "type": ""
                          }
                        ],
                        "src": "8193:524:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8799:361:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8816:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8821:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8809:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8809:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8809:19:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8837:14:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8847:4:7",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "8841:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8860:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8871:3:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8876:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8867:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8867:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8860:3:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8888:19:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8902:5:7"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "8892:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8916:12:7",
                              "value": {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "8925:3:7"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "8920:1:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8986:149:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "9007:3:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "srcPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9034:6:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "abi_decode_uint32",
                                                "nodeType": "YulIdentifier",
                                                "src": "9016:17:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "9016:25:7"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "9043:10:7",
                                              "type": "",
                                              "value": "0xffffffff"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "9012:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9012:42:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "9000:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9000:55:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9000:55:7"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "9068:19:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "9079:3:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "9084:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "9075:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9075:12:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "9068:3:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "9100:25:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "9114:6:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "9122:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "9110:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9110:15:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "9100:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "8948:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8951:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8945:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8945:13:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "8959:18:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8961:14:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "8970:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8973:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8966:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8966:9:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "8961:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "8941:3:7",
                                "statements": []
                              },
                              "src": "8937:198:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9144:10:7",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9151:3:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9144:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_array_uint32_dyn_calldata",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8768:5:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "8775:6:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8783:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8791:3:7",
                            "type": ""
                          }
                        ],
                        "src": "8722:438:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9208:71:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9225:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9238:3:7",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "9243:5:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "9234:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9234:15:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9255:3:7",
                                            "type": "",
                                            "value": "224"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9260:10:7",
                                            "type": "",
                                            "value": "0xffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "9251:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9251:20:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "9230:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9230:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9218:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9218:55:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9218:55:7"
                            }
                          ]
                        },
                        "name": "abi_encode_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "9192:5:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9199:3:7",
                            "type": ""
                          }
                        ],
                        "src": "9165:114:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9555:817:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9565:16:7",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9578:3:7"
                              },
                              "variables": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulTypedName",
                                  "src": "9569:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9590:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9610:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9604:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9604:13:7"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "9594:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9626:12:7",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9635:3:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "9626:5:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9647:14:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9657:4:7",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "9651:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9670:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9688:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9696:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9684:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9684:15:7"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "9674:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9708:12:7",
                              "value": {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "9717:3:7"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "9712:1:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9778:152:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "9799:5:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "srcPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "9816:6:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "9810:5:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "9810:13:7"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "9833:3:7",
                                                      "type": "",
                                                      "value": "160"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "9838:1:7",
                                                      "type": "",
                                                      "value": "1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9829:3:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9829:11:7"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "9842:1:7",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "9825:3:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "9825:19:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "9806:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9806:39:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "9792:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9792:54:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9792:54:7"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "9859:23:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "9872:5:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "9879:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "9868:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9868:14:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "9859:5:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "9895:25:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "9909:6:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "9917:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "9905:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9905:15:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "9895:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "9740:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9743:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9737:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9737:13:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "9751:18:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "9753:14:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "9762:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9765:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "9758:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9758:9:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "9753:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "9733:3:7",
                                "statements": []
                              },
                              "src": "9729:201:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9939:18:7",
                              "value": {
                                "name": "pos_1",
                                "nodeType": "YulIdentifier",
                                "src": "9952:5:7"
                              },
                              "variables": [
                                {
                                  "name": "pos_2",
                                  "nodeType": "YulTypedName",
                                  "src": "9943:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9966:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9988:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9982:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9982:13:7"
                              },
                              "variables": [
                                {
                                  "name": "length_1",
                                  "nodeType": "YulTypedName",
                                  "src": "9970:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10004:14:7",
                              "value": {
                                "name": "pos_1",
                                "nodeType": "YulIdentifier",
                                "src": "10013:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "10004:5:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10027:31:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10047:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10055:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10043:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10043:15:7"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr_1",
                                  "nodeType": "YulTypedName",
                                  "src": "10031:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10067:14:7",
                              "value": {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "10078:3:7"
                              },
                              "variables": [
                                {
                                  "name": "i_1",
                                  "nodeType": "YulTypedName",
                                  "src": "10071:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10147:149:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "10168:5:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "srcPtr_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10185:8:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "10179:5:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "10179:15:7"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "10196:10:7",
                                              "type": "",
                                              "value": "0xffffffff"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "10175:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10175:32:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "10161:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10161:47:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10161:47:7"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "10221:23:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "10234:5:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "10241:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10230:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10230:14:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "10221:5:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "10257:29:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "10273:8:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "10283:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10269:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10269:17:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "10257:8:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10101:3:7"
                                  },
                                  {
                                    "name": "length_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10106:8:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10098:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10098:17:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "10116:22:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "10118:18:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "10129:3:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10134:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10125:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10125:11:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "10118:3:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "10094:3:7",
                                "statements": []
                              },
                              "src": "10090:206:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "10323:6:7"
                                  },
                                  {
                                    "name": "pos_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "10331:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "10305:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10305:32:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10305:32:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10346:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "10357:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10364:1:7",
                                    "type": "",
                                    "value": "4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10353:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10353:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "10346:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint32__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9515:3:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "9520:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9528:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9536:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9547:3:7",
                            "type": ""
                          }
                        ],
                        "src": "9284:1088:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10478:102:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10488:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10500:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10511:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10496:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10496:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10488:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10530:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "10545:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "10561:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "10566:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "10557:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10557:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "10570:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "10553:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10553:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "10541:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10541:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10523:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10523:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10523:51:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10447:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10458:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10469:4:7",
                            "type": ""
                          }
                        ],
                        "src": "10377:203:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10858:329:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10875:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10886:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10868:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10868:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10868:21:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10898:87:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10950:6:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10958:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10970:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10981:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10966:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10966:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "10912:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10912:73:7"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "10902:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11005:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11016:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11001:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11001:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "11025:6:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11033:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11021:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11021:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10994:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10994:50:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10994:50:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11053:68:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "11098:6:7"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "11106:6:7"
                                  },
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11114:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_array_uint32_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "11061:36:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11061:60:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11053:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11141:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11152:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11137:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11137:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "11161:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11169:10:7",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "11157:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11157:23:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11130:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11130:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11130:51:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint32_$dyn_calldata_ptr_t_uint32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10795:9:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "10806:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "10814:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "10822:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10830:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10838:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10849:4:7",
                            "type": ""
                          }
                        ],
                        "src": "10585:602:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11493:400:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11510:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11521:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11503:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11503:22:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11503:22:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11534:88:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11586:6:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11594:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11606:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11617:3:7",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11602:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11602:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "11548:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11548:74:7"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "11538:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11642:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11653:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11638:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11638:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "11662:6:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11670:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11658:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11658:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11631:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11631:50:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11631:50:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11690:68:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "11735:6:7"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "11743:6:7"
                                  },
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11751:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_array_uint32_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "11698:36:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11698:60:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11690:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11778:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11789:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11774:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11774:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "11798:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11806:10:7",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "11794:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11794:23:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11767:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11767:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11767:51:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11838:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11849:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11834:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11834:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value5",
                                        "nodeType": "YulIdentifier",
                                        "src": "11858:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "11874:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "11879:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "11870:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "11870:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "11883:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "11866:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11866:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "11854:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11854:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11827:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11827:60:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11827:60:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint32_$dyn_calldata_ptr_t_uint32_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint32_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11422:9:7",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "11433:6:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "11441:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "11449:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "11457:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "11465:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11473:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11484:4:7",
                            "type": ""
                          }
                        ],
                        "src": "11192:701:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11999:76:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12009:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12021:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12032:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12017:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12017:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12009:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12051:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12062:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12044:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12044:25:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12044:25:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11968:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11979:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11990:4:7",
                            "type": ""
                          }
                        ],
                        "src": "11898:177:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12222:145:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12232:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12244:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12255:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12240:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12240:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12232:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12274:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "12289:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "12305:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "12310:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "12301:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12301:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "12314:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "12297:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12297:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "12285:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12285:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12267:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12267:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12267:51:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12338:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12349:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12334:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12334:18:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12354:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12327:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12327:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12327:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ERC20_$394_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12183:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "12194:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12202:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12213:4:7",
                            "type": ""
                          }
                        ],
                        "src": "12080:287:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12546:165:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12563:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12574:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12556:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12556:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12556:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12597:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12608:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12593:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12593:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12613:2:7",
                                    "type": "",
                                    "value": "15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12586:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12586:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12586:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12636:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12647:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12632:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12632:18:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12652:17:7",
                                    "type": "",
                                    "value": "TRANSFER_FAILED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12625:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12625:45:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12625:45:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12679:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12691:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12702:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12687:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12687:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12679:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12523:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12537:4:7",
                            "type": ""
                          }
                        ],
                        "src": "12372:339:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12890:169:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12907:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12918:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12900:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12900:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12900:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12941:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12952:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12937:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12937:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12957:2:7",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12930:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12930:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12930:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12980:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12991:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12976:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12976:18:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12996:21:7",
                                    "type": "",
                                    "value": "ETH_TRANSFER_FAILED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12969:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12969:49:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12969:49:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13027:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13039:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13050:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13035:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13035:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13027:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12867:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12881:4:7",
                            "type": ""
                          }
                        ],
                        "src": "12716:343:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13165:76:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13175:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13187:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13198:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13183:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13183:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13175:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13217:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13228:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13210:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13210:25:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13210:25:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13134:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13145:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13156:4:7",
                            "type": ""
                          }
                        ],
                        "src": "13064:177:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13526:1028:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "13536:32:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13554:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13565:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13550:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13550:18:7"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "13540:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13584:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13595:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13577:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13577:25:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13577:25:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "13611:12:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13621:2:7",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "13615:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13643:9:7"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "13654:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13639:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13639:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13659:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13632:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13632:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13632:30:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "13671:17:7",
                              "value": {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "13682:6:7"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulTypedName",
                                  "src": "13675:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13704:6:7"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "13712:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13697:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13697:22:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13697:22:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13728:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13739:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13750:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13735:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13735:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "13728:3:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "13763:20:7",
                              "value": {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "13777:6:7"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "13767:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "13792:13:7",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "13801:4:7"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "13796:1:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13863:228:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "13877:33:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "13903:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "13890:12:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13890:20:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulTypedName",
                                        "src": "13881:5:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "13948:5:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "validator_revert_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "13923:24:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13923:31:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13923:31:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "13974:3:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "value",
                                              "nodeType": "YulIdentifier",
                                              "src": "13983:5:7"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "13998:3:7",
                                                      "type": "",
                                                      "value": "160"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "14003:1:7",
                                                      "type": "",
                                                      "value": "1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "13994:3:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "13994:11:7"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "14007:1:7",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "13990:3:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "13990:19:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "13979:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "13979:31:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "13967:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13967:44:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13967:44:7"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "14024:19:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "14035:3:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "14040:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "14031:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14031:12:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "14024:3:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "14056:25:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "14070:6:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "14078:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "14066:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14066:15:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "14056:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "13825:1:7"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "13828:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "13822:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13822:13:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "13836:18:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "13838:14:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "13847:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13850:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "13843:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13843:9:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "13838:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "13818:3:7",
                                "statements": []
                              },
                              "src": "13814:277:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14111:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14122:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14107:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14107:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "14131:3:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14136:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "14127:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14127:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14100:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14100:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14100:47:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14156:16:7",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14169:3:7"
                              },
                              "variables": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulTypedName",
                                  "src": "14160:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14181:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "14201:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "14195:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14195:13:7"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "14185:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14224:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "14229:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14217:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14217:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14217:19:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14245:21:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14258:3:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14263:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14254:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14254:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "14245:5:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14275:31:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "14295:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14303:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14291:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14291:15:7"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr_1",
                                  "nodeType": "YulTypedName",
                                  "src": "14279:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14315:15:7",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "14326:4:7"
                              },
                              "variables": [
                                {
                                  "name": "i_1",
                                  "nodeType": "YulTypedName",
                                  "src": "14319:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14394:132:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "14415:5:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "srcPtr_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "14428:8:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "14422:5:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14422:15:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "14408:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14408:30:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14408:30:7"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "14451:23:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "14464:5:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "14471:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "14460:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14460:14:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "14451:5:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "14487:29:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "14503:8:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "14513:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "14499:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14499:17:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "14487:8:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14350:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "14355:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14347:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14347:15:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "14363:22:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "14365:18:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "14376:3:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14381:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "14372:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14372:11:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "14365:3:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "14343:3:7",
                                "statements": []
                              },
                              "src": "14339:187:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14535:13:7",
                              "value": {
                                "name": "pos_1",
                                "nodeType": "YulIdentifier",
                                "src": "14543:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14535:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_array$_t_contract$_ERC20_$394_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13471:9:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "13482:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "13490:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "13498:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13506:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13517:4:7",
                            "type": ""
                          }
                        ],
                        "src": "13246:1308:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14688:119:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14698:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14710:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14721:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14706:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14706:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14698:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14740:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "14751:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14733:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14733:25:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14733:25:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14778:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14789:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14774:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14774:18:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14794:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14767:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14767:34:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14767:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14649:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "14660:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "14668:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14679:4:7",
                            "type": ""
                          }
                        ],
                        "src": "14559:248:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14911:93:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14921:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14933:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14944:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14929:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14929:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14921:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14963:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "14978:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14986:10:7",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "14974:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14974:23:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14956:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14956:42:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14956:42:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14880:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "14891:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14902:4:7",
                            "type": ""
                          }
                        ],
                        "src": "14812:192:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15057:80:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15084:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "15086:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15086:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15086:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15073:1:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "15080:1:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "15076:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15076:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15070:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15070:13:7"
                              },
                              "nodeType": "YulIf",
                              "src": "15067:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15115:16:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15126:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15129:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15122:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15122:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "15115:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "15040:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "15043:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "15049:3:7",
                            "type": ""
                          }
                        ],
                        "src": "15009:128:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15189:181:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15199:20:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15209:10:7",
                                "type": "",
                                "value": "0xffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "15203:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15228:21:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15243:1:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15246:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15239:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15239:10:7"
                              },
                              "variables": [
                                {
                                  "name": "x_1",
                                  "nodeType": "YulTypedName",
                                  "src": "15232:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15258:21:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15273:1:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15276:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15269:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15269:10:7"
                              },
                              "variables": [
                                {
                                  "name": "y_1",
                                  "nodeType": "YulTypedName",
                                  "src": "15262:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15313:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "15315:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15315:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15315:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15294:3:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "15303:2:7"
                                      },
                                      {
                                        "name": "y_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "15307:3:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15299:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15299:12:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15291:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15291:21:7"
                              },
                              "nodeType": "YulIf",
                              "src": "15288:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15344:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15355:3:7"
                                  },
                                  {
                                    "name": "y_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15360:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15351:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15351:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "15344:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "15172:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "15175:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "15181:3:7",
                            "type": ""
                          }
                        ],
                        "src": "15142:228:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15424:76:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15446:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "15448:16:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15448:18:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15448:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15440:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15443:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15437:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15437:8:7"
                              },
                              "nodeType": "YulIf",
                              "src": "15434:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15477:17:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15489:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15492:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "15485:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15485:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "15477:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "15406:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "15409:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "15415:4:7",
                            "type": ""
                          }
                        ],
                        "src": "15375:125:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15537:95:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15554:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15561:3:7",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15566:10:7",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "15557:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15557:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15547:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15547:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15547:31:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15594:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15597:4:7",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15587:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15587:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15587:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15618:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15621:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "15611:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15611:15:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15611:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "15505:127:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15682:86:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15746:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15755:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15758:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15748:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15748:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15748:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15705:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15716:5:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "15731:3:7",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "15736:1:7",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15727:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "15727:11:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "15740:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "15723:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "15723:19:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "15712:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15712:31:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "15702:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15702:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15695:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15695:50:7"
                              },
                              "nodeType": "YulIf",
                              "src": "15692:2:7"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15671:5:7",
                            "type": ""
                          }
                        ],
                        "src": "15637:131:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptrt_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        let value3_1, value4_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        value5 := abi_decode_uint32(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptrt_uint32t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value6, value6) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value6, value6) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(value6, value6) }\n        let value3_1, value4_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        value5 := abi_decode_uint32(add(headStart, 96))\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_address(value_1)\n        value6 := value_1\n    }\n    function abi_decode_tuple_t_addresst_contract$_ERC20_$394(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_contract$_ERC20_$394t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptrt_uint32t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value7, value7) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value7, value7) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(value7, value7) }\n        let value4_1, value5_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        value6 := abi_decode_uint32(add(headStart, 128))\n        let value_2 := calldataload(add(headStart, 160))\n        validator_revert_address(value_2)\n        value7 := value_2\n    }\n    function abi_decode_tuple_t_addresst_uint256t_array$_t_contract$_ERC20_$394_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptrt_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value4, value4) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_uint32(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptrt_uint32t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_uint32(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value5 := value\n    }\n    function abi_decode_tuple_t_contract$_ERC20_$394(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_array_address_dyn_calldata(value, length, pos) -> end\n    {\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := value\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let value_1 := calldataload(srcPtr)\n            validator_revert_address(value_1)\n            mstore(pos, and(value_1, sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_array_uint32_dyn_calldata(value, length, pos) -> end\n    {\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := value\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(abi_decode_uint32(srcPtr), 0xffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_uint32(value, pos)\n    {\n        mstore(pos, and(shl(224, value), shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_packed_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let pos_1 := pos\n        let length := mload(value0)\n        pos_1 := pos\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos_1, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos_1 := add(pos_1, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        let pos_2 := pos_1\n        let length_1 := mload(value1)\n        pos_2 := pos_1\n        let srcPtr_1 := add(value1, _1)\n        let i_1 := end\n        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos_2, and(mload(srcPtr_1), 0xffffffff))\n            pos_2 := add(pos_2, _1)\n            srcPtr_1 := add(srcPtr_1, _1)\n        }\n        abi_encode_uint32(value2, pos_2)\n        end := add(pos_2, 4)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint32_$dyn_calldata_ptr_t_uint32__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_array_address_dyn_calldata(value0, value1, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint32_dyn_calldata(value2, value3, tail_1)\n        mstore(add(headStart, 64), and(value4, 0xffffffff))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint32_$dyn_calldata_ptr_t_uint32_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint32_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_array_address_dyn_calldata(value0, value1, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint32_dyn_calldata(value2, value3, tail_1)\n        mstore(add(headStart, 64), and(value4, 0xffffffff))\n        mstore(add(headStart, 96), and(value5, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$394_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"ETH_TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_contract$_ERC20_$394_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), 96)\n        let pos := tail_1\n        mstore(tail_1, value2)\n        pos := add(headStart, 128)\n        let srcPtr := value1\n        let i := tail\n        for { } lt(i, value2) { i := add(i, 1) }\n        {\n            let value := calldataload(srcPtr)\n            validator_revert_address(value)\n            mstore(pos, and(value, sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, 64), sub(pos, headStart))\n        let pos_1 := pos\n        let length := mload(value3)\n        mstore(pos, length)\n        pos_1 := add(pos, _1)\n        let srcPtr_1 := add(value3, _1)\n        let i_1 := tail\n        for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos_1, mload(srcPtr_1))\n            pos_1 := add(pos_1, _1)\n            srcPtr_1 := add(srcPtr_1, _1)\n        }\n        tail := pos_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_add_t_uint32(x, y) -> sum\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "582": [
                  {
                    "length": 32,
                    "start": 688
                  },
                  {
                    "length": 32,
                    "start": 3098
                  },
                  {
                    "length": 32,
                    "start": 4204
                  },
                  {
                    "length": 32,
                    "start": 4253
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604052600436106101185760003560e01c806377b1e4e9116100a0578063c7de644011610064578063c7de64401461034e578063d0e4b2f41461036e578063e10e51d61461038e578063e61cb05e146103cb578063ecef0ace146103eb57600080fd5b806377b1e4e91461027e5780638117abc11461029e57806388c662aa146102d2578063a5e3909e1461030e578063c3a8962c1461032e57600080fd5b80633bb66a7b116100e75780633bb66a7b146101cf5780633f26479e146101ef57806352844dd3146102065780636e5f69191461023e5780637601f7821461025e57600080fd5b80631267c6da146101245780631581130214610146578063189cbaa0146101665780631da0b8fc1461018657600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b5061014461013f366004612ae7565b61040b565b005b34801561015257600080fd5b50610144610161366004612c81565b6104a6565b34801561017257600080fd5b50610144610181366004612ae7565b61081a565b34801561019257600080fd5b506101bc6101a1366004612ae7565b6001600160a01b031660009081526002602052604090205490565b6040519081526020015b60405180910390f35b3480156101db57600080fd5b506101bc6101ea366004612ae7565b6108e5565b3480156101fb57600080fd5b506101bc620f424081565b34801561021257600080fd5b50610226610221366004612d92565b61093e565b6040516001600160a01b0390911681526020016101c6565b34801561024a57600080fd5b50610144610259366004612d38565b610c4d565b34801561026a57600080fd5b50610226610279366004612e10565b610d82565b34801561028a57600080fd5b50610144610299366004612c81565b611160565b3480156102aa57600080fd5b506102267f000000000000000000000000000000000000000000000000000000000000000081565b3480156102de57600080fd5b506102266102ed366004612ae7565b6001600160a01b039081166000908152600260205260409020600101541690565b34801561031a57600080fd5b50610144610329366004612bca565b6114a3565b34801561033a57600080fd5b506101bc610349366004612c6f565b6117c6565b34801561035a57600080fd5b50610144610369366004612ae7565b61189a565b34801561037a57600080fd5b50610144610389366004612b03565b611969565b34801561039a57600080fd5b506102266103a9366004612ae7565b6001600160a01b03908116600090815260026020819052604090912001541690565b3480156103d757600080fd5b506101446103e6366004612bca565b611a3b565b3480156103f757600080fd5b50610144610406366004612b3b565b611d8b565b6001600160a01b0381811660009081526002602052604090206001015482911633146104515760405163472511eb60e11b81523360048201526024015b60405180910390fd5b6001600160a01b038216600081815260026020819052604080832090910180546001600160a01b0319169055517f6c2460a415b84be3720c209fe02f2cad7a6bcba21e8637afe8957b7ec4b6ef879190a25050565b85858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808902828101820190935288825290935088925087918291850190849080828437600092019190915250508351869250600211159050610535578251604051630e8c626560e41b815260040161044891815260200190565b8151835114610564578251825160405163b34f351d60e01b815260048101929092526024820152604401610448565b620f42406105718361203c565b63ffffffff16146105a7576105858261203c565b60405163fcc487c160e01b815263ffffffff9091166004820152602401610448565b82516000190160005b8181101561069e578481600101815181106105db57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031685828151811061060c57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03161061063e5760405163ac6bd23360e01b815260048101829052602401610448565b600063ffffffff1684828151811061066657634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff16141561069657604051630db7e4c760e01b815260048101829052602401610448565b6001016105b0565b50600063ffffffff168382815181106106c757634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff1614156106f757604051630db7e4c760e01b815260048101829052602401610448565b50620186a08163ffffffff16111561072a5760405163308440e360e21b815263ffffffff82166004820152602401610448565b61079a8b8a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c9182918501908490808284376000920191909152508b925061208f915050565b61080d8b8b8b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808f0282810182019093528e82529093508e92508d9182918501908490808284376000920191909152508c92508b91506120e19050565b5050505050505050505050565b6001600160a01b03818116600090815260026020526040902060010154829116331461085b5760405163472511eb60e11b8152336004820152602401610448565b6001600160a01b03808316600081815260026020819052604080832091820180546001600160a01b0319169055600190910154905191931691907f943d69cf2bbe08a9d44b3c4ce6da17d939d758739370620871ce99a6437866d0908490a4506001600160a01b0316600090815260026020526040902060010180546001600160a01b0319169055565b6001600160a01b038116600090815260026020526040812054610909576000610915565b816001600160a01b0316315b6001600160a01b03831660009081526020819052604090205461093891906130e1565b92915050565b6000858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040805160208089028281018201909352888252909350889250879182918501908490808284376000920191909152505083518692506002111590506109cf578251604051630e8c626560e41b815260040161044891815260200190565b81518351146109fe578251825160405163b34f351d60e01b815260048101929092526024820152604401610448565b620f4240610a0b8361203c565b63ffffffff1614610a1f576105858261203c565b82516000190160005b81811015610b1657848160010181518110610a5357634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316858281518110610a8457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031610610ab65760405163ac6bd23360e01b815260048101829052602401610448565b600063ffffffff16848281518110610ade57634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415610b0e57604051630db7e4c760e01b815260048101829052602401610448565b600101610a28565b50600063ffffffff16838281518110610b3f57634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415610b6f57604051630db7e4c760e01b815260048101829052602401610448565b50620186a08163ffffffff161115610ba25760405163308440e360e21b815263ffffffff82166004820152602401610448565b6000610c138a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c9182918501908490808284376000920191909152508b92506123bb915050565b9050610c3f7f0000000000000000000000000000000000000000000000000000000000000000826123f1565b9a9950505050505050505050565b60008167ffffffffffffffff811115610c7657634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610c9f578160200160208202803683370190505b50905060008415610cb657610cb386612496565b90505b60005b83811015610d3257610cff87868684818110610ce557634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610cfa9190612ae7565b6124e9565b838281518110610d1f57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101610cb9565b50856001600160a01b03167fa9e30bf144f83390a4fe47562a4e16892108102221c674ff538da0b72a83d17482868686604051610d729493929190613051565b60405180910390a2505050505050565b600086868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808a02828101820190935289825290935089925088918291850190849080828437600092019190915250508351879250600211159050610e13578251604051630e8c626560e41b815260040161044891815260200190565b8151835114610e42578251825160405163b34f351d60e01b815260048101929092526024820152604401610448565b620f4240610e4f8361203c565b63ffffffff1614610e63576105858261203c565b82516000190160005b81811015610f5a57848160010181518110610e9757634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316858281518110610ec857634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031610610efa5760405163ac6bd23360e01b815260048101829052602401610448565b600063ffffffff16848281518110610f2257634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415610f5257604051630db7e4c760e01b815260048101829052602401610448565b600101610e6c565b50600063ffffffff16838281518110610f8357634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415610fb357604051630db7e4c760e01b815260048101829052602401610448565b50620186a08163ffffffff161115610fe65760405163308440e360e21b815263ffffffff82166004820152602401610448565b60006110578b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808f0282810182019093528e82529093508e92508d9182918501908490808284376000920191909152508c92506123bb915050565b90506001600160a01b038616611098576110917f000000000000000000000000000000000000000000000000000000000000000082612555565b94506110f5565b6110c17f0000000000000000000000000000000000000000000000000000000000000000612605565b6001600160a01b03818116600090815260026020526040902060010180546001600160a01b03191691891691909117905594505b6001600160a01b03851660008181526002602052604090819020839055517fd2bcf51a5767c814cfe0266a99141f75a32103bbf8c400fbc1ac0c3b73ce25e89061114a908e908e908e908e908e908e90613000565b60405180910390a2505050509695505050505050565b6001600160a01b0388811660009081526002602052604090206001015489911633146111a15760405163472511eb60e11b8152336004820152602401610448565b86868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808a02828101820190935289825290935089925088918291850190849080828437600092019190915250508351879250600211159050611230578251604051630e8c626560e41b815260040161044891815260200190565b815183511461125f578251825160405163b34f351d60e01b815260048101929092526024820152604401610448565b620f424061126c8361203c565b63ffffffff1614611280576105858261203c565b82516000190160005b81811015611377578481600101815181106112b457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03168582815181106112e557634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316106113175760405163ac6bd23360e01b815260048101829052602401610448565b600063ffffffff1684828151811061133f57634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff16141561136f57604051630db7e4c760e01b815260048101829052602401610448565b600101611289565b50600063ffffffff168382815181106113a057634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff1614156113d057604051630db7e4c760e01b815260048101829052602401610448565b50620186a08163ffffffff1611156114035760405163308440e360e21b815263ffffffff82166004820152602401610448565b6114118c8b8b8b8b8b6126b4565b6114958c8c8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508d92508c91506120e19050565b505050505050505050505050565b6001600160a01b0387811660009081526002602052604090206001015488911633146114e45760405163472511eb60e11b8152336004820152602401610448565b86868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808a02828101820190935289825290935089925088918291850190849080828437600092019190915250508351879250600211159050611573578251604051630e8c626560e41b815260040161044891815260200190565b81518351146115a2578251825160405163b34f351d60e01b815260048101929092526024820152604401610448565b620f42406115af8361203c565b63ffffffff16146115c3576105858261203c565b82516000190160005b818110156116ba578481600101815181106115f757634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031685828151811061162857634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03161061165a5760405163ac6bd23360e01b815260048101829052602401610448565b600063ffffffff1684828151811061168257634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff1614156116b257604051630db7e4c760e01b815260048101829052602401610448565b6001016115cc565b50600063ffffffff168382815181106116e357634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff16141561171357604051630db7e4c760e01b815260048101829052602401610448565b50620186a08163ffffffff1611156117465760405163308440e360e21b815263ffffffff82166004820152602401610448565b6117548b8b8b8b8b8b6126b4565b61080d8b8b8b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808f0282810182019093528e82529093508e92508d9182918501908490808284376000920191909152508c92508b915061278d9050565b6001600160a01b0382166000908152600260205260408120546117ea576000611863565b6040516370a0823160e01b81526001600160a01b0384811660048301528316906370a082319060240160206040518083038186803b15801561182b57600080fd5b505afa15801561183f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118639190612ea1565b6001600160a01b0380841660009081526001602090815260408083209388168352929052205461189391906130e1565b9392505050565b6001600160a01b038181166000908152600260208190526040909120015482911633146118dc5760405163472511eb60e11b8152336004820152602401610448565b6001600160a01b03808316600081815260026020819052604080832091820180546001600160a01b0319169055600190910154905133949190911692917f943d69cf2bbe08a9d44b3c4ce6da17d939d758739370620871ce99a6437866d091a4506001600160a01b0316600090815260026020526040902060010180546001600160a01b03191633179055565b6001600160a01b0382811660009081526002602052604090206001015483911633146119aa5760405163472511eb60e11b8152336004820152602401610448565b816001600160a01b0381166119dd5760405163c369130760e01b81526001600160a01b0382166004820152602401610448565b6001600160a01b03848116600081815260026020819052604080832090910180546001600160a01b0319169488169485179055517f107cf6ea8668d533df1aab5bb8b6315bb0c25f0b6c955558d09368f290668fc79190a350505050565b85858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808902828101820190935288825290935088925087918291850190849080828437600092019190915250508351869250600211159050611aca578251604051630e8c626560e41b815260040161044891815260200190565b8151835114611af9578251825160405163b34f351d60e01b815260048101929092526024820152604401610448565b620f4240611b068361203c565b63ffffffff1614611b1a576105858261203c565b82516000190160005b81811015611c1157848160010181518110611b4e57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316858281518110611b7f57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031610611bb15760405163ac6bd23360e01b815260048101829052602401610448565b600063ffffffff16848281518110611bd957634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415611c0957604051630db7e4c760e01b815260048101829052602401610448565b600101611b23565b50600063ffffffff16838281518110611c3a57634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415611c6a57604051630db7e4c760e01b815260048101829052602401610448565b50620186a08163ffffffff161115611c9d5760405163308440e360e21b815263ffffffff82166004820152602401610448565b611d0d8a8a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c9182918501908490808284376000920191909152508b925061208f915050565b611d7f8a8a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c9182918501908490808284376000920191909152508b92508a915061278d9050565b50505050505050505050565b6001600160a01b038681166000908152600260205260409020600101548791163314611dcc5760405163472511eb60e11b8152336004820152602401610448565b85858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808902828101820190935288825290935088925087918291850190849080828437600092019190915250508351869250600211159050611e5b578251604051630e8c626560e41b815260040161044891815260200190565b8151835114611e8a578251825160405163b34f351d60e01b815260048101929092526024820152604401610448565b620f4240611e978361203c565b63ffffffff1614611eab576105858261203c565b82516000190160005b81811015611fa257848160010181518110611edf57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316858281518110611f1057634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031610611f425760405163ac6bd23360e01b815260048101829052602401610448565b600063ffffffff16848281518110611f6a57634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415611f9a57604051630db7e4c760e01b815260048101829052602401610448565b600101611eb4565b50600063ffffffff16838281518110611fcb57634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff161415611ffb57604051630db7e4c760e01b815260048101829052602401610448565b50620186a08163ffffffff16111561202e5760405163308440e360e21b815263ffffffff82166004820152602401610448565b611d7f8a8a8a8a8a8a6126b4565b8051600090815b818110156120885783818151811061206b57634e487b7160e01b600052603260045260246000fd5b60200260200101518361207e91906130f9565b9250600101612043565b5050919050565b600061209c8484846123bb565b6001600160a01b03861660009081526002602052604090205490915081146120da5760405163dd5ff45760e01b815260048101829052602401610448565b5050505050565b6001600160a01b038581166000818152600160209081526040808320948b16808452949091528082205490516370a0823160e01b815260048101949094529092909183916370a082319060240160206040518083038186803b15801561214657600080fd5b505afa15801561215a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217e9190612ea1565b9050801561218b57600019015b8115612198576001820391505b818101925081156121cc576001600160a01b038089166000908152600160208181526040808420948e168452939052919020555b836001600160a01b0316886001600160a01b03168a6001600160a01b03167fb5ee5dc3d2c31a019bbf2c787e0e9c97971c96aceea1c38c12fc8fd25c536d468660405161221b91815260200190565b60405180910390a463ffffffff85161561228d576001600160a01b038881166000908152600160205260408120620f424063ffffffff89168702049283929088166122665733612268565b875b6001600160a01b03168152602081019190915260400160002080549091019055909203915b865160005b81811015612345576122d6858983815181106122be57634e487b7160e01b600052603260045260246000fd5b602002602001015163ffffffff16620f424091020490565b6001600160a01b038b1660009081526001602052604081208b519091908c908590811061231357634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b0316825281019190915260400160002080549091019055600101612292565b505080156123b057604051633e0f9fff60e11b81526001600160a01b038981166004830152602482018390528a1690637c1f3ffe90604401600060405180830381600087803b15801561239757600080fd5b505af11580156123ab573d6000803e3d6000fd5b505050505b505050505050505050565b60008383836040516020016123d293929190612f39565b6040516020818303038152906040528051906020012090509392505050565b6000611893838330604051723d605d80600a3d3981f336603057343d52307f60681b81527f830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b160138201527260203da23d3df35b3d3d3d3d363d3d37363d7360681b6033820152606093841b60468201526d5af43d3d93803e605b57fd5bf3ff60901b605a820152921b6068830152607c8201526067808220609c830152605591012090565b6001600160a01b0381166000908152602081905260408120546124bb90600190613121565b6001600160a01b0383166000818152602081905260409020600190559091506124e4908261296f565b919050565b6001600160a01b038082166000908152600160208181526040808420948716845293905291812054909161251c91613121565b6001600160a01b038084166000818152600160208181526040808420958a168452949052929020919091559091506109389084836129c5565b6000604051723d605d80600a3d3981f336603057343d52307f60681b81527f830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b160138201527260203da23d3df35b3d3d3d3d363d3d37363d7360681b60338201528360601b60468201526c5af43d3d93803e605b57fd5bf360981b605a820152826067826000f59150506001600160a01b0381166109385760405163380bbe1360e01b815260040160405180910390fd5b6000604051723d605d80600a3d3981f336603057343d52307f60681b81527f830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b160138201527260203da23d3df35b3d3d3d3d363d3d37363d7360681b60338201528260601b60468201526c5af43d3d93803e605b57fd5bf360981b605a8201526067816000f09150506001600160a01b0381166124e457604051630985da9b60e41b815260040160405180910390fd5b600061272586868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808a028281018201909352898252909350899250889182918501908490808284376000920191909152508792506123bb915050565b6001600160a01b0388166000818152600260205260409081902083905551919250907fce55a01ad467ce2f3080a2cef6eb951b65f489b97956f76c2c04bcddab92aaa99061277c9089908990899089908990612fc0565b60405180910390a250505050505050565b6001600160a01b03851660008181526020819052604081205491319082156127b6576001830392505b5081810182156127dd576001600160a01b0388166000908152602081905260409020600190555b836001600160a01b0316886001600160a01b03167f87c3ca0a87d9b82033e4bc55e6d30621f8d7e0c9d8ca7988edfde8932787b77b8360405161282291815260200190565b60405180910390a363ffffffff85161561288157620f424063ffffffff8616820204806000806001600160a01b03881661285c573361285e565b875b6001600160a01b0316815260208101919091526040016000208054909101905590035b865160005b81811015612907576128b2838983815181106122be57634e487b7160e01b600052603260045260246000fd5b6000808b84815181106128d557634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b0316825281019190915260400160002080549091019055600101612886565b5050811561296557604051632ac3affd60e21b8152600481018390526001600160a01b0389169063ab0ebff490602401600060405180830381600087803b15801561295157600080fd5b505af1158015611495573d6000803e3d6000fd5b5050505050505050565b600080600080600085875af19050806129c05760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606401610448565b505050565b600060405163a9059cbb60e01b81526001600160a01b03841660048201528260248201526000806044836000895af1915050612a0081612a44565b612a3e5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610448565b50505050565b60003d82612a5657806000803e806000fd5b8060208114612a6e578015612a7f5760009250612088565b816000803e60005115159250612088565b5060019392505050565b60008083601f840112612a9a578182fd5b50813567ffffffffffffffff811115612ab1578182fd5b6020830191508360208260051b8501011115612acc57600080fd5b9250929050565b803563ffffffff811681146124e457600080fd5b600060208284031215612af8578081fd5b81356118938161314e565b60008060408385031215612b15578081fd5b8235612b208161314e565b91506020830135612b308161314e565b809150509250929050565b60008060008060008060808789031215612b53578182fd5b8635612b5e8161314e565b9550602087013567ffffffffffffffff80821115612b7a578384fd5b612b868a838b01612a89565b90975095506040890135915080821115612b9e578384fd5b50612bab89828a01612a89565b9094509250612bbe905060608801612ad3565b90509295509295509295565b600080600080600080600060a0888a031215612be4578081fd5b8735612bef8161314e565b9650602088013567ffffffffffffffff80821115612c0b578283fd5b612c178b838c01612a89565b909850965060408a0135915080821115612c2f578283fd5b50612c3c8a828b01612a89565b9095509350612c4f905060608901612ad3565b91506080880135612c5f8161314e565b8091505092959891949750929550565b60008060408385031215612b15578182fd5b60008060008060008060008060c0898b031215612c9c578081fd5b8835612ca78161314e565b97506020890135612cb78161314e565b9650604089013567ffffffffffffffff80821115612cd3578283fd5b612cdf8c838d01612a89565b909850965060608b0135915080821115612cf7578283fd5b50612d048b828c01612a89565b9095509350612d17905060808a01612ad3565b915060a0890135612d278161314e565b809150509295985092959890939650565b60008060008060608587031215612d4d578384fd5b8435612d588161314e565b935060208501359250604085013567ffffffffffffffff811115612d7a578283fd5b612d8687828801612a89565b95989497509550505050565b600080600080600060608688031215612da9578081fd5b853567ffffffffffffffff80821115612dc0578283fd5b612dcc89838a01612a89565b90975095506020880135915080821115612de4578283fd5b50612df188828901612a89565b9094509250612e04905060408701612ad3565b90509295509295909350565b60008060008060008060808789031215612e28578182fd5b863567ffffffffffffffff80821115612e3f578384fd5b612e4b8a838b01612a89565b90985096506020890135915080821115612e63578384fd5b50612e7089828a01612a89565b9095509350612e83905060408801612ad3565b91506060870135612e938161314e565b809150509295509295509295565b600060208284031215612eb2578081fd5b5051919050565b81835260006020808501945082825b85811015612ef6578135612edb8161314e565b6001600160a01b031687529582019590820190600101612ec8565b509495945050505050565b81835260006020808501945082825b85811015612ef65763ffffffff612f2683612ad3565b1687529582019590820190600101612f10565b835160009082906020808801845b83811015612f6c5781516001600160a01b031685529382019390820190600101612f47565b50508651818801939250845b81811015612f9a57845163ffffffff1684529382019392820192600101612f78565b505050612fb3818660e01b6001600160e01b0319169052565b6004019695505050505050565b606081526000612fd4606083018789612eb9565b8281036020840152612fe7818688612f01565b91505063ffffffff831660408301529695505050505050565b60808152600061301460808301888a612eb9565b8281036020840152613027818789612f01565b63ffffffff95909516604084015250506001600160a01b0391909116606090910152949350505050565b84815260606020808301829052908201849052600090859060808401835b8781101561309d5783356130828161314e565b6001600160a01b03168252928201929082019060010161306f565b5084810360408601528551808252908201925081860190845b818110156130d2578251855293830193918301916001016130b6565b50929998505050505050505050565b600082198211156130f4576130f4613138565b500190565b600063ffffffff80831681851680830382111561311857613118613138565b01949350505050565b60008282101561313357613133613138565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461316357600080fd5b5056fea2646970667358221220e9325cf15dd6031aeedffbd7fc8a0dba57af230e427ad6f1099a977b399b2d0964736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77B1E4E9 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC7DE6440 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC7DE6440 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xD0E4B2F4 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xE10E51D6 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xE61CB05E EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xECEF0ACE EQ PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x77B1E4E9 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x8117ABC1 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x88C662AA EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xA5E3909E EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xC3A8962C EQ PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3BB66A7B GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x3BB66A7B EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x3F26479E EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x52844DD3 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6E5F6919 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x7601F782 EQ PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1267C6DA EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x15811302 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x189CBAA0 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x1DA0B8FC EQ PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x11F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE7 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C81 JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE7 JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE7 JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH3 0xF4240 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D92 JUMP JUMPDEST PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D38 JUMP JUMPDEST PUSH2 0xC4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E10 JUMP JUMPDEST PUSH2 0xD82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C81 JUMP JUMPDEST PUSH2 0x1160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BCA JUMP JUMPDEST PUSH2 0x14A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C6F JUMP JUMPDEST PUSH2 0x17C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE7 JUMP JUMPDEST PUSH2 0x189A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B03 JUMP JUMPDEST PUSH2 0x1969 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BCA JUMP JUMPDEST PUSH2 0x1A3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B3B JUMP JUMPDEST PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 SWAP2 AND CALLER EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD PUSH32 0x6C2460A415B84BE3720C209FE02F2CAD7A6BCBA21E8637AFE8957B7EC4B6EF87 SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP10 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP9 DUP3 MSTORE SWAP1 SWAP4 POP DUP9 SWAP3 POP DUP8 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP4 MLOAD DUP7 SWAP3 POP PUSH1 0x2 GT ISZERO SWAP1 POP PUSH2 0x535 JUMPI DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xE8C6265 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x564 JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xB34F351D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x448 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x571 DUP4 PUSH2 0x203C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ PUSH2 0x5A7 JUMPI PUSH2 0x585 DUP3 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFCC487C1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x69E JUMPI DUP5 DUP2 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x60C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x63E JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC6BD233 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x666 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x696 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x5B0 JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH3 0x186A0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x72A JUMPI PUSH1 0x40 MLOAD PUSH4 0x308440E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH2 0x79A DUP12 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP12 SWAP3 POP PUSH2 0x208F SWAP2 POP POP JUMP JUMPDEST PUSH2 0x80D DUP12 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP16 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP15 DUP3 MSTORE SWAP1 SWAP4 POP DUP15 SWAP3 POP DUP14 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP13 SWAP3 POP DUP12 SWAP2 POP PUSH2 0x20E1 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 SWAP2 AND CALLER EQ PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 MLOAD SWAP2 SWAP4 AND SWAP2 SWAP1 PUSH32 0x943D69CF2BBE08A9D44B3C4CE6DA17D939D758739370620871CE99A6437866D0 SWAP1 DUP5 SWAP1 LOG4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x909 JUMPI PUSH1 0x0 PUSH2 0x915 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x938 SWAP2 SWAP1 PUSH2 0x30E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP10 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP9 DUP3 MSTORE SWAP1 SWAP4 POP DUP9 SWAP3 POP DUP8 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP4 MLOAD DUP7 SWAP3 POP PUSH1 0x2 GT ISZERO SWAP1 POP PUSH2 0x9CF JUMPI DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xE8C6265 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x9FE JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xB34F351D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x448 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xA0B DUP4 PUSH2 0x203C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ PUSH2 0xA1F JUMPI PUSH2 0x585 DUP3 PUSH2 0x203C JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB16 JUMPI DUP5 DUP2 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0xA53 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA84 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0xAB6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC6BD233 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xADE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xB0E JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xA28 JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB3F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH3 0x186A0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x308440E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC13 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP12 SWAP3 POP PUSH2 0x23BB SWAP2 POP POP JUMP JUMPDEST SWAP1 POP PUSH2 0xC3F PUSH32 0x0 DUP3 PUSH2 0x23F1 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC76 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC9F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP5 ISZERO PUSH2 0xCB6 JUMPI PUSH2 0xCB3 DUP7 PUSH2 0x2496 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD32 JUMPI PUSH2 0xCFF DUP8 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0xCE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCFA SWAP2 SWAP1 PUSH2 0x2AE7 JUMP JUMPDEST PUSH2 0x24E9 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD1F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xCB9 JUMP JUMPDEST POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA9E30BF144F83390A4FE47562A4E16892108102221C674FF538DA0B72A83D174 DUP3 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xD72 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP11 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP10 DUP3 MSTORE SWAP1 SWAP4 POP DUP10 SWAP3 POP DUP9 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP4 MLOAD DUP8 SWAP3 POP PUSH1 0x2 GT ISZERO SWAP1 POP PUSH2 0xE13 JUMPI DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xE8C6265 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xE42 JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xB34F351D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x448 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xE4F DUP4 PUSH2 0x203C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ PUSH2 0xE63 JUMPI PUSH2 0x585 DUP3 PUSH2 0x203C JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF5A JUMPI DUP5 DUP2 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0xE97 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xEC8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0xEFA JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC6BD233 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF22 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xE6C JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF83 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH3 0x186A0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xFE6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x308440E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1057 DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP16 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP15 DUP3 MSTORE SWAP1 SWAP4 POP DUP15 SWAP3 POP DUP14 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP13 SWAP3 POP PUSH2 0x23BB SWAP2 POP POP JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x1098 JUMPI PUSH2 0x1091 PUSH32 0x0 DUP3 PUSH2 0x2555 JUMP JUMPDEST SWAP5 POP PUSH2 0x10F5 JUMP JUMPDEST PUSH2 0x10C1 PUSH32 0x0 PUSH2 0x2605 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP10 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP5 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0xD2BCF51A5767C814CFE0266A99141F75A32103BBF8C400FBC1AC0C3B73CE25E8 SWAP1 PUSH2 0x114A SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 PUSH2 0x3000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP10 SWAP2 AND CALLER EQ PUSH2 0x11A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP11 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP10 DUP3 MSTORE SWAP1 SWAP4 POP DUP10 SWAP3 POP DUP9 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP4 MLOAD DUP8 SWAP3 POP PUSH1 0x2 GT ISZERO SWAP1 POP PUSH2 0x1230 JUMPI DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xE8C6265 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x125F JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xB34F351D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x448 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x126C DUP4 PUSH2 0x203C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ PUSH2 0x1280 JUMPI PUSH2 0x585 DUP3 PUSH2 0x203C JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1377 JUMPI DUP5 DUP2 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x12B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12E5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x1317 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC6BD233 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x133F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x136F JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1289 JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13A0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH3 0x186A0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1403 JUMPI PUSH1 0x40 MLOAD PUSH4 0x308440E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH2 0x1411 DUP13 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x26B4 JUMP JUMPDEST PUSH2 0x1495 DUP13 DUP13 DUP13 DUP13 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP14 SWAP3 POP DUP13 SWAP2 POP PUSH2 0x20E1 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP9 SWAP2 AND CALLER EQ PUSH2 0x14E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP11 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP10 DUP3 MSTORE SWAP1 SWAP4 POP DUP10 SWAP3 POP DUP9 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP4 MLOAD DUP8 SWAP3 POP PUSH1 0x2 GT ISZERO SWAP1 POP PUSH2 0x1573 JUMPI DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xE8C6265 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x15A2 JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xB34F351D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x448 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x15AF DUP4 PUSH2 0x203C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ PUSH2 0x15C3 JUMPI PUSH2 0x585 DUP3 PUSH2 0x203C JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16BA JUMPI DUP5 DUP2 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x15F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1628 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x165A JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC6BD233 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1682 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x16B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x15CC JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x16E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1713 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH3 0x186A0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1746 JUMPI PUSH1 0x40 MLOAD PUSH4 0x308440E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH2 0x1754 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0x26B4 JUMP JUMPDEST PUSH2 0x80D DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP16 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP15 DUP3 MSTORE SWAP1 SWAP4 POP DUP15 SWAP3 POP DUP14 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP13 SWAP3 POP DUP12 SWAP2 POP PUSH2 0x278D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x17EA JUMPI PUSH1 0x0 PUSH2 0x1863 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x182B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x183F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1863 SWAP2 SWAP1 PUSH2 0x2EA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1893 SWAP2 SWAP1 PUSH2 0x30E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 SWAP2 AND CALLER EQ PUSH2 0x18DC JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 MLOAD CALLER SWAP5 SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP2 PUSH32 0x943D69CF2BBE08A9D44B3C4CE6DA17D939D758739370620871CE99A6437866D0 SWAP2 LOG4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP4 SWAP2 AND CALLER EQ PUSH2 0x19AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19DD JUMPI PUSH1 0x40 MLOAD PUSH4 0xC3691307 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP9 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0x107CF6EA8668D533DF1AAB5BB8B6315BB0C25F0B6C955558D09368F290668FC7 SWAP2 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP10 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP9 DUP3 MSTORE SWAP1 SWAP4 POP DUP9 SWAP3 POP DUP8 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP4 MLOAD DUP7 SWAP3 POP PUSH1 0x2 GT ISZERO SWAP1 POP PUSH2 0x1ACA JUMPI DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xE8C6265 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x1AF9 JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xB34F351D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x448 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x1B06 DUP4 PUSH2 0x203C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ PUSH2 0x1B1A JUMPI PUSH2 0x585 DUP3 PUSH2 0x203C JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C11 JUMPI DUP5 DUP2 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x1B4E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x1BB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC6BD233 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1BD9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1C09 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1B23 JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C3A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1C6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH3 0x186A0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1C9D JUMPI PUSH1 0x40 MLOAD PUSH4 0x308440E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH2 0x1D0D DUP11 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP12 SWAP3 POP PUSH2 0x208F SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D7F DUP11 DUP11 DUP11 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP15 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP14 DUP3 MSTORE SWAP1 SWAP4 POP DUP14 SWAP3 POP DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP12 SWAP3 POP DUP11 SWAP2 POP PUSH2 0x278D SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP8 SWAP2 AND CALLER EQ PUSH2 0x1DCC JUMPI PUSH1 0x40 MLOAD PUSH4 0x472511EB PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP10 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP9 DUP3 MSTORE SWAP1 SWAP4 POP DUP9 SWAP3 POP DUP8 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP4 MLOAD DUP7 SWAP3 POP PUSH1 0x2 GT ISZERO SWAP1 POP PUSH2 0x1E5B JUMPI DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xE8C6265 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x448 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x1E8A JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH4 0xB34F351D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x448 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x1E97 DUP4 PUSH2 0x203C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ PUSH2 0x1EAB JUMPI PUSH2 0x585 DUP3 PUSH2 0x203C JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 NOT ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FA2 JUMPI DUP5 DUP2 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x1EDF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F10 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x1F42 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC6BD233 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F6A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1F9A JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1EB4 JUMP JUMPDEST POP PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1FCB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x1FFB JUMPI PUSH1 0x40 MLOAD PUSH4 0xDB7E4C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH3 0x186A0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x202E JUMPI PUSH1 0x40 MLOAD PUSH4 0x308440E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST PUSH2 0x1D7F DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x26B4 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2088 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x206B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x207E SWAP2 SWAP1 PUSH2 0x30F9 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 ADD PUSH2 0x2043 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209C DUP5 DUP5 DUP5 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 EQ PUSH2 0x20DA JUMPI PUSH1 0x40 MLOAD PUSH4 0xDD5FF457 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x448 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP12 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x215A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x217E SWAP2 SWAP1 PUSH2 0x2EA1 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x218B JUMPI PUSH1 0x0 NOT ADD JUMPDEST DUP2 ISZERO PUSH2 0x2198 JUMPI PUSH1 0x1 DUP3 SUB SWAP2 POP JUMPDEST DUP2 DUP2 ADD SWAP3 POP DUP2 ISZERO PUSH2 0x21CC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 DUP15 AND DUP5 MSTORE SWAP4 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB5EE5DC3D2C31A019BBF2C787E0E9C97971C96ACEEA1C38C12FC8FD25C536D46 DUP7 PUSH1 0x40 MLOAD PUSH2 0x221B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH4 0xFFFFFFFF DUP6 AND ISZERO PUSH2 0x228D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH3 0xF4240 PUSH4 0xFFFFFFFF DUP10 AND DUP8 MUL DIV SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND PUSH2 0x2266 JUMPI CALLER PUSH2 0x2268 JUMP JUMPDEST DUP8 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE SWAP1 SWAP3 SUB SWAP2 JUMPDEST DUP7 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2345 JUMPI PUSH2 0x22D6 DUP6 DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x22BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH3 0xF4240 SWAP2 MUL DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP12 MLOAD SWAP1 SWAP2 SWAP1 DUP13 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x2313 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x2292 JUMP JUMPDEST POP POP DUP1 ISZERO PUSH2 0x23B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E0F9FFF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP11 AND SWAP1 PUSH4 0x7C1F3FFE SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x23D2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1893 DUP4 DUP4 ADDRESS PUSH1 0x40 MLOAD PUSH19 0x3D605D80600A3D3981F336603057343D52307F PUSH1 0x68 SHL DUP2 MSTORE PUSH32 0x830D2D700A97AF574B186C80D40429385D24241565B08A7C559BA283A964D9B1 PUSH1 0x13 DUP3 ADD MSTORE PUSH19 0x60203DA23D3DF35B3D3D3D3D363D3D37363D73 PUSH1 0x68 SHL PUSH1 0x33 DUP3 ADD MSTORE PUSH1 0x60 SWAP4 DUP5 SHL PUSH1 0x46 DUP3 ADD MSTORE PUSH14 0x5AF43D3D93803E605B57FD5BF3FF PUSH1 0x90 SHL PUSH1 0x5A DUP3 ADD MSTORE SWAP3 SHL PUSH1 0x68 DUP4 ADD MSTORE PUSH1 0x7C DUP3 ADD MSTORE PUSH1 0x67 DUP1 DUP3 KECCAK256 PUSH1 0x9C DUP4 ADD MSTORE PUSH1 0x55 SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x24BB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE SWAP1 SWAP2 POP PUSH2 0x24E4 SWAP1 DUP3 PUSH2 0x296F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 DUP8 AND DUP5 MSTORE SWAP4 SWAP1 MSTORE SWAP2 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x251C SWAP2 PUSH2 0x3121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP6 DUP11 AND DUP5 MSTORE SWAP5 SWAP1 MSTORE SWAP3 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SWAP1 SWAP2 POP PUSH2 0x938 SWAP1 DUP5 DUP4 PUSH2 0x29C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH19 0x3D605D80600A3D3981F336603057343D52307F PUSH1 0x68 SHL DUP2 MSTORE PUSH32 0x830D2D700A97AF574B186C80D40429385D24241565B08A7C559BA283A964D9B1 PUSH1 0x13 DUP3 ADD MSTORE PUSH19 0x60203DA23D3DF35B3D3D3D3D363D3D37363D73 PUSH1 0x68 SHL PUSH1 0x33 DUP3 ADD MSTORE DUP4 PUSH1 0x60 SHL PUSH1 0x46 DUP3 ADD MSTORE PUSH13 0x5AF43D3D93803E605B57FD5BF3 PUSH1 0x98 SHL PUSH1 0x5A DUP3 ADD MSTORE DUP3 PUSH1 0x67 DUP3 PUSH1 0x0 CREATE2 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH4 0x380BBE13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH19 0x3D605D80600A3D3981F336603057343D52307F PUSH1 0x68 SHL DUP2 MSTORE PUSH32 0x830D2D700A97AF574B186C80D40429385D24241565B08A7C559BA283A964D9B1 PUSH1 0x13 DUP3 ADD MSTORE PUSH19 0x60203DA23D3DF35B3D3D3D3D363D3D37363D73 PUSH1 0x68 SHL PUSH1 0x33 DUP3 ADD MSTORE DUP3 PUSH1 0x60 SHL PUSH1 0x46 DUP3 ADD MSTORE PUSH13 0x5AF43D3D93803E605B57FD5BF3 PUSH1 0x98 SHL PUSH1 0x5A DUP3 ADD MSTORE PUSH1 0x67 DUP2 PUSH1 0x0 CREATE SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x24E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x985DA9B PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2725 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP11 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP10 DUP3 MSTORE SWAP1 SWAP4 POP DUP10 SWAP3 POP DUP9 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP8 SWAP3 POP PUSH2 0x23BB SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD SWAP2 SWAP3 POP SWAP1 PUSH32 0xCE55A01AD467CE2F3080A2CEF6EB951B65F489B97956F76C2C04BCDDAB92AAA9 SWAP1 PUSH2 0x277C SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x2FC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 BALANCE SWAP1 DUP3 ISZERO PUSH2 0x27B6 JUMPI PUSH1 0x1 DUP4 SUB SWAP3 POP JUMPDEST POP DUP2 DUP2 ADD DUP3 ISZERO PUSH2 0x27DD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 SSTORE JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x87C3CA0A87D9B82033E4BC55E6D30621F8D7E0C9D8CA7988EDFDE8932787B77B DUP4 PUSH1 0x40 MLOAD PUSH2 0x2822 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH4 0xFFFFFFFF DUP6 AND ISZERO PUSH2 0x2881 JUMPI PUSH3 0xF4240 PUSH4 0xFFFFFFFF DUP7 AND DUP3 MUL DIV DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x285C JUMPI CALLER PUSH2 0x285E JUMP JUMPDEST DUP8 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE SWAP1 SUB JUMPDEST DUP7 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2907 JUMPI PUSH2 0x28B2 DUP4 DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x22BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP12 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x28D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x2886 JUMP JUMPDEST POP POP DUP2 ISZERO PUSH2 0x2965 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2AC3AFFD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xAB0EBFF4 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1495 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 GAS CALL SWAP1 POP DUP1 PUSH2 0x29C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x11551217D514905394D1915497D19052531151 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x448 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE DUP3 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 PUSH1 0x44 DUP4 PUSH1 0x0 DUP10 GAS CALL SWAP2 POP POP PUSH2 0x2A00 DUP2 PUSH2 0x2A44 JUMP JUMPDEST PUSH2 0x2A3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1514905394D1915497D19052531151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x448 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 RETURNDATASIZE DUP3 PUSH2 0x2A56 JUMPI DUP1 PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP2 EQ PUSH2 0x2A6E JUMPI DUP1 ISZERO PUSH2 0x2A7F JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x2088 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD ISZERO ISZERO SWAP3 POP PUSH2 0x2088 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2A9A JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AB1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2ACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x24E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1893 DUP2 PUSH2 0x314E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B15 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2B20 DUP2 PUSH2 0x314E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2B30 DUP2 PUSH2 0x314E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2B53 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2B5E DUP2 PUSH2 0x314E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2B7A JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2B86 DUP11 DUP4 DUP12 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2B9E JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x2BAB DUP10 DUP3 DUP11 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x2BBE SWAP1 POP PUSH1 0x60 DUP9 ADD PUSH2 0x2AD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2BE4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x2BEF DUP2 PUSH2 0x314E JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C0B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2C17 DUP12 DUP4 DUP13 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C2F JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2C3C DUP11 DUP3 DUP12 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x2C4F SWAP1 POP PUSH1 0x60 DUP10 ADD PUSH2 0x2AD3 JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH2 0x2C5F DUP2 PUSH2 0x314E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B15 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2C9C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2CA7 DUP2 PUSH2 0x314E JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x2CB7 DUP2 PUSH2 0x314E JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CD3 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2CDF DUP13 DUP4 DUP14 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CF7 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2D04 DUP12 DUP3 DUP13 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x2D17 SWAP1 POP PUSH1 0x80 DUP11 ADD PUSH2 0x2AD3 JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH2 0x2D27 DUP2 PUSH2 0x314E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2D4D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2D58 DUP2 PUSH2 0x314E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D7A JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2D86 DUP8 DUP3 DUP9 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2DA9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2DC0 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2DCC DUP10 DUP4 DUP11 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2DE4 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2DF1 DUP9 DUP3 DUP10 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x2E04 SWAP1 POP PUSH1 0x40 DUP8 ADD PUSH2 0x2AD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2E28 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E3F JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2E4B DUP11 DUP4 DUP12 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E63 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x2E70 DUP10 DUP3 DUP11 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x2E83 SWAP1 POP PUSH1 0x40 DUP9 ADD PUSH2 0x2AD3 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x2E93 DUP2 PUSH2 0x314E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EB2 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2EF6 JUMPI DUP2 CALLDATALOAD PUSH2 0x2EDB DUP2 PUSH2 0x314E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2EC8 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2EF6 JUMPI PUSH4 0xFFFFFFFF PUSH2 0x2F26 DUP4 PUSH2 0x2AD3 JUMP JUMPDEST AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F10 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP9 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F6C JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F47 JUMP JUMPDEST POP POP DUP7 MLOAD DUP2 DUP9 ADD SWAP4 SWAP3 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2F9A JUMPI DUP5 MLOAD PUSH4 0xFFFFFFFF AND DUP5 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP3 DUP3 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2F78 JUMP JUMPDEST POP POP POP PUSH2 0x2FB3 DUP2 DUP7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x4 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2FD4 PUSH1 0x60 DUP4 ADD DUP8 DUP10 PUSH2 0x2EB9 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2FE7 DUP2 DUP7 DUP9 PUSH2 0x2F01 JUMP JUMPDEST SWAP2 POP POP PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3014 PUSH1 0x80 DUP4 ADD DUP9 DUP11 PUSH2 0x2EB9 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x3027 DUP2 DUP8 DUP10 PUSH2 0x2F01 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP1 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP6 SWAP1 PUSH1 0x80 DUP5 ADD DUP4 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x309D JUMPI DUP4 CALLDATALOAD PUSH2 0x3082 DUP2 PUSH2 0x314E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x306F JUMP JUMPDEST POP DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE SWAP1 DUP3 ADD SWAP3 POP DUP2 DUP7 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x30D2 JUMPI DUP3 MLOAD DUP6 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x30B6 JUMP JUMPDEST POP SWAP3 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x30F4 JUMPI PUSH2 0x30F4 PUSH2 0x3138 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x3118 JUMPI PUSH2 0x3118 PUSH2 0x3138 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3133 JUMPI PUSH2 0x3133 PUSH2 0x3138 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 ORIGIN 0x5C CALL 0x5D 0xD6 SUB BYTE 0xEE 0xDF 0xFB 0xD7 0xFC DUP11 0xD 0xBA JUMPI 0xAF 0x23 0xE TIMESTAMP PUSH27 0xD6F1099A977B399B2D0964736F6C63430008040033000000000000 ",
              "sourceMap": "12217:27523:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20470:198;;;;;;;;;;-1:-1:-1;20470:198:2;;;;;:::i;:::-;;:::i;:::-;;24615:577;;;;;;;;;;-1:-1:-1;24615:577:2;;;;;:::i;:::-;;:::i;21237:270::-;;;;;;;;;;-1:-1:-1;21237:270:2;;;;;:::i;:::-;;:::i;27583:100::-;;;;;;;;;;-1:-1:-1;27583:100:2;;;;;:::i;:::-;-1:-1:-1;;;;;27660:13:2;27638:7;27660:13;;;:6;:13;;;;;:18;;27583:100;;;;12044:25:7;;;12032:2;12017:18;27583:100:2;;;;;;;;28462:168;;;;;;;;;;-1:-1:-1;28462:168:2;;;;;:::i;:::-;;:::i;12634:46::-;;;;;;;;;;;;12677:3;12634:46;;18342:462;;;;;;;;;;-1:-1:-1;18342:462:2;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;10541:32:7;;;10523:51;;10511:2;10496:18;18342:462:2;10478:102:7;26801:609:2;;;;;;;;;;-1:-1:-1;26801:609:2;;;;;:::i;:::-;;:::i;16948:885::-;;;;;;;;;;-1:-1:-1;16948:885:2;;;;;:::i;:::-;;:::i;25927:638::-;;;;;;;;;;-1:-1:-1;25927:638:2;;;;;:::i;:::-;;:::i;12872:54::-;;;;;;;;;;;;;;;27838:112;;;;;;;;;;-1:-1:-1;27838:112:2;;;;;:::i;:::-;-1:-1:-1;;;;;27921:13:2;;;27899:7;27921:13;;;:6;:13;;;;;:24;;;;;27838:112;23169:604;;;;;;;;;;-1:-1:-1;23169:604:2;;;;;:::i;:::-;;:::i;28874:221::-;;;;;;;;;;-1:-1:-1;28874:221:2;;;;;:::i;:::-;;:::i;20836:277::-;;;;;;;;;;-1:-1:-1;20836:277:2;;;;;:::i;:::-;;:::i;20023:279::-;;;;;;;;;;-1:-1:-1;20023:279:2;;;;;:::i;:::-;;:::i;28141:150::-;;;;;;;;;;-1:-1:-1;28141:150:2;;;;;:::i;:::-;-1:-1:-1;;;;;28250:13:2;;;28226:7;28250:13;;;:6;:13;;;;;;;;:36;;;;28141:150;22120:543;;;;;;;;;;-1:-1:-1;22120:543:2;;;;;:::i;:::-;;:::i;19276:342::-;;;;;;;;;;-1:-1:-1;19276:342:2;;;;;:::i;:::-;;:::i;20470:198::-;-1:-1:-1;;;;;13510:13:2;;;;;;;:6;:13;;;;;:24;;;:13;;:24;13496:10;:38;13492:75;;13543:24;;-1:-1:-1;;;13543:24:2;;13556:10;13543:24;;;10523:51:7;10496:18;;13543:24:2;;;;;;;;13492:75;-1:-1:-1;;;;;20588:13:2;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;:36;;::::1;20581:43:::0;;-1:-1:-1;;;;;;20581:43:2::1;::::0;;20635:28;::::1;::::0;20588:13;20635:28:::1;20470:198:::0;;:::o;24615:577::-;24843:8;;14284:1427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14284:1427:2;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24853:18:2;;-1:-1:-1;24853:18:2;;;;14284:1427;;;24853:18;;14284:1427;24853:18;14284:1427;;;;;;;;;-1:-1:-1;;14416:15:2;;24873:14;;-1:-1:-1;14434:1:2;-1:-1:-1;14412:83:2;;-1:-1:-1;14412:83:2;;14479:8;:15;14450:45;;-1:-1:-1;;;14450:45:2;;;;;;12044:25:7;;12032:2;12017:18;;11999:76;14412:83:2;14524:18;:25;14505:8;:15;:44;14501:175;;14618:15;;14643:25;;14564:112;;-1:-1:-1;;;14564:112:2;;;;;14733:25:7;;;;14774:18;;;14767:34;14706:18;;14564:112:2;14688:119:7;14501:175:2;12677:3;14749:27;14757:18;14749:7;:27::i;:::-;:47;;;14745:130;;14847:27;14855:18;14847:7;:27::i;:::-;14811:64;;-1:-1:-1;;;14811:64:2;;14986:10:7;14974:23;;;14811:64:2;;;14956:42:7;14929:18;;14811:64:2;14911:93:7;14745:130:2;15020:15;;-1:-1:-1;;15020:19:2;14999:18;15047:318;15071:10;15067:1;:14;15047:318;;;15179:8;15188:1;15192;15188:5;15179:15;;;;;;-1:-1:-1;;;15179:15:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;15164:30:2;:8;15173:1;15164:11;;;;;;-1:-1:-1;;;15164:11:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;15164:30:2;;15160:88;;15213:35;;-1:-1:-1;;;15213:35:2;;;;;12044:25:7;;;12017:18;;15213:35:2;11999:76:7;15160:88:2;15294:1;15262:34;;:18;15281:1;15262:21;;;;;;-1:-1:-1;;;15262:21:2;;;;;;;;;;;;;;;:34;;;15258:98;;;15315:41;;-1:-1:-1;;;15315:41:2;;;;;12044:25:7;;;12017:18;;15315:41:2;11999:76:7;15258:98:2;15083:3;;15047:318;;;;15512:1;15471:43;;:18;15490:10;15471:30;;;;;;-1:-1:-1;;;15471:30:2;;;;;;;;;;;;;;;:43;;;15467:114;;;15531:50;;-1:-1:-1;;;15531:50:2;;;;;12044:25:7;;;12017:18;;15531:50:2;11999:76:7;15467:114:2;24615:577;12800:3;15597:14;:36;;;15593:106;;;15648:51;;-1:-1:-1;;;15648:51:2;;14986:10:7;14974:23;;15648:51:2;;;14956:42:7;14929:18;;15648:51:2;14911:93:7;15593:106:2;24975:68:::1;24991:5;24998:8;;24975:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;24975:68:2::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;25008:18:2;;-1:-1:-1;25008:18:2;;;;24975:68;::::1;::::0;25008:18;;24975:68;25008:18;24975:68;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;25028:14:2;;-1:-1:-1;24975:15:2::1;::::0;-1:-1:-1;;24975:68:2:i:1;:::-;25049:138;25073:5;25086;25099:8;;25049:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;25049:138:2::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;25115:18:2;;-1:-1:-1;25115:18:2;;;;25049:138;::::1;::::0;25115:18;;25049:138;25115:18;25049:138;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;25141:14:2;;-1:-1:-1;25163:18:2;;-1:-1:-1;25049:16:2::1;::::0;-1:-1:-1;25049:138:2:i:1;:::-;24615:577:::0;;;;;;;;;;;:::o;21237:270::-;-1:-1:-1;;;;;13510:13:2;;;;;;;:6;:13;;;;;:24;;;:13;;:24;13496:10;:38;13492:75;;13543:24;;-1:-1:-1;;;13543:24:2;;13556:10;13543:24;;;10523:51:7;10496:18;;13543:24:2;10478:102:7;13492:75:2;-1:-1:-1;;;;;21352:13:2;;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;:36;;::::1;21345:43:::0;;-1:-1:-1;;;;;;21345:43:2::1;::::0;;;21422:24;;::::1;::::0;21399:60;;21352:13;;21422:24:::1;::::0;21352:13;21399:60:::1;::::0;21352:13;;21399:60:::1;-1:-1:-1::0;;;;;;21465:13:2::1;21500:1;21465:13:::0;;;:6:::1;:13;::::0;;;;:24:::1;;:37:::0;;-1:-1:-1;;;;;;21465:37:2::1;::::0;;21237:270::o;28462:168::-;-1:-1:-1;;;;;28577:15:2;;28525:7;28577:15;;;:6;:15;;;;;:20;:47;;28623:1;28577:47;;;28605:7;-1:-1:-1;;;;;28605:15:2;;28577:47;-1:-1:-1;;;;;28553:20:2;;:11;:20;;;;;;;;;;;:72;;;;:::i;:::-;28540:85;28462:168;-1:-1:-1;;28462:168:2:o;18342:462::-;18595:13;18536:8;;14284:1427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14284:1427:2;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18546:18:2;;-1:-1:-1;18546:18:2;;;;14284:1427;;;18546:18;;14284:1427;18546:18;14284:1427;;;;;;;;;-1:-1:-1;;14416:15:2;;18566:14;;-1:-1:-1;14434:1:2;-1:-1:-1;14412:83:2;;-1:-1:-1;14412:83:2;;14479:8;:15;14450:45;;-1:-1:-1;;;14450:45:2;;;;;;12044:25:7;;12032:2;12017:18;;11999:76;14412:83:2;14524:18;:25;14505:8;:15;:44;14501:175;;14618:15;;14643:25;;14564:112;;-1:-1:-1;;;14564:112:2;;;;;14733:25:7;;;;14774:18;;;14767:34;14706:18;;14564:112:2;14688:119:7;14501:175:2;12677:3;14749:27;14757:18;14749:7;:27::i;:::-;:47;;;14745:130;;14847:27;14855:18;14847:7;:27::i;14745:130::-;15020:15;;-1:-1:-1;;15020:19:2;14999:18;15047:318;15071:10;15067:1;:14;15047:318;;;15179:8;15188:1;15192;15188:5;15179:15;;;;;;-1:-1:-1;;;15179:15:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;15164:30:2;:8;15173:1;15164:11;;;;;;-1:-1:-1;;;15164:11:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;15164:30:2;;15160:88;;15213:35;;-1:-1:-1;;;15213:35:2;;;;;12044:25:7;;;12017:18;;15213:35:2;11999:76:7;15160:88:2;15294:1;15262:34;;:18;15281:1;15262:21;;;;;;-1:-1:-1;;;15262:21:2;;;;;;;;;;;;;;;:34;;;15258:98;;;15315:41;;-1:-1:-1;;;15315:41:2;;;;;12044:25:7;;;12017:18;;15315:41:2;11999:76:7;15258:98:2;15083:3;;15047:318;;;;15512:1;15471:43;;:18;15490:10;15471:30;;;;;;-1:-1:-1;;;15471:30:2;;;;;;;;;;;;;;;:43;;;15467:114;;;15531:50;;-1:-1:-1;;;15531:50:2;;;;;12044:25:7;;;12017:18;;15531:50:2;11999:76:7;15467:114:2;18342:462;12800:3;15597:14;:36;;;15593:106;;;15648:51;;-1:-1:-1;;;15648:51:2;;14986:10:7;14974:23;;15648:51:2;;;14956:42:7;14929:18;;15648:51:2;14911:93:7;15593:106:2;18618:17:::1;18638:80;18656:8;;18638:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;18638:80:2::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;18672:18:2;;-1:-1:-1;18672:18:2;;;;18638:80;::::1;::::0;18672:18;;18638:80;18672:18;18638:80;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;18698:14:2;;-1:-1:-1;18638:10:2::1;::::0;-1:-1:-1;;18638:80:2:i:1;:::-;18618:100;;18732:67;18767:20;18789:9;18732:34;:67::i;:::-;18724:75:::0;18342:462;-1:-1:-1;;;;;;;;;;18342:462:2:o;26801:609::-;26922:29;26968:6;26954:28;;;;;;-1:-1:-1;;;26954:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26954:28:2;-1:-1:-1;26922:60:2;-1:-1:-1;26988:17:2;27015:16;;27011:67;;27053:18;27063:7;27053:9;:18::i;:::-;27041:30;;27011:67;27163:9;27158:177;27178:17;;;27158:177;;;27292:34;27307:7;27316:6;;27323:1;27316:9;;;;;-1:-1:-1;;;27316:9:2;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27292:14;:34::i;:::-;27274:12;27287:1;27274:15;;;;;;-1:-1:-1;;;27274:15:2;;;;;;;;;;;;;;;;;;:52;27197:3;;27158:177;;;;27358:7;-1:-1:-1;;;;;27347:52:2;;27367:9;27378:6;;27386:12;27347:52;;;;;;;;;:::i;:::-;;;;;;;;26801:609;;;;;;:::o;16948:885::-;17199:13;17140:8;;14284:1427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14284:1427:2;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17150:18:2;;-1:-1:-1;17150:18:2;;;;14284:1427;;;17150:18;;14284:1427;17150:18;14284:1427;;;;;;;;;-1:-1:-1;;14416:15:2;;17170:14;;-1:-1:-1;14434:1:2;-1:-1:-1;14412:83:2;;-1:-1:-1;14412:83:2;;14479:8;:15;14450:45;;-1:-1:-1;;;14450:45:2;;;;;;12044:25:7;;12032:2;12017:18;;11999:76;14412:83:2;14524:18;:25;14505:8;:15;:44;14501:175;;14618:15;;14643:25;;14564:112;;-1:-1:-1;;;14564:112:2;;;;;14733:25:7;;;;14774:18;;;14767:34;14706:18;;14564:112:2;14688:119:7;14501:175:2;12677:3;14749:27;14757:18;14749:7;:27::i;:::-;:47;;;14745:130;;14847:27;14855:18;14847:7;:27::i;14745:130::-;15020:15;;-1:-1:-1;;15020:19:2;14999:18;15047:318;15071:10;15067:1;:14;15047:318;;;15179:8;15188:1;15192;15188:5;15179:15;;;;;;-1:-1:-1;;;15179:15:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;15164:30:2;:8;15173:1;15164:11;;;;;;-1:-1:-1;;;15164:11:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;15164:30:2;;15160:88;;15213:35;;-1:-1:-1;;;15213:35:2;;;;;12044:25:7;;;12017:18;;15213:35:2;11999:76:7;15160:88:2;15294:1;15262:34;;:18;15281:1;15262:21;;;;;;-1:-1:-1;;;15262:21:2;;;;;;;;;;;;;;;:34;;;15258:98;;;15315:41;;-1:-1:-1;;;15315:41:2;;;;;12044:25:7;;;12017:18;;15315:41:2;11999:76:7;15258:98:2;15083:3;;15047:318;;;;15512:1;15471:43;;:18;15490:10;15471:30;;;;;;-1:-1:-1;;;15471:30:2;;;;;;;;;;;;;;;:43;;;15467:114;;;15531:50;;-1:-1:-1;;;15531:50:2;;;;;12044:25:7;;;12017:18;;15531:50:2;11999:76:7;15467:114:2;16948:885;12800:3;15597:14;:36;;;15593:106;;;15648:51;;-1:-1:-1;;;15648:51:2;;14986:10:7;14974:23;;15648:51:2;;;14956:42:7;14929:18;;15648:51:2;14911:93:7;15593:106:2;17222:17:::1;17242:80;17260:8;;17242:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;17242:80:2::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;17276:18:2;;-1:-1:-1;17276:18:2;;;;17242:80;::::1;::::0;17276:18;;17242:80;17276:18;17242:80;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;17302:14:2;;-1:-1:-1;17242:10:2::1;::::0;-1:-1:-1;;17242:80:2:i:1;:::-;17222:100:::0;-1:-1:-1;;;;;;17332:24:2;::::1;17328:281;;17406:58;17432:20;17454:9;17406:25;:58::i;:::-;17398:66;;17328:281;;;17523:34;17536:20;17523:12;:34::i;:::-;-1:-1:-1::0;;;;;17565:13:2;;::::1;;::::0;;;:6:::1;:13;::::0;;;;:24:::1;;:37:::0;;-1:-1:-1;;;;;;17565:37:2::1;::::0;;::::1;::::0;;;::::1;::::0;;:13;-1:-1:-1;17328:281:2::1;-1:-1:-1::0;;;;;17675:13:2;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;:30;;;17716:112;::::1;::::0;::::1;::::0;17748:8;;;;17764:18;;;;17790:14;;17812:10;;17716:112:::1;:::i;:::-;;;;;;;;15705:1;16948:885:::0;;;;;;;;;;;:::o;25927:638::-;-1:-1:-1;;;;;13510:13:2;;;;;;;:6;:13;;;;;:24;;;:13;;:24;13496:10;:38;13492:75;;13543:24;;-1:-1:-1;;;13543:24:2;;13556:10;13543:24;;;10523:51:7;10496:18;;13543:24:2;10478:102:7;13492:75:2;26207:8:::1;;14284:1427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;14284:1427:2::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;26217:18:2;;-1:-1:-1;26217:18:2;;;;14284:1427;::::1;::::0;26217:18;;14284:1427;26217:18;14284:1427;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;14416:15:2;;26237:14;;-1:-1:-1;14434:1:2::1;-1:-1:-1::0;14412:83:2::1;::::0;-1:-1:-1;14412:83:2::1;;14479:8;:15;14450:45;;-1:-1:-1::0;;;14450:45:2::1;;;;;;12044:25:7::0;;12032:2;12017:18;;11999:76;14412:83:2::1;14524:18;:25;14505:8;:15;:44;14501:175;;14618:15:::0;;14643:25;;14564:112:::1;::::0;-1:-1:-1;;;14564:112:2;;::::1;::::0;::::1;14733:25:7::0;;;;14774:18;;;14767:34;14706:18;;14564:112:2::1;14688:119:7::0;14501:175:2::1;12677:3;14749:27;14757:18;14749:7;:27::i;:::-;:47;;;14745:130;;14847:27;14855:18;14847:7;:27::i;14745:130::-;15020:15:::0;;-1:-1:-1;;15020:19:2;14999:18:::1;15047:318;15071:10;15067:1;:14;15047:318;;;15179:8;15188:1;15192;15188:5;15179:15;;;;;;-1:-1:-1::0;;;15179:15:2::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;15164:30:2::1;:8;15173:1;15164:11;;;;;;-1:-1:-1::0;;;15164:11:2::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;15164:30:2::1;;15160:88;;15213:35;::::0;-1:-1:-1;;;15213:35:2;;::::1;::::0;::::1;12044:25:7::0;;;12017:18;;15213:35:2::1;11999:76:7::0;15160:88:2::1;15294:1;15262:34;;:18;15281:1;15262:21;;;;;;-1:-1:-1::0;;;15262:21:2::1;;;;;;;;;;;;;;;:34;;;15258:98;;;15315:41;::::0;-1:-1:-1;;;15315:41:2;;::::1;::::0;::::1;12044:25:7::0;;;12017:18;;15315:41:2::1;11999:76:7::0;15258:98:2::1;15083:3;;15047:318;;;;15512:1;15471:43;;:18;15490:10;15471:30;;;;;;-1:-1:-1::0;;;15471:30:2::1;;;;;;;;;;;;;;;:43;;;15467:114;;;15531:50;::::0;-1:-1:-1;;;15531:50:2;;::::1;::::0;::::1;12044:25:7::0;;;12017:18;;15531:50:2::1;11999:76:7::0;15467:114:2::1;13573:1;12800:3;15597:14;:36;;;15593:106;;;15648:51;::::0;-1:-1:-1;;;15648:51:2;;14986:10:7;14974:23;;15648:51:2::1;::::0;::::1;14956:42:7::0;14929:18;;15648:51:2::1;14911:93:7::0;15593:106:2::1;26261:65:::2;26274:5;26281:8;;26291:18;;26311:14;26261:12;:65::i;:::-;26422:138;26446:5;26459;26472:8;;26422:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26488:18;;26422:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;26514:14:2;;-1:-1:-1;26536:18:2;;-1:-1:-1;26422:16:2::2;::::0;-1:-1:-1;26422:138:2:i:2;:::-;13573:1:::1;;;25927:638:::0;;;;;;;;;:::o;23169:604::-;-1:-1:-1;;;;;13510:13:2;;;;;;;:6;:13;;;;;:24;;;:13;;:24;13496:10;:38;13492:75;;13543:24;;-1:-1:-1;;;13543:24:2;;13556:10;13543:24;;;10523:51:7;10496:18;;13543:24:2;10478:102:7;13492:75:2;23430:8:::1;;14284:1427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;14284:1427:2::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;23440:18:2;;-1:-1:-1;23440:18:2;;;;14284:1427;::::1;::::0;23440:18;;14284:1427;23440:18;14284:1427;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;14416:15:2;;23460:14;;-1:-1:-1;14434:1:2::1;-1:-1:-1::0;14412:83:2::1;::::0;-1:-1:-1;14412:83:2::1;;14479:8;:15;14450:45;;-1:-1:-1::0;;;14450:45:2::1;;;;;;12044:25:7::0;;12032:2;12017:18;;11999:76;14412:83:2::1;14524:18;:25;14505:8;:15;:44;14501:175;;14618:15:::0;;14643:25;;14564:112:::1;::::0;-1:-1:-1;;;14564:112:2;;::::1;::::0;::::1;14733:25:7::0;;;;14774:18;;;14767:34;14706:18;;14564:112:2::1;14688:119:7::0;14501:175:2::1;12677:3;14749:27;14757:18;14749:7;:27::i;:::-;:47;;;14745:130;;14847:27;14855:18;14847:7;:27::i;14745:130::-;15020:15:::0;;-1:-1:-1;;15020:19:2;14999:18:::1;15047:318;15071:10;15067:1;:14;15047:318;;;15179:8;15188:1;15192;15188:5;15179:15;;;;;;-1:-1:-1::0;;;15179:15:2::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;15164:30:2::1;:8;15173:1;15164:11;;;;;;-1:-1:-1::0;;;15164:11:2::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;15164:30:2::1;;15160:88;;15213:35;::::0;-1:-1:-1;;;15213:35:2;;::::1;::::0;::::1;12044:25:7::0;;;12017:18;;15213:35:2::1;11999:76:7::0;15160:88:2::1;15294:1;15262:34;;:18;15281:1;15262:21;;;;;;-1:-1:-1::0;;;15262:21:2::1;;;;;;;;;;;;;;;:34;;;15258:98;;;15315:41;::::0;-1:-1:-1;;;15315:41:2;;::::1;::::0;::::1;12044:25:7::0;;;12017:18;;15315:41:2::1;11999:76:7::0;15258:98:2::1;15083:3;;15047:318;;;;15512:1;15471:43;;:18;15490:10;15471:30;;;;;;-1:-1:-1::0;;;15471:30:2::1;;;;;;;;;;;;;;;:43;;;15467:114;;;15531:50;::::0;-1:-1:-1;;;15531:50:2;;::::1;::::0;::::1;12044:25:7::0;;;12017:18;;15531:50:2::1;11999:76:7::0;15467:114:2::1;13573:1;12800:3;15597:14;:36;;;15593:106;;;15648:51;::::0;-1:-1:-1;;;15648:51:2;;14986:10:7;14974:23;;15648:51:2::1;::::0;::::1;14956:42:7::0;14929:18;;15648:51:2::1;14911:93:7::0;15593:106:2::1;23484:65:::2;23497:5;23504:8;;23514:18;;23534:14;23484:12;:65::i;:::-;23645:123;23667:5;23680:8;;23645:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;::::0;;;;-1:-1:-1;;23645:123:2::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;-1:-1:-1;23696:18:2;;-1:-1:-1;23696:18:2;;;;23645:123;::::2;::::0;23696:18;;23645:123;23696:18;23645:123;::::2;;::::0;::::2;::::0;;;;-1:-1:-1;23722:14:2;;-1:-1:-1;23744:18:2;;-1:-1:-1;23645:14:2::2;::::0;-1:-1:-1;23645:123:2:i:2;28874:221::-:0;-1:-1:-1;;;;;29033:15:2;;28964:7;29033:15;;;:6;:15;;;;;:20;:56;;29088:1;29033:56;;;29061:24;;-1:-1:-1;;;29061:24:2;;-1:-1:-1;;;;;10541:32:7;;;29061:24:2;;;10523:51:7;29061:15:2;;;;;10496:18:7;;29061:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28994:20:2;;;;;;;:13;:20;;;;;;;;:29;;;;;;;;;;:96;;;;:::i;:::-;28981:109;28874:221;-1:-1:-1;;;28874:221:2:o;20836:277::-;-1:-1:-1;;;;;13819:13:2;;;;;;;:6;:13;;;;;;;;:36;;:13;;:36;13805:10;:50;13801:93;;13870:24;;-1:-1:-1;;;13870:24:2;;13883:10;13870:24;;;10523:51:7;10496:18;;13870:24:2;10478:102:7;13801:93:2;-1:-1:-1;;;;;20958:13:2;;::::1;;::::0;;;:6:::1;:13;::::0;;;;;;;:36;;::::1;20951:43:::0;;-1:-1:-1;;;;;;20951:43:2::1;::::0;;;21028:24;;::::1;::::0;21005:60;;21054:10:::1;::::0;21028:24;;;::::1;::::0;20958:13;21005:60:::1;::::0;::::1;-1:-1:-1::0;;;;;;21071:13:2::1;;::::0;;;:6:::1;:13;::::0;;;;:24:::1;;:37:::0;;-1:-1:-1;;;;;;21071:37:2::1;21098:10;21071:37;::::0;;20836:277::o;20023:279::-;-1:-1:-1;;;;;13510:13:2;;;;;;;:6;:13;;;;;:24;;;:13;;:24;13496:10;:38;13492:75;;13543:24;;-1:-1:-1;;;13543:24:2;;13556:10;13543:24;;;10523:51:7;10496:18;;13543:24:2;10478:102:7;13492:75:2;20166:13;-1:-1:-1;;;;;15903:27:2;::::1;15899:75;;15939:35;::::0;-1:-1:-1;;;15939:35:2;;-1:-1:-1;;;;;10541:32:7;;15939:35:2::1;::::0;::::1;10523:51:7::0;10496:18;;15939:35:2::1;10478:102:7::0;15899:75:2::1;-1:-1:-1::0;;;;;20189:13:2;;::::2;;::::0;;;:6:::2;:13;::::0;;;;;;;:36;;::::2;:52:::0;;-1:-1:-1;;;;;;20189:52:2::2;::::0;;::::2;::::0;;::::2;::::0;;20252:45;::::2;::::0;20189:13;20252:45:::2;13573:1:::1;20023:279:::0;;;:::o;22120:543::-;22329:8;;14284:1427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14284:1427:2;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22339:18:2;;-1:-1:-1;22339:18:2;;;;14284:1427;;;22339:18;;14284:1427;22339:18;14284:1427;;;;;;;;;-1:-1:-1;;14416:15:2;;22359:14;;-1:-1:-1;14434:1:2;-1:-1:-1;14412:83:2;;-1:-1:-1;14412:83:2;;14479:8;:15;14450:45;;-1:-1:-1;;;14450:45:2;;;;;;12044:25:7;;12032:2;12017:18;;11999:76;14412:83:2;14524:18;:25;14505:8;:15;:44;14501:175;;14618:15;;14643:25;;14564:112;;-1:-1:-1;;;14564:112:2;;;;;14733:25:7;;;;14774:18;;;14767:34;14706:18;;14564:112:2;14688:119:7;14501:175:2;12677:3;14749:27;14757:18;14749:7;:27::i;:::-;:47;;;14745:130;;14847:27;14855:18;14847:7;:27::i;14745:130::-;15020:15;;-1:-1:-1;;15020:19:2;14999:18;15047:318;15071:10;15067:1;:14;15047:318;;;15179:8;15188:1;15192;15188:5;15179:15;;;;;;-1:-1:-1;;;15179:15:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;15164:30:2;:8;15173:1;15164:11;;;;;;-1:-1:-1;;;15164:11:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;15164:30:2;;15160:88;;15213:35;;-1:-1:-1;;;15213:35:2;;;;;12044:25:7;;;12017:18;;15213:35:2;11999:76:7;15160:88:2;15294:1;15262:34;;:18;15281:1;15262:21;;;;;;-1:-1:-1;;;15262:21:2;;;;;;;;;;;;;;;:34;;;15258:98;;;15315:41;;-1:-1:-1;;;15315:41:2;;;;;12044:25:7;;;12017:18;;15315:41:2;11999:76:7;15258:98:2;15083:3;;15047:318;;;;15512:1;15471:43;;:18;15490:10;15471:30;;;;;;-1:-1:-1;;;15471:30:2;;;;;;;;;;;;;;;:43;;;15467:114;;;15531:50;;-1:-1:-1;;;15531:50:2;;;;;12044:25:7;;;12017:18;;15531:50:2;11999:76:7;15467:114:2;22120:543;12800:3;15597:14;:36;;;15593:106;;;15648:51;;-1:-1:-1;;;15648:51:2;;14986:10:7;14974:23;;15648:51:2;;;14956:42:7;14929:18;;15648:51:2;14911:93:7;15593:106:2;22461:68:::1;22477:5;22484:8;;22461:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;22461:68:2::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;22494:18:2;;-1:-1:-1;22494:18:2;;;;22461:68;::::1;::::0;22494:18;;22461:68;22494:18;22461:68;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;22514:14:2;;-1:-1:-1;22461:15:2::1;::::0;-1:-1:-1;;22461:68:2:i:1;:::-;22535:123;22557:5;22570:8;;22535:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;22535:123:2::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;22586:18:2;;-1:-1:-1;22586:18:2;;;;22535:123;::::1;::::0;22586:18;;22535:123;22586:18;22535:123;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;22612:14:2;;-1:-1:-1;22634:18:2;;-1:-1:-1;22535:14:2::1;::::0;-1:-1:-1;22535:123:2:i:1;:::-;22120:543:::0;;;;;;;;;;:::o;19276:342::-;-1:-1:-1;;;;;13510:13:2;;;;;;;:6;:13;;;;;:24;;;:13;;:24;13496:10;:38;13492:75;;13543:24;;-1:-1:-1;;;13543:24:2;;13556:10;13543:24;;;10523:51:7;10496:18;;13543:24:2;10478:102:7;13492:75:2;19494:8:::1;;14284:1427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;14284:1427:2::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;19504:18:2;;-1:-1:-1;19504:18:2;;;;14284:1427;::::1;::::0;19504:18;;14284:1427;19504:18;14284:1427;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;14416:15:2;;19524:14;;-1:-1:-1;14434:1:2::1;-1:-1:-1::0;14412:83:2::1;::::0;-1:-1:-1;14412:83:2::1;;14479:8;:15;14450:45;;-1:-1:-1::0;;;14450:45:2::1;;;;;;12044:25:7::0;;12032:2;12017:18;;11999:76;14412:83:2::1;14524:18;:25;14505:8;:15;:44;14501:175;;14618:15:::0;;14643:25;;14564:112:::1;::::0;-1:-1:-1;;;14564:112:2;;::::1;::::0;::::1;14733:25:7::0;;;;14774:18;;;14767:34;14706:18;;14564:112:2::1;14688:119:7::0;14501:175:2::1;12677:3;14749:27;14757:18;14749:7;:27::i;:::-;:47;;;14745:130;;14847:27;14855:18;14847:7;:27::i;14745:130::-;15020:15:::0;;-1:-1:-1;;15020:19:2;14999:18:::1;15047:318;15071:10;15067:1;:14;15047:318;;;15179:8;15188:1;15192;15188:5;15179:15;;;;;;-1:-1:-1::0;;;15179:15:2::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;15164:30:2::1;:8;15173:1;15164:11;;;;;;-1:-1:-1::0;;;15164:11:2::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;15164:30:2::1;;15160:88;;15213:35;::::0;-1:-1:-1;;;15213:35:2;;::::1;::::0;::::1;12044:25:7::0;;;12017:18;;15213:35:2::1;11999:76:7::0;15160:88:2::1;15294:1;15262:34;;:18;15281:1;15262:21;;;;;;-1:-1:-1::0;;;15262:21:2::1;;;;;;;;;;;;;;;:34;;;15258:98;;;15315:41;::::0;-1:-1:-1;;;15315:41:2;;::::1;::::0;::::1;12044:25:7::0;;;12017:18;;15315:41:2::1;11999:76:7::0;15258:98:2::1;15083:3;;15047:318;;;;15512:1;15471:43;;:18;15490:10;15471:30;;;;;;-1:-1:-1::0;;;15471:30:2::1;;;;;;;;;;;;;;;:43;;;15467:114;;;15531:50;::::0;-1:-1:-1;;;15531:50:2;;::::1;::::0;::::1;12044:25:7::0;;;12017:18;;15531:50:2::1;11999:76:7::0;15467:114:2::1;13573:1;12800:3;15597:14;:36;;;15593:106;;;15648:51;::::0;-1:-1:-1;;;15648:51:2;;14986:10:7;14974:23;;15648:51:2::1;::::0;::::1;14956:42:7::0;14929:18;;15648:51:2::1;14911:93:7::0;15593:106:2::1;19548:65:::2;19561:5;19568:8;;19578:18;;19598:14;19548:12;:65::i;29271:357::-:0;29433:14;;29336:10;;;29453:171;29477:13;29473:1;:17;29453:171;;;29509:7;29517:1;29509:10;;;;;;-1:-1:-1;;;29509:10:2;;;;;;;;;;;;;;;29502:17;;;;;:::i;:::-;;-1:-1:-1;29606:3:2;;29453:171;;;;29271:357;;;;:::o;31553:318::-;31719:12;31734:56;31745:8;31755:18;31775:14;31734:10;:56::i;:::-;-1:-1:-1;;;;;31800:13:2;;;;;;:6;:13;;;;;:18;31719:71;;-1:-1:-1;31800:26:2;;31796:70;;31835:31;;-1:-1:-1;;;31835:31:2;;;;;12044:25:7;;;12017:18;;31835:31:2;11999:76:7;31796:70:2;31553:318;;;;;:::o;35625:2400::-;-1:-1:-1;;;;;35885:20:2;;;35836:21;35885:20;;;:13;:20;;;;;;;;:27;;;;;;;;;;;;;;35941:22;;-1:-1:-1;;;35941:22:2;;;;;10523:51:7;;;;35836:21:2;;35885:27;;35836:21;;35941:15;;10496:18:7;;35941:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;35918:45;-1:-1:-1;36112:16:2;;36108:39;;-1:-1:-1;;36130:17:2;36108:39;36199:15;;36195:56;;36241:1;36226:16;;;;36195:56;36313:26;;;;-1:-1:-1;36355:15:2;;36351:52;;-1:-1:-1;;;;;36372:20:2;;;;;;;36402:1;36372:20;;;;;;;;:27;;;;;;;;;;;:31;36351:52;36536:18;-1:-1:-1;;;;;36491:64:2;36514:5;-1:-1:-1;;;;;36491:64:2;36507:5;-1:-1:-1;;;;;36491:64:2;;36521:13;36491:64;;;;12044:25:7;;12032:2;12017:18;;11999:76;36491:64:2;;;;;;;;36565:19;;;;36561:603;;-1:-1:-1;;;;;36888:20:2;;;36647:28;36888:20;;;:13;:20;;;;;38773:16;36678:79;;;38745:26;;38741:49;;;;36647:28;36920:32;;:66;;36976:10;36920:66;;;36955:18;36920:66;-1:-1:-1;;;;;36888:108:2;;;;;;;;;;;;-1:-1:-1;36888:108:2;:132;;;;;;;37112:37;;;;36561:603;37368:15;;37343:22;37391:193;37415:14;37411:1;:18;37391:193;;;37483:92;37519:13;37544:18;37563:1;37544:21;;;;;;-1:-1:-1;;;37544:21:2;;;;;;;;;;;;;;;37483:92;;38773:16;38745:26;;38741:49;;38680:116;37483:92;-1:-1:-1;;;;;37446:20:2;;;;;;:13;:20;;;;;37467:11;;37446:20;;;37467:8;;37476:1;;37467:11;;;;-1:-1:-1;;;37467:11:2;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;37446:33:2;;;;;;;;;;;-1:-1:-1;37446:33:2;:129;;;;;;;-1:-1:-1;37431:3:2;37391:193;;;-1:-1:-1;;37941:16:2;;37937:83;;37965:55;;-1:-1:-1;;;37965:55:2;;-1:-1:-1;;;;;12285:32:7;;;37965:55:2;;;12267:51:7;12334:18;;;12327:34;;;37965::2;;;;;12240:18:7;;37965:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37937:83;35625:2400;;;;;;;;;:::o;29966:251::-;30111:7;30166:8;30176:18;30196:14;30149:62;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;30139:73;;;;;;30126:86;;29966:251;;;;;:::o;6491:213:6:-;6601:17;6635:64;6663:14;6679:4;6693;5658;5652:11;-1:-1:-1;;;5670:103:6;;5820:66;5805:4;5796:14;;5780:114;-1:-1:-1;;;5926:4:6;5917:14;;5901:114;6049:4;6045:25;;;6038:4;6029:14;;6022:49;-1:-1:-1;;;6103:4:6;6094:14;;6078:114;6222:19;;6215:4;6206:14;;6199:43;6265:4;6256:14;;6249:28;6322:4;6307:20;;;6300:4;6291:14;;6284:44;6374:4;6358:14;;6348:31;;5633:752;38957:271:2;-1:-1:-1;;;;;39129:20:2;;39011:17;39129:20;;;;;;;;;;;:24;;39152:1;;39129:24;:::i;:::-;-1:-1:-1;;;;;39159:20:2;;:11;:20;;;;;;;;;;39182:1;39159:24;;39117:36;;-1:-1:-1;39189:34:2;;39117:36;39189:23;:34::i;:::-;38957:271;;;:::o;39415:323::-;-1:-1:-1;;;;;39617:20:2;;;39495:17;39617:20;;;39649:1;39617:20;;;;;;;;:29;;;;;;;;;;;;39495:17;;39617:33;;;:::i;:::-;-1:-1:-1;;;;;39656:20:2;;;;;;;39688:1;39656:20;;;;;;;;:29;;;;;;;;;;;:33;;;;39605:45;;-1:-1:-1;39695:38:2;;39677:7;39605:45;39695:18;:38::i;4568:797:6:-;4660:16;4720:4;4714:11;-1:-1:-1;;;4748:3:6;4732:103;4882:66;4867:4;4862:3;4858:14;4842:114;-1:-1:-1;;;4988:4:6;4983:3;4979:14;4963:114;5117:14;5111:4;5107:25;5100:4;5095:3;5091:14;5084:49;-1:-1:-1;;;5165:4:6;5160:3;5156:14;5140:114;5295:4;5289;5284:3;5281:1;5273:27;5261:39;-1:-1:-1;;;;;;;5315:22:6;;5311:49;;5346:14;;-1:-1:-1;;;5346:14:6;;;;;;;;;;;3812:752;3869:16;3927:4;3921:11;-1:-1:-1;;;3955:3:6;3939:103;4089:66;4074:4;4069:3;4065:14;4049:114;-1:-1:-1;;;4195:4:6;4190:3;4186:14;4170:114;4324:14;4318:4;4314:25;4307:4;4302:3;4298:14;4291:49;-1:-1:-1;;;4372:4:6;4367:3;4363:14;4347:114;4495:4;4490:3;4487:1;4480:20;4468:32;-1:-1:-1;;;;;;;4515:22:6;;4511:48;;4546:13;;-1:-1:-1;;;4546:13:6;;;;;;;;;;;30689:435:2;30851:17;30871:80;30889:8;;30871:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;30871:80:2;;;;;;;;;;;;;;;;;;;;-1:-1:-1;30905:18:2;;-1:-1:-1;30905:18:2;;;;30871:80;;;30905:18;;30871:80;30905:18;30871:80;;;;;;;;;-1:-1:-1;30931:14:2;;-1:-1:-1;30871:10:2;;-1:-1:-1;;30871:80:2:i;:::-;-1:-1:-1;;;;;31014:13:2;;;;;;:6;:13;;;;;;;:30;;;31055:64;30851:100;;-1:-1:-1;31014:13:2;31055:64;;;;31074:8;;;;31084:18;;;;31104:14;;31055:64;:::i;:::-;;;;;;;;30689:435;;;;;;;:::o;32421:2425::-;-1:-1:-1;;;;;32635:18:2;;32613:19;32635:18;;;;;;;;;;;;32682:13;;32865:15;;32861:37;;32897:1;32882:16;;;;32861:37;-1:-1:-1;32961:26:2;;;33003:15;;32999:43;;-1:-1:-1;;;;;33020:18:2;;:11;:18;;;;;;;;;;33041:1;33020:22;;32999:43;33166:18;-1:-1:-1;;;;;33130:55:2;33144:5;-1:-1:-1;;;;;33130:55:2;;33151:13;33130:55;;;;12044:25:7;;12032:2;12017:18;;11999:76;33130:55:2;;;;;;;;33195:19;;;;33191:668;;38773:16;33308:79;;;38745:26;;38741:49;;33277:28;;-1:-1:-1;;;;;33543:32:2;;:66;;33599:10;33543:66;;;33578:18;33543:66;-1:-1:-1;;;;;33520:99:2;;;;;;;;;;;;-1:-1:-1;33520:99:2;:123;;;;;;;33807:37;;33191:668;34045:15;;34020:22;34068:252;34092:14;34088:1;:18;34068:252;;;34219:92;34255:13;34280:18;34299:1;34280:21;;;;;;-1:-1:-1;;;34280:21:2;;;;;;;;34219:92;34191:11;:24;34203:8;34212:1;34203:11;;;;;;-1:-1:-1;;;34203:11:2;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;34191:24:2;;;;;;;;;;;-1:-1:-1;34191:24:2;:120;;;;;;;-1:-1:-1;34108:3:2;34068:252;;;-1:-1:-1;;34777:16:2;;34773:68;;34795:46;;-1:-1:-1;;;34795:46:2;;;;;12044:25:7;;;-1:-1:-1;;;;;34795:32:2;;;;;12017:18:7;;34795:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34773:68;32421:2425;;;;;;;;:::o;784:305:1:-;856:15;1018:1;1015;1012;1009;1001:6;997:2;990:5;985:35;971:49;;1048:10;1040:42;;;;-1:-1:-1;;;1040:42:1;;12918:2:7;1040:42:1;;;12900:21:7;12957:2;12937:18;;;12930:30;-1:-1:-1;;;12976:18:7;;;12969:49;13035:18;;1040:42:1;12890:169:7;1040:42:1;784:305;;;:::o;2503:1043::-;2615:15;2745:4;2739:11;-1:-1:-1;;;2843:17:1;2836:93;-1:-1:-1;;;;;3017:2:1;3013:51;3009:1;2990:17;2986:25;2979:86;3151:6;3146:2;3127:17;3123:26;3116:42;3445:1;3442;3438:2;3419:17;3416:1;3409:5;3402;3397:50;3383:64;;;3475:44;3508:10;3475:32;:44::i;:::-;3467:72;;;;-1:-1:-1;;;3467:72:1;;12574:2:7;3467:72:1;;;12556:21:7;12613:2;12593:18;;;12586:30;-1:-1:-1;;;12632:18:7;;;12625:45;12687:18;;3467:72:1;12546:165:7;3467:72:1;2503:1043;;;;:::o;4786:1041::-;4867:12;4989:16;5066:10;5056:2;;5173:14;5170:1;5167;5152:36;5265:14;5262:1;5255:25;5056:2;5315:14;5347:2;5342:242;;;;5597:96;;;;5796:1;5785:12;;5308:503;;5342:242;5442:14;5439:1;5436;5421:36;5566:1;5560:8;5553:16;5546:24;5535:35;;5342:242;;5597:96;-1:-1:-1;5678:1:1;;4900:921;-1:-1:-1;;;4900:921:1:o;14:395:7:-;77:8;87:6;141:3;134:4;126:6;122:17;118:27;108:2;;166:8;156;149:26;108:2;-1:-1:-1;196:20:7;;239:18;228:30;;225:2;;;278:8;268;261:26;225:2;322:4;314:6;310:17;298:29;;382:3;375:4;365:6;362:1;358:14;350:6;346:27;342:38;339:47;336:2;;;399:1;396;389:12;336:2;98:311;;;;;:::o;414:163::-;481:20;;541:10;530:22;;520:33;;510:2;;567:1;564;557:12;582:257;641:6;694:2;682:9;673:7;669:23;665:32;662:2;;;715:6;707;700:22;662:2;759:9;746:23;778:31;803:5;778:31;:::i;844:398::-;912:6;920;973:2;961:9;952:7;948:23;944:32;941:2;;;994:6;986;979:22;941:2;1038:9;1025:23;1057:31;1082:5;1057:31;:::i;:::-;1107:5;-1:-1:-1;1164:2:7;1149:18;;1136:32;1177:33;1136:32;1177:33;:::i;:::-;1229:7;1219:17;;;931:311;;;;;:::o;1247:1010::-;1385:6;1393;1401;1409;1417;1425;1478:3;1466:9;1457:7;1453:23;1449:33;1446:2;;;1500:6;1492;1485:22;1446:2;1544:9;1531:23;1563:31;1588:5;1563:31;:::i;:::-;1613:5;-1:-1:-1;1669:2:7;1654:18;;1641:32;1692:18;1722:14;;;1719:2;;;1754:6;1746;1739:22;1719:2;1798:70;1860:7;1851:6;1840:9;1836:22;1798:70;:::i;:::-;1887:8;;-1:-1:-1;1772:96:7;-1:-1:-1;1975:2:7;1960:18;;1947:32;;-1:-1:-1;1991:16:7;;;1988:2;;;2025:6;2017;2010:22;1988:2;;2069:72;2133:7;2122:8;2111:9;2107:24;2069:72;:::i;:::-;2160:8;;-1:-1:-1;2043:98:7;-1:-1:-1;2214:37:7;;-1:-1:-1;2247:2:7;2232:18;;2214:37;:::i;:::-;2204:47;;1436:821;;;;;;;;:::o;2262:1152::-;2409:6;2417;2425;2433;2441;2449;2457;2510:3;2498:9;2489:7;2485:23;2481:33;2478:2;;;2532:6;2524;2517:22;2478:2;2576:9;2563:23;2595:31;2620:5;2595:31;:::i;:::-;2645:5;-1:-1:-1;2701:2:7;2686:18;;2673:32;2724:18;2754:14;;;2751:2;;;2786:6;2778;2771:22;2751:2;2830:70;2892:7;2883:6;2872:9;2868:22;2830:70;:::i;:::-;2919:8;;-1:-1:-1;2804:96:7;-1:-1:-1;3007:2:7;2992:18;;2979:32;;-1:-1:-1;3023:16:7;;;3020:2;;;3057:6;3049;3042:22;3020:2;;3101:72;3165:7;3154:8;3143:9;3139:24;3101:72;:::i;:::-;3192:8;;-1:-1:-1;3075:98:7;-1:-1:-1;3246:37:7;;-1:-1:-1;3279:2:7;3264:18;;3246:37;:::i;:::-;3236:47;;3335:3;3324:9;3320:19;3307:33;3349;3374:7;3349:33;:::i;:::-;3401:7;3391:17;;;2468:946;;;;;;;;;;:::o;3419:411::-;3500:6;3508;3561:2;3549:9;3540:7;3536:23;3532:32;3529:2;;;3582:6;3574;3567:22;3835:1307;4004:6;4012;4020;4028;4036;4044;4052;4060;4113:3;4101:9;4092:7;4088:23;4084:33;4081:2;;;4135:6;4127;4120:22;4081:2;4179:9;4166:23;4198:31;4223:5;4198:31;:::i;:::-;4248:5;-1:-1:-1;4305:2:7;4290:18;;4277:32;4318:33;4277:32;4318:33;:::i;:::-;4370:7;-1:-1:-1;4428:2:7;4413:18;;4400:32;4451:18;4481:14;;;4478:2;;;4513:6;4505;4498:22;4478:2;4557:70;4619:7;4610:6;4599:9;4595:22;4557:70;:::i;:::-;4646:8;;-1:-1:-1;4531:96:7;-1:-1:-1;4734:2:7;4719:18;;4706:32;;-1:-1:-1;4750:16:7;;;4747:2;;;4784:6;4776;4769:22;4747:2;;4828:72;4892:7;4881:8;4870:9;4866:24;4828:72;:::i;:::-;4919:8;;-1:-1:-1;4802:98:7;-1:-1:-1;4973:38:7;;-1:-1:-1;5006:3:7;4991:19;;4973:38;:::i;:::-;4963:48;;5063:3;5052:9;5048:19;5035:33;5077;5102:7;5077:33;:::i;:::-;5129:7;5119:17;;;4071:1071;;;;;;;;;;;:::o;5147:673::-;5264:6;5272;5280;5288;5341:2;5329:9;5320:7;5316:23;5312:32;5309:2;;;5362:6;5354;5347:22;5309:2;5406:9;5393:23;5425:31;5450:5;5425:31;:::i;:::-;5475:5;-1:-1:-1;5527:2:7;5512:18;;5499:32;;-1:-1:-1;5582:2:7;5567:18;;5554:32;5609:18;5598:30;;5595:2;;;5646:6;5638;5631:22;5595:2;5690:70;5752:7;5743:6;5732:9;5728:22;5690:70;:::i;:::-;5299:521;;;;-1:-1:-1;5779:8:7;-1:-1:-1;;;;5299:521:7:o;5825:874::-;5954:6;5962;5970;5978;5986;6039:2;6027:9;6018:7;6014:23;6010:32;6007:2;;;6060:6;6052;6045:22;6007:2;6105:9;6092:23;6134:18;6175:2;6167:6;6164:14;6161:2;;;6196:6;6188;6181:22;6161:2;6240:70;6302:7;6293:6;6282:9;6278:22;6240:70;:::i;:::-;6329:8;;-1:-1:-1;6214:96:7;-1:-1:-1;6417:2:7;6402:18;;6389:32;;-1:-1:-1;6433:16:7;;;6430:2;;;6467:6;6459;6452:22;6430:2;;6511:72;6575:7;6564:8;6553:9;6549:24;6511:72;:::i;:::-;6602:8;;-1:-1:-1;6485:98:7;-1:-1:-1;6656:37:7;;-1:-1:-1;6689:2:7;6674:18;;6656:37;:::i;:::-;6646:47;;5997:702;;;;;;;;:::o;6704:1010::-;6842:6;6850;6858;6866;6874;6882;6935:3;6923:9;6914:7;6910:23;6906:33;6903:2;;;6957:6;6949;6942:22;6903:2;7002:9;6989:23;7031:18;7072:2;7064:6;7061:14;7058:2;;;7093:6;7085;7078:22;7058:2;7137:70;7199:7;7190:6;7179:9;7175:22;7137:70;:::i;:::-;7226:8;;-1:-1:-1;7111:96:7;-1:-1:-1;7314:2:7;7299:18;;7286:32;;-1:-1:-1;7330:16:7;;;7327:2;;;7364:6;7356;7349:22;7327:2;;7408:72;7472:7;7461:8;7450:9;7446:24;7408:72;:::i;:::-;7499:8;;-1:-1:-1;7382:98:7;-1:-1:-1;7553:37:7;;-1:-1:-1;7586:2:7;7571:18;;7553:37;:::i;:::-;7543:47;;7640:2;7629:9;7625:18;7612:32;7653:31;7678:5;7653:31;:::i;:::-;7703:5;7693:15;;;6893:821;;;;;;;;:::o;7994:194::-;8064:6;8117:2;8105:9;8096:7;8092:23;8088:32;8085:2;;;8138:6;8130;8123:22;8085:2;-1:-1:-1;8166:16:7;;8075:113;-1:-1:-1;8075:113:7:o;8193:524::-;8293:6;8288:3;8281:19;8263:3;8319:4;8348:2;8343:3;8339:12;8332:19;;8374:5;8397:3;8409:283;8423:6;8420:1;8417:13;8409:283;;;8500:6;8487:20;8520:33;8545:7;8520:33;:::i;:::-;-1:-1:-1;;;;;8578:33:7;8566:46;;8632:12;;;;8667:15;;;;8608:1;8438:9;8409:283;;;-1:-1:-1;8708:3:7;;8271:446;-1:-1:-1;;;;;8271:446:7:o;8722:438::-;8821:6;8816:3;8809:19;8791:3;8847:4;8876:2;8871:3;8867:12;8860:19;;8902:5;8925:3;8937:198;8951:6;8948:1;8945:13;8937:198;;;9043:10;9016:25;9034:6;9016:25;:::i;:::-;9012:42;9000:55;;9075:12;;;;9110:15;;;;8973:1;8966:9;8937:198;;9284:1088;9604:13;;9547:3;;9578;;9657:4;9684:15;;;9547:3;9729:201;9743:6;9740:1;9737:13;9729:201;;;9810:13;;-1:-1:-1;;;;;9806:39:7;9792:54;;9868:14;;;;9905:15;;;;9842:1;9758:9;9729:201;;;-1:-1:-1;;9982:13:7;;10043:15;;;;9952:5;-1:-1:-1;10078:3:7;10090:206;10106:8;10101:3;10098:17;10090:206;;;10179:15;;10196:10;10175:32;10161:47;;10269:17;;;;10230:14;;;;10134:1;10125:11;10090:206;;;10094:3;;;10305:32;10331:5;10323:6;9255:3;9234:15;-1:-1:-1;;;;;;9230:42:7;9218:55;;9208:71;10305:32;10364:1;10353:13;;9555:817;-1:-1:-1;;;;;;9555:817:7:o;10585:602::-;10886:2;10875:9;10868:21;10849:4;10912:73;10981:2;10970:9;10966:18;10958:6;10950;10912:73;:::i;:::-;11033:9;11025:6;11021:22;11016:2;11005:9;11001:18;10994:50;11061:60;11114:6;11106;11098;11061:60;:::i;:::-;11053:68;;;11169:10;11161:6;11157:23;11152:2;11141:9;11137:18;11130:51;10858:329;;;;;;;;:::o;11192:701::-;11521:3;11510:9;11503:22;11484:4;11548:74;11617:3;11606:9;11602:19;11594:6;11586;11548:74;:::i;:::-;11670:9;11662:6;11658:22;11653:2;11642:9;11638:18;11631:50;11698:60;11751:6;11743;11735;11698:60;:::i;:::-;11806:10;11794:23;;;;11789:2;11774:18;;11767:51;-1:-1:-1;;;;;;;11854:32:7;;;;11849:2;11834:18;;;11827:60;11690:68;11493:400;-1:-1:-1;;;;11493:400:7:o;13246:1308::-;13577:25;;;13565:2;13621;13639:18;;;13632:30;;;13550:18;;;13697:22;;;13517:4;;13777:6;;13750:3;13735:19;;13517:4;13814:277;13828:6;13825:1;13822:13;13814:277;;;13903:6;13890:20;13923:31;13948:5;13923:31;:::i;:::-;-1:-1:-1;;;;;13979:31:7;13967:44;;14066:15;;;;14031:12;;;;14007:1;13843:9;13814:277;;;-1:-1:-1;14127:19:7;;;14122:2;14107:18;;14100:47;14195:13;;14217:19;;;14254:12;;;;-1:-1:-1;14291:15:7;;;;14326:4;14339:187;14355:6;14350:3;14347:15;14339:187;;;14422:15;;14408:30;;14460:14;;;;14499:17;;;;14381:1;14372:11;14339:187;;;-1:-1:-1;14543:5:7;;13526:1028;-1:-1:-1;;;;;;;;;13526:1028:7:o;15009:128::-;15049:3;15080:1;15076:6;15073:1;15070:13;15067:2;;;15086:18;;:::i;:::-;-1:-1:-1;15122:9:7;;15057:80::o;15142:228::-;15181:3;15209:10;15246:2;15243:1;15239:10;15276:2;15273:1;15269:10;15307:3;15303:2;15299:12;15294:3;15291:21;15288:2;;;15315:18;;:::i;:::-;15351:13;;15189:181;-1:-1:-1;;;;15189:181:7:o;15375:125::-;15415:4;15443:1;15440;15437:8;15434:2;;;15448:18;;:::i;:::-;-1:-1:-1;15485:9:7;;15424:76::o;15505:127::-;15566:10;15561:3;15557:20;15554:1;15547:31;15597:4;15594:1;15587:15;15621:4;15618:1;15611:15;15637:131;-1:-1:-1;;;;;15712:31:7;;15702:42;;15692:2;;15758:1;15755;15748:12;15692:2;15682:86;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "2540000",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "PERCENTAGE_SCALE()": "229",
                "acceptControl(address)": "45838",
                "cancelControlTransfer(address)": "23323",
                "createSplit(address[],uint32[],uint32,address)": "infinite",
                "distributeERC20(address,address,address[],uint32[],uint32,address)": "infinite",
                "distributeETH(address,address[],uint32[],uint32,address)": "infinite",
                "getController(address)": "1334",
                "getERC20Balance(address,address)": "infinite",
                "getETHBalance(address)": "2964",
                "getHash(address)": "1310",
                "getNewPotentialController(address)": "1339",
                "makeSplitImmutable(address)": "45871",
                "predictImmutableSplitAddress(address[],uint32[],uint32)": "infinite",
                "transferControl(address,address)": "infinite",
                "updateAndDistributeERC20(address,address,address[],uint32[],uint32,address)": "infinite",
                "updateAndDistributeETH(address,address[],uint32[],uint32,address)": "infinite",
                "updateSplit(address,address[],uint32[],uint32)": "infinite",
                "walletImplementation()": "infinite",
                "withdraw(address,uint256,address[])": "infinite"
              },
              "internal": {
                "_distributeERC20(address,contract ERC20,address[] memory,uint32[] memory,uint32,address)": "infinite",
                "_distributeETH(address,address[] memory,uint32[] memory,uint32,address)": "infinite",
                "_getSum(uint32[] memory)": "infinite",
                "_hashSplit(address[] memory,uint32[] memory,uint32)": "infinite",
                "_scaleAmountByPercentage(uint256,uint256)": "infinite",
                "_updateSplit(address,address[] calldata,uint32[] calldata,uint32)": "infinite",
                "_validSplitHash(address,address[] memory,uint32[] memory,uint32)": "infinite",
                "_withdraw(address)": "infinite",
                "_withdrawERC20(address,contract ERC20)": "infinite"
              }
            },
            "methodIdentifiers": {
              "PERCENTAGE_SCALE()": "3f26479e",
              "acceptControl(address)": "c7de6440",
              "cancelControlTransfer(address)": "1267c6da",
              "createSplit(address[],uint32[],uint32,address)": "7601f782",
              "distributeERC20(address,address,address[],uint32[],uint32,address)": "15811302",
              "distributeETH(address,address[],uint32[],uint32,address)": "e61cb05e",
              "getController(address)": "88c662aa",
              "getERC20Balance(address,address)": "c3a8962c",
              "getETHBalance(address)": "3bb66a7b",
              "getHash(address)": "1da0b8fc",
              "getNewPotentialController(address)": "e10e51d6",
              "makeSplitImmutable(address)": "189cbaa0",
              "predictImmutableSplitAddress(address[],uint32[],uint32)": "52844dd3",
              "transferControl(address,address)": "d0e4b2f4",
              "updateAndDistributeERC20(address,address,address[],uint32[],uint32,address)": "77b1e4e9",
              "updateAndDistributeETH(address,address[],uint32[],uint32,address)": "a5e3909e",
              "updateSplit(address,address[],uint32[],uint32)": "ecef0ace",
              "walletImplementation()": "8117abc1",
              "withdraw(address,uint256,address[])": "6e5f6919"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Create2Error\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CreateError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"InvalidNewController\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"accountsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocationsLength\",\"type\":\"uint256\"}],\"name\":\"InvalidSplit__AccountsAndAllocationsMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"InvalidSplit__AccountsOutOfOrder\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"InvalidSplit__AllocationMustBePositive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"allocationsSum\",\"type\":\"uint32\"}],\"name\":\"InvalidSplit__InvalidAllocationsSum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"}],\"name\":\"InvalidSplit__InvalidDistributorFee\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"InvalidSplit__InvalidHash\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"accountsLength\",\"type\":\"uint256\"}],\"name\":\"InvalidSplit__TooFewAccounts\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"}],\"name\":\"CancelControlTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousController\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ControlTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"CreateSplit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"distributorAddress\",\"type\":\"address\"}],\"name\":\"DistributeERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"distributorAddress\",\"type\":\"address\"}],\"name\":\"DistributeETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPotentialController\",\"type\":\"address\"}],\"name\":\"InitiateControlTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"}],\"name\":\"UpdateSplit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract ERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PERCENTAGE_SCALE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"}],\"name\":\"acceptControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"}],\"name\":\"cancelControlTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"createSplit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"distributorAddress\",\"type\":\"address\"}],\"name\":\"distributeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"distributorAddress\",\"type\":\"address\"}],\"name\":\"distributeETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"}],\"name\":\"getController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getERC20Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getETHBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"}],\"name\":\"getNewPotentialController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"}],\"name\":\"makeSplitImmutable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"}],\"name\":\"predictImmutableSplitAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"transferControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"distributorAddress\",\"type\":\"address\"}],\"name\":\"updateAndDistributeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"distributorAddress\",\"type\":\"address\"}],\"name\":\"updateAndDistributeETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"}],\"name\":\"updateSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawETH\",\"type\":\"uint256\"},{\"internalType\":\"contract ERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"0xSplits <will@0xSplits.xyz>\",\"details\":\"Split recipients, ownerships, and keeper fees are stored onchain as calldata & re-passed as args / validated via hashing when needed. Each split gets its own address & proxy for maximum composability with other contracts onchain. For these proxies, we extended EIP-1167 Minimal Proxy Contract to avoid `DELEGATECALL` inside `receive()` to accept hard gas-capped `sends` & `transfers`.\",\"errors\":{\"InvalidNewController(address)\":[{\"params\":{\"newController\":\"Invalid new controller\"}}],\"InvalidSplit__AccountsAndAllocationsMismatch(uint256,uint256)\":[{\"params\":{\"accountsLength\":\"Length of accounts array\",\"allocationsLength\":\"Length of percentAllocations array\"}}],\"InvalidSplit__AccountsOutOfOrder(uint256)\":[{\"params\":{\"index\":\"Index of out-of-order account\"}}],\"InvalidSplit__AllocationMustBePositive(uint256)\":[{\"params\":{\"index\":\"Index of zero percentAllocation\"}}],\"InvalidSplit__InvalidAllocationsSum(uint32)\":[{\"params\":{\"allocationsSum\":\"Sum of percentAllocations array\"}}],\"InvalidSplit__InvalidDistributorFee(uint32)\":[{\"params\":{\"distributorFee\":\"Invalid distributorFee amount\"}}],\"InvalidSplit__InvalidHash(bytes32)\":[{\"params\":{\"hash\":\"Invalid hash\"}}],\"InvalidSplit__TooFewAccounts(uint256)\":[{\"params\":{\"accountsLength\":\"Length of accounts array\"}}],\"Unauthorized(address)\":[{\"params\":{\"sender\":\"Transaction sender\"}}]},\"kind\":\"dev\",\"methods\":{\"acceptControl(address)\":{\"params\":{\"split\":\"Address of mutable split to accept control transfer for\"}},\"cancelControlTransfer(address)\":{\"params\":{\"split\":\"Address of mutable split to cancel control transfer for\"}},\"createSplit(address[],uint32[],uint32,address)\":{\"params\":{\"accounts\":\"Ordered, unique list of addresses with ownership in the split\",\"controller\":\"Controlling address (0x0 if immutable)\",\"distributorFee\":\"Keeper fee paid by split to cover gas costs of distribution\",\"percentAllocations\":\"Percent allocations associated with each address\"},\"returns\":{\"split\":\"Address of newly created split\"}},\"distributeERC20(address,address,address[],uint32[],uint32,address)\":{\"details\":\"`accounts`, `percentAllocations`, and `distributorFee` are verified by hashing  & comparing to the hash in storage associated with split `split`pernicious ERC20s may cause overflow in this function inside  _scaleAmountByPercentage, but results do not affect ETH & other ERC20 balances\",\"params\":{\"accounts\":\"Ordered, unique list of addresses with ownership in the split\",\"distributorAddress\":\"Address to pay `distributorFee` to\",\"distributorFee\":\"Keeper fee paid by split to cover gas costs of distribution\",\"percentAllocations\":\"Percent allocations associated with each address\",\"split\":\"Address of split to distribute balance for\",\"token\":\"Address of ERC20 to distribute balance for\"}},\"distributeETH(address,address[],uint32[],uint32,address)\":{\"details\":\"`accounts`, `percentAllocations`, and `distributorFee` are verified by hashing  & comparing to the hash in storage associated with split `split`\",\"params\":{\"accounts\":\"Ordered, unique list of addresses with ownership in the split\",\"distributorAddress\":\"Address to pay `distributorFee` to\",\"distributorFee\":\"Keeper fee paid by split to cover gas costs of distribution\",\"percentAllocations\":\"Percent allocations associated with each address\",\"split\":\"Address of split to distribute balance for\"}},\"getController(address)\":{\"params\":{\"split\":\"Split to return controller for\"},\"returns\":{\"_0\":\"Split's controller\"}},\"getERC20Balance(address,address)\":{\"params\":{\"account\":\"Account to return ERC20 `token` balance for\",\"token\":\"Token to return balance for\"},\"returns\":{\"_0\":\"Account's balance of `token`\"}},\"getETHBalance(address)\":{\"params\":{\"account\":\"Account to return ETH balance for\"},\"returns\":{\"_0\":\"Account's balance of ETH\"}},\"getHash(address)\":{\"params\":{\"split\":\"Split to return hash for\"},\"returns\":{\"_0\":\"Split's hash\"}},\"getNewPotentialController(address)\":{\"params\":{\"split\":\"Split to return newPotentialController for\"},\"returns\":{\"_0\":\"Split's newPotentialController\"}},\"makeSplitImmutable(address)\":{\"params\":{\"split\":\"Address of mutable split to turn immutable\"}},\"predictImmutableSplitAddress(address[],uint32[],uint32)\":{\"params\":{\"accounts\":\"Ordered, unique list of addresses with ownership in the split\",\"distributorFee\":\"Keeper fee paid by split to cover gas costs of distribution\",\"percentAllocations\":\"Percent allocations associated with each address\"},\"returns\":{\"split\":\"Predicted address of such an immutable split\"}},\"transferControl(address,address)\":{\"details\":\"Two-step control transfer inspired by [dharma](https://github.com/dharma-eng/dharma-smart-wallet/blob/master/contracts/helpers/TwoStepOwnable.sol)\",\"params\":{\"newController\":\"Address to begin transferring control to\",\"split\":\"Address of mutable split to transfer control for\"}},\"updateAndDistributeERC20(address,address,address[],uint32[],uint32,address)\":{\"details\":\"only callable by SplitControllerpernicious ERC20s may cause overflow in this function inside  _scaleAmountByPercentage, but results do not affect ETH & other ERC20 balances\",\"params\":{\"accounts\":\"Ordered, unique list of addresses with ownership in the split\",\"distributorAddress\":\"Address to pay `distributorFee` to\",\"distributorFee\":\"Keeper fee paid by split to cover gas costs of distribution\",\"percentAllocations\":\"Percent allocations associated with each address\",\"split\":\"Address of split to distribute balance for\",\"token\":\"Address of ERC20 to distribute balance for\"}},\"updateAndDistributeETH(address,address[],uint32[],uint32,address)\":{\"details\":\"only callable by SplitController\",\"params\":{\"accounts\":\"Ordered, unique list of addresses with ownership in the split\",\"distributorAddress\":\"Address to pay `distributorFee` to\",\"distributorFee\":\"Keeper fee paid by split to cover gas costs of distribution\",\"percentAllocations\":\"Percent allocations associated with each address\",\"split\":\"Address of split to distribute balance for\"}},\"updateSplit(address,address[],uint32[],uint32)\":{\"params\":{\"accounts\":\"Ordered, unique list of addresses with ownership in the split\",\"distributorFee\":\"Keeper fee paid by split to cover gas costs of distribution\",\"percentAllocations\":\"Percent allocations associated with each address\",\"split\":\"Address of mutable split to update\"}},\"withdraw(address,uint256,address[])\":{\"params\":{\"account\":\"Address to withdraw on behalf of\",\"tokens\":\"Addresses of ERC20s to withdraw\",\"withdrawETH\":\"Withdraw all ETH if nonzero\"}}},\"title\":\"SplitMain\",\"version\":1},\"userdoc\":{\"errors\":{\"Create2Error()\":[{\"notice\":\"create2 opcode failed\"}],\"CreateError()\":[{\"notice\":\"create opcode failed\"}],\"InvalidNewController(address)\":[{\"notice\":\"Invalid new controlling address `newController` for mutable split\"}],\"InvalidSplit__AccountsAndAllocationsMismatch(uint256,uint256)\":[{\"notice\":\"Array lengths of accounts & percentAllocations don't match (`accountsLength` != `allocationsLength`)\"}],\"InvalidSplit__AccountsOutOfOrder(uint256)\":[{\"notice\":\"Invalid accounts ordering at `index`\"}],\"InvalidSplit__AllocationMustBePositive(uint256)\":[{\"notice\":\"Invalid percentAllocation of zero at `index`\"}],\"InvalidSplit__InvalidAllocationsSum(uint32)\":[{\"notice\":\"Invalid percentAllocations sum `allocationsSum` must equal `PERCENTAGE_SCALE`\"}],\"InvalidSplit__InvalidDistributorFee(uint32)\":[{\"notice\":\"Invalid distributorFee `distributorFee` cannot be greater than 10% (1e5)\"}],\"InvalidSplit__InvalidHash(bytes32)\":[{\"notice\":\"Invalid hash `hash` from split data (accounts, percentAllocations, distributorFee)\"}],\"InvalidSplit__TooFewAccounts(uint256)\":[{\"notice\":\"Invalid number of accounts `accountsLength`, must have at least 2\"}],\"Unauthorized(address)\":[{\"notice\":\"Unauthorized sender `sender`\"}]},\"events\":{\"CancelControlTransfer(address)\":{\"notice\":\"emitted after each canceled split control transfer\"},\"ControlTransfer(address,address,address)\":{\"notice\":\"emitted after each successful split control transfer\"},\"CreateSplit(address,address[],uint32[],uint32,address)\":{\"notice\":\"emitted after each successful split creation\"},\"DistributeERC20(address,address,uint256,address)\":{\"notice\":\"emitted after each successful ERC20 balance split\"},\"DistributeETH(address,uint256,address)\":{\"notice\":\"emitted after each successful ETH balance split\"},\"InitiateControlTransfer(address,address)\":{\"notice\":\"emitted after each initiated split control transfer\"},\"UpdateSplit(address,address[],uint32[],uint32)\":{\"notice\":\"emitted after each successful split update\"},\"Withdrawal(address,uint256,address[],uint256[])\":{\"notice\":\"emitted after each successful withdrawal\"}},\"kind\":\"user\",\"methods\":{\"PERCENTAGE_SCALE()\":{\"notice\":\"constant to scale uints into percentages (1e6 == 100%)\"},\"acceptControl(address)\":{\"notice\":\"Accepts transfer of the controlling address of mutable split `split`\"},\"cancelControlTransfer(address)\":{\"notice\":\"Cancels transfer of the controlling address of mutable split `split`\"},\"constructor\":{\"notice\":\"CONSTRUCTOR\"},\"createSplit(address[],uint32[],uint32,address)\":{\"notice\":\"Creates a new split with recipients `accounts` with ownerships `percentAllocations`, a keeper fee for splitting of `distributorFee` and the controlling address `controller`\"},\"distributeERC20(address,address,address[],uint32[],uint32,address)\":{\"notice\":\"Distributes the ERC20 `token` balance for split `split`\"},\"distributeETH(address,address[],uint32[],uint32,address)\":{\"notice\":\"Distributes the ETH balance for split `split`\"},\"getController(address)\":{\"notice\":\"Returns the current controller of split `split`\"},\"getERC20Balance(address,address)\":{\"notice\":\"Returns the ERC20 balance of token `token` for account `account`\"},\"getETHBalance(address)\":{\"notice\":\"Returns the current ETH balance of account `account`\"},\"getHash(address)\":{\"notice\":\"Returns the current hash of split `split`\"},\"getNewPotentialController(address)\":{\"notice\":\"Returns the current newPotentialController of split `split`\"},\"makeSplitImmutable(address)\":{\"notice\":\"Turns mutable split `split` immutable\"},\"predictImmutableSplitAddress(address[],uint32[],uint32)\":{\"notice\":\"Predicts the address for an immutable split created with recipients `accounts` with ownerships `percentAllocations` and a keeper fee for splitting of `distributorFee`\"},\"transferControl(address,address)\":{\"notice\":\"Begins transfer of the controlling address of mutable split `split` to `newController`\"},\"updateAndDistributeERC20(address,address,address[],uint32[],uint32,address)\":{\"notice\":\"Updates & distributes the ERC20 `token` balance for split `split`\"},\"updateAndDistributeETH(address,address[],uint32[],uint32,address)\":{\"notice\":\"Updates & distributes the ETH balance for split `split`\"},\"updateSplit(address,address[],uint32[],uint32)\":{\"notice\":\"Updates an existing split with recipients `accounts` with ownerships `percentAllocations` and a keeper fee for splitting of `distributorFee`\"},\"walletImplementation()\":{\"notice\":\"address of wallet implementation for split proxies\"},\"withdraw(address,uint256,address[])\":{\"notice\":\"Withdraw ETH &/ ERC20 balances for account `account`\"}},\"notice\":\"A composable and gas-efficient protocol for deploying splitter contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SplitMain.sol\":\"SplitMain\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*///////////////////////////////////////////////////////////////\\n                                  EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    bytes32 public constant PERMIT_TYPEHASH =\\n        keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            bytes32 digest = keccak256(\\n                abi.encodePacked(\\n                    \\\"\\\\x19\\\\x01\\\",\\n                    DOMAIN_SEPARATOR(),\\n                    keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\n                )\\n            );\\n\\n            address recoveredAddress = ecrecover(digest, v, r, s);\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\"},\"@rari-capital/solmate/src/utils/SafeTransferLib.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\nimport {ERC20} from \\\"../tokens/ERC20.sol\\\";\\n\\n/// @notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol)\\n/// @author Modified from Gnosis (https://github.com/gnosis/gp-v2-contracts/blob/main/src/contracts/libraries/GPv2SafeERC20.sol)\\n/// @dev Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.\\nlibrary SafeTransferLib {\\n    /*///////////////////////////////////////////////////////////////\\n                            ETH OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Transfer the ETH and store if it succeeded or not.\\n            callStatus := call(gas(), to, amount, 0, 0, 0, 0)\\n        }\\n\\n        require(callStatus, \\\"ETH_TRANSFER_FAILED\\\");\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                           ERC20 OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function safeTransferFrom(\\n        ERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Get a pointer to some free memory.\\n            let freeMemoryPointer := mload(0x40)\\n\\n            // Write the abi-encoded calldata to memory piece by piece:\\n            mstore(freeMemoryPointer, 0x23b872dd00000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\\n            mstore(add(freeMemoryPointer, 4), and(from, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"from\\\" argument.\\n            mstore(add(freeMemoryPointer, 36), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"to\\\" argument.\\n            mstore(add(freeMemoryPointer, 68), amount) // Finally append the \\\"amount\\\" argument. No mask as it's a full 32 byte value.\\n\\n            // Call the token and store if it succeeded or not.\\n            // We use 100 because the calldata length is 4 + 32 * 3.\\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 100, 0, 0)\\n        }\\n\\n        require(didLastOptionalReturnCallSucceed(callStatus), \\\"TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function safeTransfer(\\n        ERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Get a pointer to some free memory.\\n            let freeMemoryPointer := mload(0x40)\\n\\n            // Write the abi-encoded calldata to memory piece by piece:\\n            mstore(freeMemoryPointer, 0xa9059cbb00000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\\n            mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"to\\\" argument.\\n            mstore(add(freeMemoryPointer, 36), amount) // Finally append the \\\"amount\\\" argument. No mask as it's a full 32 byte value.\\n\\n            // Call the token and store if it succeeded or not.\\n            // We use 68 because the calldata length is 4 + 32 * 2.\\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 68, 0, 0)\\n        }\\n\\n        require(didLastOptionalReturnCallSucceed(callStatus), \\\"TRANSFER_FAILED\\\");\\n    }\\n\\n    function safeApprove(\\n        ERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Get a pointer to some free memory.\\n            let freeMemoryPointer := mload(0x40)\\n\\n            // Write the abi-encoded calldata to memory piece by piece:\\n            mstore(freeMemoryPointer, 0x095ea7b300000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\\n            mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"to\\\" argument.\\n            mstore(add(freeMemoryPointer, 36), amount) // Finally append the \\\"amount\\\" argument. No mask as it's a full 32 byte value.\\n\\n            // Call the token and store if it succeeded or not.\\n            // We use 68 because the calldata length is 4 + 32 * 2.\\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 68, 0, 0)\\n        }\\n\\n        require(didLastOptionalReturnCallSucceed(callStatus), \\\"APPROVE_FAILED\\\");\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                         INTERNAL HELPER LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function didLastOptionalReturnCallSucceed(bool callStatus) private pure returns (bool success) {\\n        assembly {\\n            // Get how many bytes the call returned.\\n            let returnDataSize := returndatasize()\\n\\n            // If the call reverted:\\n            if iszero(callStatus) {\\n                // Copy the revert message into memory.\\n                returndatacopy(0, 0, returnDataSize)\\n\\n                // Revert with the same message.\\n                revert(0, returnDataSize)\\n            }\\n\\n            switch returnDataSize\\n            case 32 {\\n                // Copy the return data into memory.\\n                returndatacopy(0, 0, returnDataSize)\\n\\n                // Set success to whether it returned true.\\n                success := iszero(iszero(mload(0)))\\n            }\\n            case 0 {\\n                // There was no return data.\\n                success := 1\\n            }\\n            default {\\n                // It returned some malformed input.\\n                success := 0\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcc39d0f5693925ea1e8c517f7cc24211a9899c83a57e62d806180cdb056b6b75\",\"license\":\"AGPL-3.0-only\"},\"contracts/SplitMain.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.4;\\n\\nimport {ISplitMain} from 'contracts/interfaces/ISplitMain.sol';\\nimport {SplitWallet} from 'contracts/SplitWallet.sol';\\nimport {Clones} from 'contracts/libraries/Clones.sol';\\nimport {ERC20} from '@rari-capital/solmate/src/tokens/ERC20.sol';\\nimport {SafeTransferLib} from '@rari-capital/solmate/src/utils/SafeTransferLib.sol';\\n\\n/**\\n\\n                                             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588               \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588               \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588              \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588               \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588               \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n\\n                             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588           \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588               \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                       \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588              \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                       \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                       \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588              \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588           \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588               \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588              \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n\\n           \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n       \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n     \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588              \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n    \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588           \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588               \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588           \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588            \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588              \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588            \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588           \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588            \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588           \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588            \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588              \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n    \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588           \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588              \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n      \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588               \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n           \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n\\n                             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588           \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588               \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                       \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588              \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                       \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                       \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588              \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588           \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588               \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588              \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n\\n                                             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588               \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588               \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588              \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588               \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588               \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n                                             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n\\n */\\n\\n/**\\n * ERRORS\\n */\\n\\n/// @notice Unauthorized sender `sender`\\n/// @param sender Transaction sender\\nerror Unauthorized(address sender);\\n/// @notice Invalid number of accounts `accountsLength`, must have at least 2\\n/// @param accountsLength Length of accounts array\\nerror InvalidSplit__TooFewAccounts(uint256 accountsLength);\\n/// @notice Array lengths of accounts & percentAllocations don't match (`accountsLength` != `allocationsLength`)\\n/// @param accountsLength Length of accounts array\\n/// @param allocationsLength Length of percentAllocations array\\nerror InvalidSplit__AccountsAndAllocationsMismatch(\\n  uint256 accountsLength,\\n  uint256 allocationsLength\\n);\\n/// @notice Invalid percentAllocations sum `allocationsSum` must equal `PERCENTAGE_SCALE`\\n/// @param allocationsSum Sum of percentAllocations array\\nerror InvalidSplit__InvalidAllocationsSum(uint32 allocationsSum);\\n/// @notice Invalid accounts ordering at `index`\\n/// @param index Index of out-of-order account\\nerror InvalidSplit__AccountsOutOfOrder(uint256 index);\\n/// @notice Invalid percentAllocation of zero at `index`\\n/// @param index Index of zero percentAllocation\\nerror InvalidSplit__AllocationMustBePositive(uint256 index);\\n/// @notice Invalid distributorFee `distributorFee` cannot be greater than 10% (1e5)\\n/// @param distributorFee Invalid distributorFee amount\\nerror InvalidSplit__InvalidDistributorFee(uint32 distributorFee);\\n/// @notice Invalid hash `hash` from split data (accounts, percentAllocations, distributorFee)\\n/// @param hash Invalid hash\\nerror InvalidSplit__InvalidHash(bytes32 hash);\\n/// @notice Invalid new controlling address `newController` for mutable split\\n/// @param newController Invalid new controller\\nerror InvalidNewController(address newController);\\n\\n/**\\n * @title SplitMain\\n * @author 0xSplits <will@0xSplits.xyz>\\n * @notice A composable and gas-efficient protocol for deploying splitter contracts.\\n * @dev Split recipients, ownerships, and keeper fees are stored onchain as calldata & re-passed as args / validated\\n * via hashing when needed. Each split gets its own address & proxy for maximum composability with other contracts onchain.\\n * For these proxies, we extended EIP-1167 Minimal Proxy Contract to avoid `DELEGATECALL` inside `receive()` to accept\\n * hard gas-capped `sends` & `transfers`.\\n */\\ncontract SplitMain is ISplitMain {\\n  using SafeTransferLib for address;\\n  using SafeTransferLib for ERC20;\\n\\n  /**\\n   * STRUCTS\\n   */\\n\\n  /// @notice holds Split metadata\\n  struct Split {\\n    bytes32 hash;\\n    address controller;\\n    address newPotentialController;\\n  }\\n\\n  /**\\n   * STORAGE\\n   */\\n\\n  /**\\n   * STORAGE - CONSTANTS & IMMUTABLES\\n   */\\n\\n  /// @notice constant to scale uints into percentages (1e6 == 100%)\\n  uint256 public constant PERCENTAGE_SCALE = 1e6;\\n  /// @notice maximum distributor fee; 1e5 = 10% * PERCENTAGE_SCALE\\n  uint256 internal constant MAX_DISTRIBUTOR_FEE = 1e5;\\n  /// @notice address of wallet implementation for split proxies\\n  address public immutable override walletImplementation;\\n\\n  /**\\n   * STORAGE - VARIABLES - PRIVATE & INTERNAL\\n   */\\n\\n  /// @notice mapping to account ETH balances\\n  mapping(address => uint256) internal ethBalances;\\n  /// @notice mapping to account ERC20 balances\\n  mapping(ERC20 => mapping(address => uint256)) internal erc20Balances;\\n  /// @notice mapping to Split metadata\\n  mapping(address => Split) internal splits;\\n\\n  /**\\n   * MODIFIERS\\n   */\\n\\n  /** @notice Reverts if the sender doesn't own the split `split`\\n   *  @param split Address to check for control\\n   */\\n  modifier onlySplitController(address split) {\\n    if (msg.sender != splits[split].controller) revert Unauthorized(msg.sender);\\n    _;\\n  }\\n\\n  /** @notice Reverts if the sender isn't the new potential controller of split `split`\\n   *  @param split Address to check for new potential control\\n   */\\n  modifier onlySplitNewPotentialController(address split) {\\n    if (msg.sender != splits[split].newPotentialController)\\n      revert Unauthorized(msg.sender);\\n    _;\\n  }\\n\\n  /** @notice Reverts if the split with recipients represented by `accounts` and `percentAllocations` is malformed\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   */\\n  modifier validSplit(\\n    address[] memory accounts,\\n    uint32[] memory percentAllocations,\\n    uint32 distributorFee\\n  ) {\\n    if (accounts.length < 2)\\n      revert InvalidSplit__TooFewAccounts(accounts.length);\\n    if (accounts.length != percentAllocations.length)\\n      revert InvalidSplit__AccountsAndAllocationsMismatch(\\n        accounts.length,\\n        percentAllocations.length\\n      );\\n    // _getSum should overflow if any percentAllocation[i] < 0\\n    if (_getSum(percentAllocations) != PERCENTAGE_SCALE)\\n      revert InvalidSplit__InvalidAllocationsSum(_getSum(percentAllocations));\\n    unchecked {\\n      // overflow should be impossible in for-loop index\\n      // cache accounts length to save gas\\n      uint256 loopLength = accounts.length - 1;\\n      for (uint256 i = 0; i < loopLength; ++i) {\\n        // overflow should be impossible in array access math\\n        if (accounts[i] >= accounts[i + 1])\\n          revert InvalidSplit__AccountsOutOfOrder(i);\\n        if (percentAllocations[i] == uint32(0))\\n          revert InvalidSplit__AllocationMustBePositive(i);\\n      }\\n      // overflow should be impossible in array access math with validated equal array lengths\\n      if (percentAllocations[loopLength] == uint32(0))\\n        revert InvalidSplit__AllocationMustBePositive(loopLength);\\n    }\\n    if (distributorFee > MAX_DISTRIBUTOR_FEE)\\n      revert InvalidSplit__InvalidDistributorFee(distributorFee);\\n    _;\\n  }\\n\\n  /** @notice Reverts if `newController` is the zero address\\n   *  @param newController Proposed new controlling address\\n   */\\n  modifier validNewController(address newController) {\\n    if (newController == address(0)) revert InvalidNewController(newController);\\n    _;\\n  }\\n\\n  /**\\n   * CONSTRUCTOR\\n   */\\n\\n  constructor() {\\n    walletImplementation = address(new SplitWallet());\\n  }\\n\\n  /**\\n   * FUNCTIONS\\n   */\\n\\n  /**\\n   * FUNCTIONS - PUBLIC & EXTERNAL\\n   */\\n\\n  /** @notice Receive ETH\\n   *  @dev Used by split proxies in `distributeETH` to transfer ETH to `SplitMain`\\n   *  Funds sent outside of `distributeETH` will be unrecoverable\\n   */\\n  receive() external payable {}\\n\\n  /** @notice Creates a new split with recipients `accounts` with ownerships `percentAllocations`, a keeper fee for splitting of `distributorFee` and the controlling address `controller`\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   *  @param controller Controlling address (0x0 if immutable)\\n   *  @return split Address of newly created split\\n   */\\n  function createSplit(\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address controller\\n  )\\n    external\\n    override\\n    validSplit(accounts, percentAllocations, distributorFee)\\n    returns (address split)\\n  {\\n    bytes32 splitHash = _hashSplit(\\n      accounts,\\n      percentAllocations,\\n      distributorFee\\n    );\\n    if (controller == address(0)) {\\n      // create immutable split\\n      split = Clones.cloneDeterministic(walletImplementation, splitHash);\\n    } else {\\n      // create mutable split\\n      split = Clones.clone(walletImplementation);\\n      splits[split].controller = controller;\\n    }\\n    // store split's hash in storage for future verification\\n    splits[split].hash = splitHash;\\n    emit CreateSplit(\\n      split,\\n      accounts,\\n      percentAllocations,\\n      distributorFee,\\n      controller\\n    );\\n  }\\n\\n  /** @notice Predicts the address for an immutable split created with recipients `accounts` with ownerships `percentAllocations` and a keeper fee for splitting of `distributorFee`\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   *  @return split Predicted address of such an immutable split\\n   */\\n  function predictImmutableSplitAddress(\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee\\n  )\\n    external\\n    view\\n    override\\n    validSplit(accounts, percentAllocations, distributorFee)\\n    returns (address split)\\n  {\\n    bytes32 splitHash = _hashSplit(\\n      accounts,\\n      percentAllocations,\\n      distributorFee\\n    );\\n    split = Clones.predictDeterministicAddress(walletImplementation, splitHash);\\n  }\\n\\n  /** @notice Updates an existing split with recipients `accounts` with ownerships `percentAllocations` and a keeper fee for splitting of `distributorFee`\\n   *  @param split Address of mutable split to update\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   */\\n  function updateSplit(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee\\n  )\\n    external\\n    override\\n    onlySplitController(split)\\n    validSplit(accounts, percentAllocations, distributorFee)\\n  {\\n    _updateSplit(split, accounts, percentAllocations, distributorFee);\\n  }\\n\\n  /** @notice Begins transfer of the controlling address of mutable split `split` to `newController`\\n   *  @dev Two-step control transfer inspired by [dharma](https://github.com/dharma-eng/dharma-smart-wallet/blob/master/contracts/helpers/TwoStepOwnable.sol)\\n   *  @param split Address of mutable split to transfer control for\\n   *  @param newController Address to begin transferring control to\\n   */\\n  function transferControl(address split, address newController)\\n    external\\n    override\\n    onlySplitController(split)\\n    validNewController(newController)\\n  {\\n    splits[split].newPotentialController = newController;\\n    emit InitiateControlTransfer(split, newController);\\n  }\\n\\n  /** @notice Cancels transfer of the controlling address of mutable split `split`\\n   *  @param split Address of mutable split to cancel control transfer for\\n   */\\n  function cancelControlTransfer(address split)\\n    external\\n    override\\n    onlySplitController(split)\\n  {\\n    delete splits[split].newPotentialController;\\n    emit CancelControlTransfer(split);\\n  }\\n\\n  /** @notice Accepts transfer of the controlling address of mutable split `split`\\n   *  @param split Address of mutable split to accept control transfer for\\n   */\\n  function acceptControl(address split)\\n    external\\n    override\\n    onlySplitNewPotentialController(split)\\n  {\\n    delete splits[split].newPotentialController;\\n    emit ControlTransfer(split, splits[split].controller, msg.sender);\\n    splits[split].controller = msg.sender;\\n  }\\n\\n  /** @notice Turns mutable split `split` immutable\\n   *  @param split Address of mutable split to turn immutable\\n   */\\n  function makeSplitImmutable(address split)\\n    external\\n    override\\n    onlySplitController(split)\\n  {\\n    delete splits[split].newPotentialController;\\n    emit ControlTransfer(split, splits[split].controller, address(0));\\n    splits[split].controller = address(0);\\n  }\\n\\n  /** @notice Distributes the ETH balance for split `split`\\n   *  @dev `accounts`, `percentAllocations`, and `distributorFee` are verified by hashing\\n   *  & comparing to the hash in storage associated with split `split`\\n   *  @param split Address of split to distribute balance for\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   *  @param distributorAddress Address to pay `distributorFee` to\\n   */\\n  function distributeETH(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external override validSplit(accounts, percentAllocations, distributorFee) {\\n    // use internal fn instead of modifier to avoid stack depth compiler errors\\n    _validSplitHash(split, accounts, percentAllocations, distributorFee);\\n    _distributeETH(\\n      split,\\n      accounts,\\n      percentAllocations,\\n      distributorFee,\\n      distributorAddress\\n    );\\n  }\\n\\n  /** @notice Updates & distributes the ETH balance for split `split`\\n   *  @dev only callable by SplitController\\n   *  @param split Address of split to distribute balance for\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   *  @param distributorAddress Address to pay `distributorFee` to\\n   */\\n  function updateAndDistributeETH(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  )\\n    external\\n    override\\n    onlySplitController(split)\\n    validSplit(accounts, percentAllocations, distributorFee)\\n  {\\n    _updateSplit(split, accounts, percentAllocations, distributorFee);\\n    // know splitHash is valid immediately after updating; only accessible via controller\\n    _distributeETH(\\n      split,\\n      accounts,\\n      percentAllocations,\\n      distributorFee,\\n      distributorAddress\\n    );\\n  }\\n\\n  /** @notice Distributes the ERC20 `token` balance for split `split`\\n   *  @dev `accounts`, `percentAllocations`, and `distributorFee` are verified by hashing\\n   *  & comparing to the hash in storage associated with split `split`\\n   *  @dev pernicious ERC20s may cause overflow in this function inside\\n   *  _scaleAmountByPercentage, but results do not affect ETH & other ERC20 balances\\n   *  @param split Address of split to distribute balance for\\n   *  @param token Address of ERC20 to distribute balance for\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   *  @param distributorAddress Address to pay `distributorFee` to\\n   */\\n  function distributeERC20(\\n    address split,\\n    ERC20 token,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external override validSplit(accounts, percentAllocations, distributorFee) {\\n    // use internal fn instead of modifier to avoid stack depth compiler errors\\n    _validSplitHash(split, accounts, percentAllocations, distributorFee);\\n    _distributeERC20(\\n      split,\\n      token,\\n      accounts,\\n      percentAllocations,\\n      distributorFee,\\n      distributorAddress\\n    );\\n  }\\n\\n  /** @notice Updates & distributes the ERC20 `token` balance for split `split`\\n   *  @dev only callable by SplitController\\n   *  @dev pernicious ERC20s may cause overflow in this function inside\\n   *  _scaleAmountByPercentage, but results do not affect ETH & other ERC20 balances\\n   *  @param split Address of split to distribute balance for\\n   *  @param token Address of ERC20 to distribute balance for\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   *  @param distributorAddress Address to pay `distributorFee` to\\n   */\\n  function updateAndDistributeERC20(\\n    address split,\\n    ERC20 token,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  )\\n    external\\n    override\\n    onlySplitController(split)\\n    validSplit(accounts, percentAllocations, distributorFee)\\n  {\\n    _updateSplit(split, accounts, percentAllocations, distributorFee);\\n    // know splitHash is valid immediately after updating; only accessible via controller\\n    _distributeERC20(\\n      split,\\n      token,\\n      accounts,\\n      percentAllocations,\\n      distributorFee,\\n      distributorAddress\\n    );\\n  }\\n\\n  /** @notice Withdraw ETH &/ ERC20 balances for account `account`\\n   *  @param account Address to withdraw on behalf of\\n   *  @param withdrawETH Withdraw all ETH if nonzero\\n   *  @param tokens Addresses of ERC20s to withdraw\\n   */\\n  function withdraw(\\n    address account,\\n    uint256 withdrawETH,\\n    ERC20[] calldata tokens\\n  ) external override {\\n    uint256[] memory tokenAmounts = new uint256[](tokens.length);\\n    uint256 ethAmount;\\n    if (withdrawETH != 0) {\\n      ethAmount = _withdraw(account);\\n    }\\n    unchecked {\\n      // overflow should be impossible in for-loop index\\n      for (uint256 i = 0; i < tokens.length; ++i) {\\n        // overflow should be impossible in array length math\\n        tokenAmounts[i] = _withdrawERC20(account, tokens[i]);\\n      }\\n      emit Withdrawal(account, ethAmount, tokens, tokenAmounts);\\n    }\\n  }\\n\\n  /**\\n   * FUNCTIONS - VIEWS\\n   */\\n\\n  /** @notice Returns the current hash of split `split`\\n   *  @param split Split to return hash for\\n   *  @return Split's hash\\n   */\\n  function getHash(address split) external view returns (bytes32) {\\n    return splits[split].hash;\\n  }\\n\\n  /** @notice Returns the current controller of split `split`\\n   *  @param split Split to return controller for\\n   *  @return Split's controller\\n   */\\n  function getController(address split) external view returns (address) {\\n    return splits[split].controller;\\n  }\\n\\n  /** @notice Returns the current newPotentialController of split `split`\\n   *  @param split Split to return newPotentialController for\\n   *  @return Split's newPotentialController\\n   */\\n  function getNewPotentialController(address split)\\n    external\\n    view\\n    returns (address)\\n  {\\n    return splits[split].newPotentialController;\\n  }\\n\\n  /** @notice Returns the current ETH balance of account `account`\\n   *  @param account Account to return ETH balance for\\n   *  @return Account's balance of ETH\\n   */\\n  function getETHBalance(address account) external view returns (uint256) {\\n    return\\n      ethBalances[account] + (splits[account].hash != 0 ? account.balance : 0);\\n  }\\n\\n  /** @notice Returns the ERC20 balance of token `token` for account `account`\\n   *  @param account Account to return ERC20 `token` balance for\\n   *  @param token Token to return balance for\\n   *  @return Account's balance of `token`\\n   */\\n  function getERC20Balance(address account, ERC20 token)\\n    external\\n    view\\n    returns (uint256)\\n  {\\n    return\\n      erc20Balances[token][account] +\\n      (splits[account].hash != 0 ? token.balanceOf(account) : 0);\\n  }\\n\\n  /**\\n   * FUNCTIONS - PRIVATE & INTERNAL\\n   */\\n\\n  /** @notice Sums array of uint32s\\n   *  @param numbers Array of uint32s to sum\\n   *  @return sum Sum of `numbers`.\\n   */\\n  function _getSum(uint32[] memory numbers) internal pure returns (uint32 sum) {\\n    // overflow should be impossible in for-loop index\\n    uint256 numbersLength = numbers.length;\\n    for (uint256 i = 0; i < numbersLength; ) {\\n      sum += numbers[i];\\n      unchecked {\\n        // overflow should be impossible in for-loop index\\n        ++i;\\n      }\\n    }\\n  }\\n\\n  /** @notice Hashes a split\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   *  @return computedHash Hash of the split.\\n   */\\n  function _hashSplit(\\n    address[] memory accounts,\\n    uint32[] memory percentAllocations,\\n    uint32 distributorFee\\n  ) internal pure returns (bytes32) {\\n    return\\n      keccak256(abi.encodePacked(accounts, percentAllocations, distributorFee));\\n  }\\n\\n  /** @notice Updates an existing split with recipients `accounts` with ownerships `percentAllocations` and a keeper fee for splitting of `distributorFee`\\n   *  @param split Address of mutable split to update\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   */\\n  function _updateSplit(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee\\n  ) internal {\\n    bytes32 splitHash = _hashSplit(\\n      accounts,\\n      percentAllocations,\\n      distributorFee\\n    );\\n    // store new hash in storage for future verification\\n    splits[split].hash = splitHash;\\n    emit UpdateSplit(split, accounts, percentAllocations, distributorFee);\\n  }\\n\\n  /** @notice Checks hash from `accounts`, `percentAllocations`, and `distributorFee` against the hash stored for `split`\\n   *  @param split Address of hash to check\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   */\\n  function _validSplitHash(\\n    address split,\\n    address[] memory accounts,\\n    uint32[] memory percentAllocations,\\n    uint32 distributorFee\\n  ) internal view {\\n    bytes32 hash = _hashSplit(accounts, percentAllocations, distributorFee);\\n    if (splits[split].hash != hash) revert InvalidSplit__InvalidHash(hash);\\n  }\\n\\n  /** @notice Distributes the ETH balance for split `split`\\n   *  @dev `accounts`, `percentAllocations`, and `distributorFee` must be verified before calling\\n   *  @param split Address of split to distribute balance for\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   *  @param distributorAddress Address to pay `distributorFee` to\\n   */\\n  function _distributeETH(\\n    address split,\\n    address[] memory accounts,\\n    uint32[] memory percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) internal {\\n    uint256 mainBalance = ethBalances[split];\\n    uint256 proxyBalance = split.balance;\\n    // if mainBalance is positive, leave 1 in SplitMain for gas efficiency\\n    uint256 amountToSplit;\\n    unchecked {\\n      // underflow should be impossible\\n      if (mainBalance > 0) mainBalance -= 1;\\n      // overflow should be impossible\\n      amountToSplit = mainBalance + proxyBalance;\\n    }\\n    if (mainBalance > 0) ethBalances[split] = 1;\\n    // emit event with gross amountToSplit (before deducting distributorFee)\\n    emit DistributeETH(split, amountToSplit, distributorAddress);\\n    if (distributorFee != 0) {\\n      // given `amountToSplit`, calculate keeper fee\\n      uint256 distributorFeeAmount = _scaleAmountByPercentage(\\n        amountToSplit,\\n        distributorFee\\n      );\\n      unchecked {\\n        // credit keeper with fee\\n        // overflow should be impossible with validated distributorFee\\n        ethBalances[\\n          distributorAddress != address(0) ? distributorAddress : msg.sender\\n        ] += distributorFeeAmount;\\n        // given keeper fee, calculate how much to distribute to split recipients\\n        // underflow should be impossible with validated distributorFee\\n        amountToSplit -= distributorFeeAmount;\\n      }\\n    }\\n    unchecked {\\n      // distribute remaining balance\\n      // overflow should be impossible in for-loop index\\n      // cache accounts length to save gas\\n      uint256 accountsLength = accounts.length;\\n      for (uint256 i = 0; i < accountsLength; ++i) {\\n        // overflow should be impossible with validated allocations\\n        ethBalances[accounts[i]] += _scaleAmountByPercentage(\\n          amountToSplit,\\n          percentAllocations[i]\\n        );\\n      }\\n    }\\n    // flush proxy ETH balance to SplitMain\\n    // split proxy should be guaranteed to exist at this address after validating splitHash\\n    // (attacker can't deploy own contract to address with high balance & empty sendETHToMain\\n    // to drain ETH from SplitMain)\\n    // could technically check if (change in proxy balance == change in SplitMain balance)\\n    // before/after external call, but seems like extra gas for no practical benefit\\n    if (proxyBalance > 0) SplitWallet(split).sendETHToMain(proxyBalance);\\n  }\\n\\n  /** @notice Distributes the ERC20 `token` balance for split `split`\\n   *  @dev `accounts`, `percentAllocations`, and `distributorFee` must be verified before calling\\n   *  @dev pernicious ERC20s may cause overflow in this function inside\\n   *  _scaleAmountByPercentage, but results do not affect ETH & other ERC20 balances\\n   *  @param split Address of split to distribute balance for\\n   *  @param token Address of ERC20 to distribute balance for\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   *  @param distributorAddress Address to pay `distributorFee` to\\n   */\\n  function _distributeERC20(\\n    address split,\\n    ERC20 token,\\n    address[] memory accounts,\\n    uint32[] memory percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) internal {\\n    uint256 amountToSplit;\\n    uint256 mainBalance = erc20Balances[token][split];\\n    uint256 proxyBalance = token.balanceOf(split);\\n    unchecked {\\n      // if mainBalance &/ proxyBalance are positive, leave 1 for gas efficiency\\n      // underflow should be impossible\\n      if (proxyBalance > 0) proxyBalance -= 1;\\n      // underflow should be impossible\\n      if (mainBalance > 0) {\\n        mainBalance -= 1;\\n      }\\n      // overflow should be impossible\\n      amountToSplit = mainBalance + proxyBalance;\\n    }\\n    if (mainBalance > 0) erc20Balances[token][split] = 1;\\n    // emit event with gross amountToSplit (before deducting distributorFee)\\n    emit DistributeERC20(split, token, amountToSplit, distributorAddress);\\n    if (distributorFee != 0) {\\n      // given `amountToSplit`, calculate keeper fee\\n      uint256 distributorFeeAmount = _scaleAmountByPercentage(\\n        amountToSplit,\\n        distributorFee\\n      );\\n      // overflow should be impossible with validated distributorFee\\n      unchecked {\\n        // credit keeper with fee\\n        erc20Balances[token][\\n          distributorAddress != address(0) ? distributorAddress : msg.sender\\n        ] += distributorFeeAmount;\\n        // given keeper fee, calculate how much to distribute to split recipients\\n        amountToSplit -= distributorFeeAmount;\\n      }\\n    }\\n    // distribute remaining balance\\n    // overflows should be impossible in for-loop with validated allocations\\n    unchecked {\\n      // cache accounts length to save gas\\n      uint256 accountsLength = accounts.length;\\n      for (uint256 i = 0; i < accountsLength; ++i) {\\n        erc20Balances[token][accounts[i]] += _scaleAmountByPercentage(\\n          amountToSplit,\\n          percentAllocations[i]\\n        );\\n      }\\n    }\\n    // split proxy should be guaranteed to exist at this address after validating splitHash\\n    // (attacker can't deploy own contract to address with high ERC20 balance & empty\\n    // sendERC20ToMain to drain ERC20 from SplitMain)\\n    // doesn't support rebasing or fee-on-transfer tokens\\n    // flush extra proxy ERC20 balance to SplitMain\\n    if (proxyBalance > 0)\\n      SplitWallet(split).sendERC20ToMain(token, proxyBalance);\\n  }\\n\\n  /** @notice Multiplies an amount by a scaled percentage\\n   *  @param amount Amount to get `scaledPercentage` of\\n   *  @param scaledPercent Percent scaled by PERCENTAGE_SCALE\\n   *  @return scaledAmount Percent of `amount`.\\n   */\\n  function _scaleAmountByPercentage(uint256 amount, uint256 scaledPercent)\\n    internal\\n    pure\\n    returns (uint256 scaledAmount)\\n  {\\n    // use assembly to bypass checking for overflow & division by 0\\n    // scaledPercent has been validated to be < PERCENTAGE_SCALE)\\n    // & PERCENTAGE_SCALE will never be 0\\n    // pernicious ERC20s may cause overflow, but results do not affect ETH & other ERC20 balances\\n    assembly {\\n      /* eg (100 * 2*1e4) / (1e6) */\\n      scaledAmount := div(mul(amount, scaledPercent), PERCENTAGE_SCALE)\\n    }\\n  }\\n\\n  /** @notice Withdraw ETH for account `account`\\n   *  @param account Account to withdrawn ETH for\\n   *  @return withdrawn Amount of ETH withdrawn\\n   */\\n  function _withdraw(address account) internal returns (uint256 withdrawn) {\\n    // leave balance of 1 for gas efficiency\\n    // underflow if ethBalance is 0\\n    withdrawn = ethBalances[account] - 1;\\n    ethBalances[account] = 1;\\n    account.safeTransferETH(withdrawn);\\n  }\\n\\n  /** @notice Withdraw ERC20 `token` for account `account`\\n   *  @param account Account to withdrawn ERC20 `token` for\\n   *  @return withdrawn Amount of ERC20 `token` withdrawn\\n   */\\n  function _withdrawERC20(address account, ERC20 token)\\n    internal\\n    returns (uint256 withdrawn)\\n  {\\n    // leave balance of 1 for gas efficiency\\n    // underflow if erc20Balance is 0\\n    withdrawn = erc20Balances[token][account] - 1;\\n    erc20Balances[token][account] = 1;\\n    token.safeTransfer(account, withdrawn);\\n  }\\n}\\n\",\"keccak256\":\"0x918cd90a0a954ec4237aad790f090bed9b80891383087ad3b9b87aadd7749a21\",\"license\":\"GPL-3.0-or-later\"},\"contracts/SplitWallet.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.4;\\n\\nimport {ISplitMain} from './interfaces/ISplitMain.sol';\\nimport {ERC20} from '@rari-capital/solmate/src/tokens/ERC20.sol';\\nimport {SafeTransferLib} from '@rari-capital/solmate/src/utils/SafeTransferLib.sol';\\n\\n/**\\n * ERRORS\\n */\\n\\n/// @notice Unauthorized sender\\nerror Unauthorized();\\n\\n/**\\n * @title SplitWallet\\n * @author 0xSplits <will@0xSplits.xyz>\\n * @notice The implementation logic for `SplitProxy`.\\n * @dev `SplitProxy` handles `receive()` itself to avoid the gas cost with `DELEGATECALL`.\\n */\\ncontract SplitWallet {\\n  using SafeTransferLib for address;\\n  using SafeTransferLib for ERC20;\\n\\n  /**\\n   * EVENTS\\n   */\\n\\n  /** @notice emitted after each successful ETH transfer to proxy\\n   *  @param split Address of the split that received ETH\\n   *  @param amount Amount of ETH received\\n   */\\n  event ReceiveETH(address indexed split, uint256 amount);\\n\\n  /**\\n   * STORAGE\\n   */\\n\\n  /**\\n   * STORAGE - CONSTANTS & IMMUTABLES\\n   */\\n\\n  /// @notice address of SplitMain for split distributions & EOA/SC withdrawals\\n  ISplitMain public immutable splitMain;\\n\\n  /**\\n   * MODIFIERS\\n   */\\n\\n  /// @notice Reverts if the sender isn't SplitMain\\n  modifier onlySplitMain() {\\n    if (msg.sender != address(splitMain)) revert Unauthorized();\\n    _;\\n  }\\n\\n  /**\\n   * CONSTRUCTOR\\n   */\\n\\n  constructor() {\\n    splitMain = ISplitMain(msg.sender);\\n  }\\n\\n  /**\\n   * FUNCTIONS - PUBLIC & EXTERNAL\\n   */\\n\\n  /** @notice Sends amount `amount` of ETH in proxy to SplitMain\\n   *  @dev payable reduces gas cost; no vulnerability to accidentally lock\\n   *  ETH introduced since fn call is restricted to SplitMain\\n   *  @param amount Amount to send\\n   */\\n  function sendETHToMain(uint256 amount) external payable onlySplitMain() {\\n    address(splitMain).safeTransferETH(amount);\\n  }\\n\\n  /** @notice Sends amount `amount` of ERC20 `token` in proxy to SplitMain\\n   *  @dev payable reduces gas cost; no vulnerability to accidentally lock\\n   *  ETH introduced since fn call is restricted to SplitMain\\n   *  @param token Token to send\\n   *  @param amount Amount to send\\n   */\\n  function sendERC20ToMain(ERC20 token, uint256 amount)\\n    external\\n    payable\\n    onlySplitMain()\\n  {\\n    token.safeTransfer(address(splitMain), amount);\\n  }\\n}\\n\",\"keccak256\":\"0xefa0f2a152fe5bc66d949ffbfa0419328b26f130856a58b5c4d77bfe887c3564\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interfaces/ISplitMain.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.4;\\n\\nimport {ERC20} from '@rari-capital/solmate/src/tokens/ERC20.sol';\\n\\n/**\\n * @title ISplitMain\\n * @author 0xSplits <will@0xSplits.xyz>\\n */\\ninterface ISplitMain {\\n  /**\\n   * FUNCTIONS\\n   */\\n\\n  function walletImplementation() external returns (address);\\n\\n  function createSplit(\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address controller\\n  ) external returns (address);\\n\\n  function predictImmutableSplitAddress(\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee\\n  ) external view returns (address);\\n\\n  function updateSplit(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee\\n  ) external;\\n\\n  function transferControl(address split, address newController) external;\\n\\n  function cancelControlTransfer(address split) external;\\n\\n  function acceptControl(address split) external;\\n\\n  function makeSplitImmutable(address split) external;\\n\\n  function distributeETH(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function updateAndDistributeETH(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function distributeERC20(\\n    address split,\\n    ERC20 token,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function updateAndDistributeERC20(\\n    address split,\\n    ERC20 token,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function withdraw(\\n    address account,\\n    uint256 withdrawETH,\\n    ERC20[] calldata tokens\\n  ) external;\\n\\n  /**\\n   * EVENTS\\n   */\\n\\n  /** @notice emitted after each successful split creation\\n   *  @param split Address of the created split\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   *  @param controller Controlling address (0x0 if immutable)\\n   */\\n  event CreateSplit(\\n    address indexed split,\\n    address[] accounts,\\n    uint32[] percentAllocations,\\n    uint32 distributorFee,\\n    address controller\\n  );\\n\\n  /** @notice emitted after each successful split update\\n   *  @param split Address of the updated split\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   */\\n  event UpdateSplit(\\n    address indexed split,\\n    address[] accounts,\\n    uint32[] percentAllocations,\\n    uint32 distributorFee\\n  );\\n\\n  /** @notice emitted after each initiated split control transfer\\n   *  @param split Address of the split control transfer was initiated for\\n   *  @param newPotentialController Address of the split's new potential controller\\n   */\\n  event InitiateControlTransfer(\\n    address indexed split,\\n    address indexed newPotentialController\\n  );\\n\\n  /** @notice emitted after each canceled split control transfer\\n   *  @param split Address of the split control transfer was canceled for\\n   */\\n  event CancelControlTransfer(address indexed split);\\n\\n  /** @notice emitted after each successful split control transfer\\n   *  @param split Address of the split control was transferred for\\n   *  @param previousController Address of the split's previous controller\\n   *  @param newController Address of the split's new controller\\n   */\\n  event ControlTransfer(\\n    address indexed split,\\n    address indexed previousController,\\n    address indexed newController\\n  );\\n\\n  /** @notice emitted after each successful ETH balance split\\n   *  @param split Address of the split that distributed its balance\\n   *  @param amount Amount of ETH distributed\\n   *  @param distributorAddress Address to credit distributor fee to\\n   */\\n  event DistributeETH(\\n    address indexed split,\\n    uint256 amount,\\n    address indexed distributorAddress\\n  );\\n\\n  /** @notice emitted after each successful ERC20 balance split\\n   *  @param split Address of the split that distributed its balance\\n   *  @param token Address of ERC20 distributed\\n   *  @param amount Amount of ERC20 distributed\\n   *  @param distributorAddress Address to credit distributor fee to\\n   */\\n  event DistributeERC20(\\n    address indexed split,\\n    ERC20 indexed token,\\n    uint256 amount,\\n    address indexed distributorAddress\\n  );\\n\\n  /** @notice emitted after each successful withdrawal\\n   *  @param account Address that funds were withdrawn to\\n   *  @param ethAmount Amount of ETH withdrawn\\n   *  @param tokens Addresses of ERC20s withdrawn\\n   *  @param tokenAmounts Amounts of corresponding ERC20s withdrawn\\n   */\\n  event Withdrawal(\\n    address indexed account,\\n    uint256 ethAmount,\\n    ERC20[] tokens,\\n    uint256[] tokenAmounts\\n  );\\n}\\n\",\"keccak256\":\"0xe4217bd53761c48e7dad18bd0063b7697689f231dbaec346453877987fb31b74\",\"license\":\"GPL-3.0-or-later\"},\"contracts/libraries/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.4;\\n\\n/// @notice create opcode failed\\nerror CreateError();\\n/// @notice create2 opcode failed\\nerror Create2Error();\\n\\nlibrary Clones {\\n  /**\\n   * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`\\n   * except when someone calls `receive()` and then it emits an event matching\\n   * `SplitWallet.ReceiveETH(indexed address, amount)`\\n   * Inspired by OZ & 0age's minimal clone implementations based on eip 1167 found at\\n   * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.3.0/contracts/proxy/Clones.sol\\n   * and https://medium.com/coinmonks/the-more-minimal-proxy-5756ae08ee48\\n   *\\n   * This function uses the create2 opcode and a `salt` to deterministically deploy\\n   * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n   * the clones cannot be deployed twice at the same address.\\n   *\\n   * init: 0x3d605d80600a3d3981f3\\n   * 3d   returndatasize  0\\n   * 605d push1 0x5d      0x5d 0\\n   * 80   dup1            0x5d 0x5d 0\\n   * 600a push1 0x0a      0x0a 0x5d 0x5d 0\\n   * 3d   returndatasize  0 0x0a 0x5d 0x5d 0\\n   * 39   codecopy        0x5d 0                      destOffset offset length     memory[destOffset:destOffset+length] = address(this).code[offset:offset+length]       copy executing contracts bytecode\\n   * 81   dup2            0 0x5d 0\\n   * f3   return          0                           offset length                return memory[offset:offset+length]                                                   returns from this contract call\\n   *\\n   * contract: 0x36603057343d52307f830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b160203da23d3df35b3d3d3d3d363d3d37363d73bebebebebebebebebebebebebebebebebebebebe5af43d3d93803e605b57fd5bf3\\n   *     0x000     36       calldatasize      cds\\n   *     0x001     6030     push1 0x30        0x30 cds\\n   * ,=< 0x003     57       jumpi\\n   * |   0x004     34       callvalue         cv\\n   * |   0x005     3d       returndatasize    0 cv\\n   * |   0x006     52       mstore\\n   * |   0x007     30       address           addr\\n   * |   0x008     7f830d.. push32 0x830d..   id addr\\n   * |   0x029     6020     push1 0x20        0x20 id addr\\n   * |   0x02b     3d       returndatasize    0 0x20 id addr\\n   * |   0x02c     a2       log2\\n   * |   0x02d     3d       returndatasize    0\\n   * |   0x02e     3d       returndatasize    0 0\\n   * |   0x02f     f3       return\\n   * `-> 0x030     5b       jumpdest\\n   *     0x031     3d       returndatasize    0\\n   *     0x032     3d       returndatasize    0 0\\n   *     0x033     3d       returndatasize    0 0 0\\n   *     0x034     3d       returndatasize    0 0 0 0\\n   *     0x035     36       calldatasize      cds 0 0 0 0\\n   *     0x036     3d       returndatasize    0 cds 0 0 0 0\\n   *     0x037     3d       returndatasize    0 0 cds 0 0 0 0\\n   *     0x038     37       calldatacopy      0 0 0 0\\n   *     0x039     36       calldatasize      cds 0 0 0 0\\n   *     0x03a     3d       returndatasize    0 cds 0 0 0 0\\n   *     0x03b     73bebe.. push20 0xbebe..   0xbebe 0 cds 0 0 0 0\\n   *     0x050     5a       gas               gas 0xbebe 0 cds 0 0 0 0\\n   *     0x051     f4       delegatecall      suc 0 0\\n   *     0x052     3d       returndatasize    rds suc 0 0\\n   *     0x053     3d       returndatasize    rds rds suc 0 0\\n   *     0x054     93       swap4             0 rds suc 0 rds\\n   *     0x055     80       dup1              0 0 rds suc 0 rds\\n   *     0x056     3e       returndatacopy    suc 0 rds\\n   *     0x057     605b     push1 0x5b        0x5b suc 0 rds\\n   * ,=< 0x059     57       jumpi             0 rds\\n   * |   0x05a     fd       revert\\n   * `-> 0x05b     5b       jumpdest          0 rds\\n   *     0x05c     f3       return\\n   *\\n   */\\n  function clone(address implementation) internal returns (address instance) {\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(\\n        ptr,\\n        0x3d605d80600a3d3981f336603057343d52307f00000000000000000000000000\\n      )\\n      mstore(\\n        add(ptr, 0x13),\\n        0x830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b1\\n      )\\n      mstore(\\n        add(ptr, 0x33),\\n        0x60203da23d3df35b3d3d3d3d363d3d37363d7300000000000000000000000000\\n      )\\n      mstore(add(ptr, 0x46), shl(0x60, implementation))\\n      mstore(\\n        add(ptr, 0x5a),\\n        0x5af43d3d93803e605b57fd5bf300000000000000000000000000000000000000\\n      )\\n      instance := create(0, ptr, 0x67)\\n    }\\n    if (instance == address(0)) revert CreateError();\\n  }\\n\\n  function cloneDeterministic(address implementation, bytes32 salt)\\n    internal\\n    returns (address instance)\\n  {\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(\\n        ptr,\\n        0x3d605d80600a3d3981f336603057343d52307f00000000000000000000000000\\n      )\\n      mstore(\\n        add(ptr, 0x13),\\n        0x830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b1\\n      )\\n      mstore(\\n        add(ptr, 0x33),\\n        0x60203da23d3df35b3d3d3d3d363d3d37363d7300000000000000000000000000\\n      )\\n      mstore(add(ptr, 0x46), shl(0x60, implementation))\\n      mstore(\\n        add(ptr, 0x5a),\\n        0x5af43d3d93803e605b57fd5bf300000000000000000000000000000000000000\\n      )\\n      instance := create2(0, ptr, 0x67, salt)\\n    }\\n    if (instance == address(0)) revert Create2Error();\\n  }\\n\\n  /**\\n   * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n   */\\n  function predictDeterministicAddress(\\n    address implementation,\\n    bytes32 salt,\\n    address deployer\\n  ) internal pure returns (address predicted) {\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(\\n        ptr,\\n        0x3d605d80600a3d3981f336603057343d52307f00000000000000000000000000\\n      )\\n      mstore(\\n        add(ptr, 0x13),\\n        0x830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b1\\n      )\\n      mstore(\\n        add(ptr, 0x33),\\n        0x60203da23d3df35b3d3d3d3d363d3d37363d7300000000000000000000000000\\n      )\\n      mstore(add(ptr, 0x46), shl(0x60, implementation))\\n      mstore(\\n        add(ptr, 0x5a),\\n        0x5af43d3d93803e605b57fd5bf3ff000000000000000000000000000000000000\\n      )\\n      mstore(add(ptr, 0x68), shl(0x60, deployer))\\n      mstore(add(ptr, 0x7c), salt)\\n      mstore(add(ptr, 0x9c), keccak256(ptr, 0x67))\\n      predicted := keccak256(add(ptr, 0x67), 0x55)\\n    }\\n  }\\n\\n  /**\\n   * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n   */\\n  function predictDeterministicAddress(address implementation, bytes32 salt)\\n    internal\\n    view\\n    returns (address predicted)\\n  {\\n    return predictDeterministicAddress(implementation, salt, address(this));\\n  }\\n}\\n\",\"keccak256\":\"0xb5dcbb1cc134cf221c67dceb9206d4b4037038bd84539073ec0ad2a365e78f81\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 587,
                "contract": "contracts/SplitMain.sol:SplitMain",
                "label": "ethBalances",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 595,
                "contract": "contracts/SplitMain.sol:SplitMain",
                "label": "erc20Balances",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_contract(ERC20)394,t_mapping(t_address,t_uint256))"
              },
              {
                "astId": 601,
                "contract": "contracts/SplitMain.sol:SplitMain",
                "label": "splits",
                "offset": 0,
                "slot": "2",
                "type": "t_mapping(t_address,t_struct(Split)570_storage)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
              },
              "t_contract(ERC20)394": {
                "encoding": "inplace",
                "label": "contract ERC20",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_struct(Split)570_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct SplitMain.Split)",
                "numberOfBytes": "32",
                "value": "t_struct(Split)570_storage"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_mapping(t_contract(ERC20)394,t_mapping(t_address,t_uint256))": {
                "encoding": "mapping",
                "key": "t_contract(ERC20)394",
                "label": "mapping(contract ERC20 => mapping(address => uint256))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_uint256)"
              },
              "t_struct(Split)570_storage": {
                "encoding": "inplace",
                "label": "struct SplitMain.Split",
                "members": [
                  {
                    "astId": 565,
                    "contract": "contracts/SplitMain.sol:SplitMain",
                    "label": "hash",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_bytes32"
                  },
                  {
                    "astId": 567,
                    "contract": "contracts/SplitMain.sol:SplitMain",
                    "label": "controller",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_address"
                  },
                  {
                    "astId": 569,
                    "contract": "contracts/SplitMain.sol:SplitMain",
                    "label": "newPotentialController",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_address"
                  }
                ],
                "numberOfBytes": "96"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "errors": {
              "Create2Error()": [
                {
                  "notice": "create2 opcode failed"
                }
              ],
              "CreateError()": [
                {
                  "notice": "create opcode failed"
                }
              ],
              "InvalidNewController(address)": [
                {
                  "notice": "Invalid new controlling address `newController` for mutable split"
                }
              ],
              "InvalidSplit__AccountsAndAllocationsMismatch(uint256,uint256)": [
                {
                  "notice": "Array lengths of accounts & percentAllocations don't match (`accountsLength` != `allocationsLength`)"
                }
              ],
              "InvalidSplit__AccountsOutOfOrder(uint256)": [
                {
                  "notice": "Invalid accounts ordering at `index`"
                }
              ],
              "InvalidSplit__AllocationMustBePositive(uint256)": [
                {
                  "notice": "Invalid percentAllocation of zero at `index`"
                }
              ],
              "InvalidSplit__InvalidAllocationsSum(uint32)": [
                {
                  "notice": "Invalid percentAllocations sum `allocationsSum` must equal `PERCENTAGE_SCALE`"
                }
              ],
              "InvalidSplit__InvalidDistributorFee(uint32)": [
                {
                  "notice": "Invalid distributorFee `distributorFee` cannot be greater than 10% (1e5)"
                }
              ],
              "InvalidSplit__InvalidHash(bytes32)": [
                {
                  "notice": "Invalid hash `hash` from split data (accounts, percentAllocations, distributorFee)"
                }
              ],
              "InvalidSplit__TooFewAccounts(uint256)": [
                {
                  "notice": "Invalid number of accounts `accountsLength`, must have at least 2"
                }
              ],
              "Unauthorized(address)": [
                {
                  "notice": "Unauthorized sender `sender`"
                }
              ]
            },
            "events": {
              "CancelControlTransfer(address)": {
                "notice": "emitted after each canceled split control transfer"
              },
              "ControlTransfer(address,address,address)": {
                "notice": "emitted after each successful split control transfer"
              },
              "CreateSplit(address,address[],uint32[],uint32,address)": {
                "notice": "emitted after each successful split creation"
              },
              "DistributeERC20(address,address,uint256,address)": {
                "notice": "emitted after each successful ERC20 balance split"
              },
              "DistributeETH(address,uint256,address)": {
                "notice": "emitted after each successful ETH balance split"
              },
              "InitiateControlTransfer(address,address)": {
                "notice": "emitted after each initiated split control transfer"
              },
              "UpdateSplit(address,address[],uint32[],uint32)": {
                "notice": "emitted after each successful split update"
              },
              "Withdrawal(address,uint256,address[],uint256[])": {
                "notice": "emitted after each successful withdrawal"
              }
            },
            "kind": "user",
            "methods": {
              "PERCENTAGE_SCALE()": {
                "notice": "constant to scale uints into percentages (1e6 == 100%)"
              },
              "acceptControl(address)": {
                "notice": "Accepts transfer of the controlling address of mutable split `split`"
              },
              "cancelControlTransfer(address)": {
                "notice": "Cancels transfer of the controlling address of mutable split `split`"
              },
              "constructor": {
                "notice": "CONSTRUCTOR"
              },
              "createSplit(address[],uint32[],uint32,address)": {
                "notice": "Creates a new split with recipients `accounts` with ownerships `percentAllocations`, a keeper fee for splitting of `distributorFee` and the controlling address `controller`"
              },
              "distributeERC20(address,address,address[],uint32[],uint32,address)": {
                "notice": "Distributes the ERC20 `token` balance for split `split`"
              },
              "distributeETH(address,address[],uint32[],uint32,address)": {
                "notice": "Distributes the ETH balance for split `split`"
              },
              "getController(address)": {
                "notice": "Returns the current controller of split `split`"
              },
              "getERC20Balance(address,address)": {
                "notice": "Returns the ERC20 balance of token `token` for account `account`"
              },
              "getETHBalance(address)": {
                "notice": "Returns the current ETH balance of account `account`"
              },
              "getHash(address)": {
                "notice": "Returns the current hash of split `split`"
              },
              "getNewPotentialController(address)": {
                "notice": "Returns the current newPotentialController of split `split`"
              },
              "makeSplitImmutable(address)": {
                "notice": "Turns mutable split `split` immutable"
              },
              "predictImmutableSplitAddress(address[],uint32[],uint32)": {
                "notice": "Predicts the address for an immutable split created with recipients `accounts` with ownerships `percentAllocations` and a keeper fee for splitting of `distributorFee`"
              },
              "transferControl(address,address)": {
                "notice": "Begins transfer of the controlling address of mutable split `split` to `newController`"
              },
              "updateAndDistributeERC20(address,address,address[],uint32[],uint32,address)": {
                "notice": "Updates & distributes the ERC20 `token` balance for split `split`"
              },
              "updateAndDistributeETH(address,address[],uint32[],uint32,address)": {
                "notice": "Updates & distributes the ETH balance for split `split`"
              },
              "updateSplit(address,address[],uint32[],uint32)": {
                "notice": "Updates an existing split with recipients `accounts` with ownerships `percentAllocations` and a keeper fee for splitting of `distributorFee`"
              },
              "walletImplementation()": {
                "notice": "address of wallet implementation for split proxies"
              },
              "withdraw(address,uint256,address[])": {
                "notice": "Withdraw ETH &/ ERC20 balances for account `account`"
              }
            },
            "notice": "A composable and gas-efficient protocol for deploying splitter contracts.",
            "version": 1
          }
        }
      },
      "contracts/SplitWallet.sol": {
        "SplitWallet": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "ReceiveETH",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "sendERC20ToMain",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "sendETHToMain",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "splitMain",
              "outputs": [
                {
                  "internalType": "contract ISplitMain",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "0xSplits <will@0xSplits.xyz>",
            "details": "`SplitProxy` handles `receive()` itself to avoid the gas cost with `DELEGATECALL`.",
            "events": {
              "ReceiveETH(address,uint256)": {
                "params": {
                  "amount": "Amount of ETH received",
                  "split": "Address of the split that received ETH"
                }
              }
            },
            "kind": "dev",
            "methods": {
              "sendERC20ToMain(address,uint256)": {
                "details": "payable reduces gas cost; no vulnerability to accidentally lock  ETH introduced since fn call is restricted to SplitMain",
                "params": {
                  "amount": "Amount to send",
                  "token": "Token to send"
                }
              },
              "sendETHToMain(uint256)": {
                "details": "payable reduces gas cost; no vulnerability to accidentally lock  ETH introduced since fn call is restricted to SplitMain",
                "params": {
                  "amount": "Amount to send"
                }
              }
            },
            "title": "SplitWallet",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a060405234801561001057600080fd5b5033606081901b60805261035461004c60003960008181604b0152818160bc015281816101080152818161013c015261018601526103546000f3fe6080604052600436106100345760003560e01c80630e769b2b146100395780637c1f3ffe14610089578063ab0ebff41461009e575b600080fd5b34801561004557600080fd5b5061006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61009c6100973660046102d0565b6100b1565b005b61009c6100ac366004610306565b610131565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100f9576040516282b42960e81b815260040160405180910390fd5b61012d6001600160a01b0383167f0000000000000000000000000000000000000000000000000000000000000000836101af565b5050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610179576040516282b42960e81b815260040160405180910390fd5b6101ac6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682610233565b50565b600060405163a9059cbb60e01b81526001600160a01b03841660048201528260248201526000806044836000895af19150506101ea81610289565b61022d5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064015b60405180910390fd5b50505050565b600080600080600085875af19050806102845760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606401610224565b505050565b60003d8261029b57806000803e806000fd5b80602081146102b35780156102c457600092506102c9565b816000803e600051151592506102c9565b600192505b5050919050565b600080604083850312156102e2578182fd5b82356001600160a01b03811681146102f8578283fd5b946020939093013593505050565b600060208284031215610317578081fd5b503591905056fea2646970667358221220def78b294d6b6603231a559c8366ba0d4f86b7f8e62b7e36307ace99c6f117d064736f6c63430008040033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x60 DUP2 SWAP1 SHL PUSH1 0x80 MSTORE PUSH2 0x354 PUSH2 0x4C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x4B ADD MSTORE DUP2 DUP2 PUSH1 0xBC ADD MSTORE DUP2 DUP2 PUSH2 0x108 ADD MSTORE DUP2 DUP2 PUSH2 0x13C ADD MSTORE PUSH2 0x186 ADD MSTORE PUSH2 0x354 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE769B2B EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x7C1F3FFE EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xAB0EBFF4 EQ PUSH2 0x9E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0xB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0xAC CALLDATASIZE PUSH1 0x4 PUSH2 0x306 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH32 0x0 DUP4 PUSH2 0x1AF JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x179 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 PUSH2 0x233 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE DUP3 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 PUSH1 0x44 DUP4 PUSH1 0x0 DUP10 GAS CALL SWAP2 POP POP PUSH2 0x1EA DUP2 PUSH2 0x289 JUMP JUMPDEST PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1514905394D1915497D19052531151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 GAS CALL SWAP1 POP DUP1 PUSH2 0x284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x11551217D514905394D1915497D19052531151 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x224 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 RETURNDATASIZE DUP3 PUSH2 0x29B JUMPI DUP1 PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP2 EQ PUSH2 0x2B3 JUMPI DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x2C9 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD ISZERO ISZERO SWAP3 POP PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2F8 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x317 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF7 DUP12 0x29 0x4D PUSH12 0x6603231A559C8366BA0D4F86 0xB7 0xF8 0xE6 0x2B PUSH31 0x36307ACE99C6F117D064736F6C634300080400330000000000000000000000 ",
              "sourceMap": "566:1700:3:-:0;;;1337:59;;;;;;;;;-1:-1:-1;1380:10:3;1357:34;;;;;;566:1700;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1517:7",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "114:287:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "160:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "169:6:7"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "177:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "162:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "162:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "162:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "135:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "144:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "131:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "131:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "156:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "127:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "127:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "124:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "195:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "221:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "208:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "208:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "199:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "294:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "303:6:7"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "311:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "296:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "296:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "296:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "253:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "264:5:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "279:3:7",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "284:1:7",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "275:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "275:11:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "288:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "271:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "271:19:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "260:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "260:31:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "250:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "250:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "243:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "243:50:7"
                              },
                              "nodeType": "YulIf",
                              "src": "240:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "329:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "339:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "329:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "353:42:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "380:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "391:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "376:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "376:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "363:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "363:32:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "353:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_ERC20_$394t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "72:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "83:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "95:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "103:6:7",
                            "type": ""
                          }
                        ],
                        "src": "14:387:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "476:120:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "522:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "531:6:7"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "539:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "524:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "524:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "524:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "497:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "506:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "493:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "493:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "518:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "489:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "489:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "486:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "557:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "580:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "567:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "567:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "557:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "442:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "453:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "465:6:7",
                            "type": ""
                          }
                        ],
                        "src": "406:190:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "721:102:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "731:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "743:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "754:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "739:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "739:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "731:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "773:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "788:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "804:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "809:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "800:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "800:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "813:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "796:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "796:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "784:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "784:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "766:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "766:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "766:51:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ISplitMain_$2300__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "690:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "701:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "712:4:7",
                            "type": ""
                          }
                        ],
                        "src": "601:222:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1002:165:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1019:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1030:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1012:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1012:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1012:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1053:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1064:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1049:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1049:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1069:2:7",
                                    "type": "",
                                    "value": "15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1042:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1042:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1042:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1092:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1103:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1088:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1088:18:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1108:17:7",
                                    "type": "",
                                    "value": "TRANSFER_FAILED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1081:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1081:45:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1081:45:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1135:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1147:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1158:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1143:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1143:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1135:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "979:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "993:4:7",
                            "type": ""
                          }
                        ],
                        "src": "828:339:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1346:169:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1363:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1374:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1356:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1356:21:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1356:21:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1397:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1408:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1393:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1393:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1413:2:7",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1386:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1386:30:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1386:30:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1436:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1447:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1432:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1432:18:7"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1452:21:7",
                                    "type": "",
                                    "value": "ETH_TRANSFER_FAILED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1425:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1425:49:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1425:49:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1483:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1495:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1506:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1491:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1491:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1483:4:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1323:9:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1337:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1172:343:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_ERC20_$394t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_ISplitMain_$2300__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"ETH_TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "1934": [
                  {
                    "length": 32,
                    "start": 75
                  },
                  {
                    "length": 32,
                    "start": 188
                  },
                  {
                    "length": 32,
                    "start": 264
                  },
                  {
                    "length": 32,
                    "start": 316
                  },
                  {
                    "length": 32,
                    "start": 390
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604052600436106100345760003560e01c80630e769b2b146100395780637c1f3ffe14610089578063ab0ebff41461009e575b600080fd5b34801561004557600080fd5b5061006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61009c6100973660046102d0565b6100b1565b005b61009c6100ac366004610306565b610131565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100f9576040516282b42960e81b815260040160405180910390fd5b61012d6001600160a01b0383167f0000000000000000000000000000000000000000000000000000000000000000836101af565b5050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610179576040516282b42960e81b815260040160405180910390fd5b6101ac6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682610233565b50565b600060405163a9059cbb60e01b81526001600160a01b03841660048201528260248201526000806044836000895af19150506101ea81610289565b61022d5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064015b60405180910390fd5b50505050565b600080600080600085875af19050806102845760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606401610224565b505050565b60003d8261029b57806000803e806000fd5b80602081146102b35780156102c457600092506102c9565b816000803e600051151592506102c9565b600192505b5050919050565b600080604083850312156102e2578182fd5b82356001600160a01b03811681146102f8578283fd5b946020939093013593505050565b600060208284031215610317578081fd5b503591905056fea2646970667358221220def78b294d6b6603231a559c8366ba0d4f86b7f8e62b7e36307ace99c6f117d064736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE769B2B EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x7C1F3FFE EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xAB0EBFF4 EQ PUSH2 0x9E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0xB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0xAC CALLDATASIZE PUSH1 0x4 PUSH2 0x306 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH32 0x0 DUP4 PUSH2 0x1AF JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x179 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 PUSH2 0x233 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE DUP3 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 PUSH1 0x44 DUP4 PUSH1 0x0 DUP10 GAS CALL SWAP2 POP POP PUSH2 0x1EA DUP2 PUSH2 0x289 JUMP JUMPDEST PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1514905394D1915497D19052531151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 GAS CALL SWAP1 POP DUP1 PUSH2 0x284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x11551217D514905394D1915497D19052531151 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x224 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 RETURNDATASIZE DUP3 PUSH2 0x29B JUMPI DUP1 PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP2 EQ PUSH2 0x2B3 JUMPI DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x2C9 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD ISZERO ISZERO SWAP3 POP PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2F8 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x317 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF7 DUP12 0x29 0x4D PUSH12 0x6603231A559C8366BA0D4F86 0xB7 0xF8 0xE6 0x2B PUSH31 0x36307ACE99C6F117D064736F6C634300080400330000000000000000000000 ",
              "sourceMap": "566:1700:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1079:37;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;784:32:7;;;;766:51;;1079:37:3;;;;;754:2:7;1079:37:3;;;2106:158;;;;;;:::i;:::-;;:::i;:::-;;1691:125;;;;;;:::i;:::-;;:::i;2106:158::-;1258:9;-1:-1:-1;;;;;1236:32:3;:10;:32;1232:59;;1277:14;;-1:-1:-1;;;1277:14:3;;;;;;;;;;;1232:59;2213:46:::1;-1:-1:-1::0;;;;;2213:18:3;::::1;2240:9;2252:6:::0;2213:18:::1;:46::i;:::-;2106:158:::0;;:::o;1691:125::-;1258:9;-1:-1:-1;;;;;1236:32:3;:10;:32;1232:59;;1277:14;;-1:-1:-1;;;1277:14:3;;;;;;;;;;;1232:59;1769:42:::1;1777:9;-1:-1:-1::0;;;;;1769:34:3::1;1804:6:::0;1769:34:::1;:42::i;:::-;1691:125:::0;:::o;2503:1043:1:-;2745:4;2739:11;-1:-1:-1;;;2836:93:1;;-1:-1:-1;;;;;3013:51:1;;3009:1;2986:25;;2979:86;3146:2;3123:26;;3116:42;;;2615:15;;;;3438:2;2739:11;2615:15;3409:5;3402;3397:50;3383:64;;;3475:44;3508:10;3475:32;:44::i;:::-;3467:72;;;;-1:-1:-1;;;3467:72:1;;1030:2:7;3467:72:1;;;1012:21:7;1069:2;1049:18;;;1042:30;-1:-1:-1;;;1088:18:7;;;1081:45;1143:18;;3467:72:1;;;;;;;;;2503:1043;;;;:::o;784:305::-;856:15;1018:1;1015;1012;1009;1001:6;997:2;990:5;985:35;971:49;;1048:10;1040:42;;;;-1:-1:-1;;;1040:42:1;;1374:2:7;1040:42:1;;;1356:21:7;1413:2;1393:18;;;1386:30;-1:-1:-1;;;1432:18:7;;;1425:49;1491:18;;1040:42:1;1346:169:7;1040:42:1;784:305;;;:::o;4786:1041::-;4867:12;4989:16;5066:10;5056:2;;5173:14;5170:1;5167;5152:36;5265:14;5262:1;5255:25;5056:2;5315:14;5347:2;5342:242;;;;5597:96;;;;5796:1;5785:12;;5308:503;;5342:242;5442:14;5439:1;5436;5421:36;5566:1;5560:8;5553:16;5546:24;5535:35;;5342:242;;5597:96;5678:1;5667:12;;5308:503;;;4900:921;;;:::o;14:387:7:-;95:6;103;156:2;144:9;135:7;131:23;127:32;124:2;;;177:6;169;162:22;124:2;208:23;;-1:-1:-1;;;;;260:31:7;;250:42;;240:2;;311:6;303;296:22;240:2;339:5;391:2;376:18;;;;363:32;;-1:-1:-1;;;114:287:7:o;406:190::-;465:6;518:2;506:9;497:7;493:23;489:32;486:2;;;539:6;531;524:22;486:2;-1:-1:-1;567:23:7;;476:120;-1:-1:-1;476:120:7:o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "170400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "sendERC20ToMain(address,uint256)": "infinite",
                "sendETHToMain(uint256)": "infinite",
                "splitMain()": "infinite"
              }
            },
            "methodIdentifiers": {
              "sendERC20ToMain(address,uint256)": "7c1f3ffe",
              "sendETHToMain(uint256)": "ab0ebff4",
              "splitMain()": "0e769b2b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceiveETH\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendERC20ToMain\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendETHToMain\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"splitMain\",\"outputs\":[{\"internalType\":\"contract ISplitMain\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0xSplits <will@0xSplits.xyz>\",\"details\":\"`SplitProxy` handles `receive()` itself to avoid the gas cost with `DELEGATECALL`.\",\"events\":{\"ReceiveETH(address,uint256)\":{\"params\":{\"amount\":\"Amount of ETH received\",\"split\":\"Address of the split that received ETH\"}}},\"kind\":\"dev\",\"methods\":{\"sendERC20ToMain(address,uint256)\":{\"details\":\"payable reduces gas cost; no vulnerability to accidentally lock  ETH introduced since fn call is restricted to SplitMain\",\"params\":{\"amount\":\"Amount to send\",\"token\":\"Token to send\"}},\"sendETHToMain(uint256)\":{\"details\":\"payable reduces gas cost; no vulnerability to accidentally lock  ETH introduced since fn call is restricted to SplitMain\",\"params\":{\"amount\":\"Amount to send\"}}},\"title\":\"SplitWallet\",\"version\":1},\"userdoc\":{\"errors\":{\"Unauthorized()\":[{\"notice\":\"Unauthorized sender\"}]},\"events\":{\"ReceiveETH(address,uint256)\":{\"notice\":\"emitted after each successful ETH transfer to proxy\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"CONSTRUCTOR\"},\"sendERC20ToMain(address,uint256)\":{\"notice\":\"Sends amount `amount` of ERC20 `token` in proxy to SplitMain\"},\"sendETHToMain(uint256)\":{\"notice\":\"Sends amount `amount` of ETH in proxy to SplitMain\"},\"splitMain()\":{\"notice\":\"address of SplitMain for split distributions & EOA/SC withdrawals\"}},\"notice\":\"The implementation logic for `SplitProxy`.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SplitWallet.sol\":\"SplitWallet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*///////////////////////////////////////////////////////////////\\n                                  EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    bytes32 public constant PERMIT_TYPEHASH =\\n        keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            bytes32 digest = keccak256(\\n                abi.encodePacked(\\n                    \\\"\\\\x19\\\\x01\\\",\\n                    DOMAIN_SEPARATOR(),\\n                    keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\n                )\\n            );\\n\\n            address recoveredAddress = ecrecover(digest, v, r, s);\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\"},\"@rari-capital/solmate/src/utils/SafeTransferLib.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\nimport {ERC20} from \\\"../tokens/ERC20.sol\\\";\\n\\n/// @notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol)\\n/// @author Modified from Gnosis (https://github.com/gnosis/gp-v2-contracts/blob/main/src/contracts/libraries/GPv2SafeERC20.sol)\\n/// @dev Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.\\nlibrary SafeTransferLib {\\n    /*///////////////////////////////////////////////////////////////\\n                            ETH OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Transfer the ETH and store if it succeeded or not.\\n            callStatus := call(gas(), to, amount, 0, 0, 0, 0)\\n        }\\n\\n        require(callStatus, \\\"ETH_TRANSFER_FAILED\\\");\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                           ERC20 OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function safeTransferFrom(\\n        ERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Get a pointer to some free memory.\\n            let freeMemoryPointer := mload(0x40)\\n\\n            // Write the abi-encoded calldata to memory piece by piece:\\n            mstore(freeMemoryPointer, 0x23b872dd00000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\\n            mstore(add(freeMemoryPointer, 4), and(from, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"from\\\" argument.\\n            mstore(add(freeMemoryPointer, 36), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"to\\\" argument.\\n            mstore(add(freeMemoryPointer, 68), amount) // Finally append the \\\"amount\\\" argument. No mask as it's a full 32 byte value.\\n\\n            // Call the token and store if it succeeded or not.\\n            // We use 100 because the calldata length is 4 + 32 * 3.\\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 100, 0, 0)\\n        }\\n\\n        require(didLastOptionalReturnCallSucceed(callStatus), \\\"TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function safeTransfer(\\n        ERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Get a pointer to some free memory.\\n            let freeMemoryPointer := mload(0x40)\\n\\n            // Write the abi-encoded calldata to memory piece by piece:\\n            mstore(freeMemoryPointer, 0xa9059cbb00000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\\n            mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"to\\\" argument.\\n            mstore(add(freeMemoryPointer, 36), amount) // Finally append the \\\"amount\\\" argument. No mask as it's a full 32 byte value.\\n\\n            // Call the token and store if it succeeded or not.\\n            // We use 68 because the calldata length is 4 + 32 * 2.\\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 68, 0, 0)\\n        }\\n\\n        require(didLastOptionalReturnCallSucceed(callStatus), \\\"TRANSFER_FAILED\\\");\\n    }\\n\\n    function safeApprove(\\n        ERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Get a pointer to some free memory.\\n            let freeMemoryPointer := mload(0x40)\\n\\n            // Write the abi-encoded calldata to memory piece by piece:\\n            mstore(freeMemoryPointer, 0x095ea7b300000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\\n            mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"to\\\" argument.\\n            mstore(add(freeMemoryPointer, 36), amount) // Finally append the \\\"amount\\\" argument. No mask as it's a full 32 byte value.\\n\\n            // Call the token and store if it succeeded or not.\\n            // We use 68 because the calldata length is 4 + 32 * 2.\\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 68, 0, 0)\\n        }\\n\\n        require(didLastOptionalReturnCallSucceed(callStatus), \\\"APPROVE_FAILED\\\");\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                         INTERNAL HELPER LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function didLastOptionalReturnCallSucceed(bool callStatus) private pure returns (bool success) {\\n        assembly {\\n            // Get how many bytes the call returned.\\n            let returnDataSize := returndatasize()\\n\\n            // If the call reverted:\\n            if iszero(callStatus) {\\n                // Copy the revert message into memory.\\n                returndatacopy(0, 0, returnDataSize)\\n\\n                // Revert with the same message.\\n                revert(0, returnDataSize)\\n            }\\n\\n            switch returnDataSize\\n            case 32 {\\n                // Copy the return data into memory.\\n                returndatacopy(0, 0, returnDataSize)\\n\\n                // Set success to whether it returned true.\\n                success := iszero(iszero(mload(0)))\\n            }\\n            case 0 {\\n                // There was no return data.\\n                success := 1\\n            }\\n            default {\\n                // It returned some malformed input.\\n                success := 0\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcc39d0f5693925ea1e8c517f7cc24211a9899c83a57e62d806180cdb056b6b75\",\"license\":\"AGPL-3.0-only\"},\"contracts/SplitWallet.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.4;\\n\\nimport {ISplitMain} from './interfaces/ISplitMain.sol';\\nimport {ERC20} from '@rari-capital/solmate/src/tokens/ERC20.sol';\\nimport {SafeTransferLib} from '@rari-capital/solmate/src/utils/SafeTransferLib.sol';\\n\\n/**\\n * ERRORS\\n */\\n\\n/// @notice Unauthorized sender\\nerror Unauthorized();\\n\\n/**\\n * @title SplitWallet\\n * @author 0xSplits <will@0xSplits.xyz>\\n * @notice The implementation logic for `SplitProxy`.\\n * @dev `SplitProxy` handles `receive()` itself to avoid the gas cost with `DELEGATECALL`.\\n */\\ncontract SplitWallet {\\n  using SafeTransferLib for address;\\n  using SafeTransferLib for ERC20;\\n\\n  /**\\n   * EVENTS\\n   */\\n\\n  /** @notice emitted after each successful ETH transfer to proxy\\n   *  @param split Address of the split that received ETH\\n   *  @param amount Amount of ETH received\\n   */\\n  event ReceiveETH(address indexed split, uint256 amount);\\n\\n  /**\\n   * STORAGE\\n   */\\n\\n  /**\\n   * STORAGE - CONSTANTS & IMMUTABLES\\n   */\\n\\n  /// @notice address of SplitMain for split distributions & EOA/SC withdrawals\\n  ISplitMain public immutable splitMain;\\n\\n  /**\\n   * MODIFIERS\\n   */\\n\\n  /// @notice Reverts if the sender isn't SplitMain\\n  modifier onlySplitMain() {\\n    if (msg.sender != address(splitMain)) revert Unauthorized();\\n    _;\\n  }\\n\\n  /**\\n   * CONSTRUCTOR\\n   */\\n\\n  constructor() {\\n    splitMain = ISplitMain(msg.sender);\\n  }\\n\\n  /**\\n   * FUNCTIONS - PUBLIC & EXTERNAL\\n   */\\n\\n  /** @notice Sends amount `amount` of ETH in proxy to SplitMain\\n   *  @dev payable reduces gas cost; no vulnerability to accidentally lock\\n   *  ETH introduced since fn call is restricted to SplitMain\\n   *  @param amount Amount to send\\n   */\\n  function sendETHToMain(uint256 amount) external payable onlySplitMain() {\\n    address(splitMain).safeTransferETH(amount);\\n  }\\n\\n  /** @notice Sends amount `amount` of ERC20 `token` in proxy to SplitMain\\n   *  @dev payable reduces gas cost; no vulnerability to accidentally lock\\n   *  ETH introduced since fn call is restricted to SplitMain\\n   *  @param token Token to send\\n   *  @param amount Amount to send\\n   */\\n  function sendERC20ToMain(ERC20 token, uint256 amount)\\n    external\\n    payable\\n    onlySplitMain()\\n  {\\n    token.safeTransfer(address(splitMain), amount);\\n  }\\n}\\n\",\"keccak256\":\"0xefa0f2a152fe5bc66d949ffbfa0419328b26f130856a58b5c4d77bfe887c3564\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interfaces/ISplitMain.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.4;\\n\\nimport {ERC20} from '@rari-capital/solmate/src/tokens/ERC20.sol';\\n\\n/**\\n * @title ISplitMain\\n * @author 0xSplits <will@0xSplits.xyz>\\n */\\ninterface ISplitMain {\\n  /**\\n   * FUNCTIONS\\n   */\\n\\n  function walletImplementation() external returns (address);\\n\\n  function createSplit(\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address controller\\n  ) external returns (address);\\n\\n  function predictImmutableSplitAddress(\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee\\n  ) external view returns (address);\\n\\n  function updateSplit(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee\\n  ) external;\\n\\n  function transferControl(address split, address newController) external;\\n\\n  function cancelControlTransfer(address split) external;\\n\\n  function acceptControl(address split) external;\\n\\n  function makeSplitImmutable(address split) external;\\n\\n  function distributeETH(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function updateAndDistributeETH(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function distributeERC20(\\n    address split,\\n    ERC20 token,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function updateAndDistributeERC20(\\n    address split,\\n    ERC20 token,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function withdraw(\\n    address account,\\n    uint256 withdrawETH,\\n    ERC20[] calldata tokens\\n  ) external;\\n\\n  /**\\n   * EVENTS\\n   */\\n\\n  /** @notice emitted after each successful split creation\\n   *  @param split Address of the created split\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   *  @param controller Controlling address (0x0 if immutable)\\n   */\\n  event CreateSplit(\\n    address indexed split,\\n    address[] accounts,\\n    uint32[] percentAllocations,\\n    uint32 distributorFee,\\n    address controller\\n  );\\n\\n  /** @notice emitted after each successful split update\\n   *  @param split Address of the updated split\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   */\\n  event UpdateSplit(\\n    address indexed split,\\n    address[] accounts,\\n    uint32[] percentAllocations,\\n    uint32 distributorFee\\n  );\\n\\n  /** @notice emitted after each initiated split control transfer\\n   *  @param split Address of the split control transfer was initiated for\\n   *  @param newPotentialController Address of the split's new potential controller\\n   */\\n  event InitiateControlTransfer(\\n    address indexed split,\\n    address indexed newPotentialController\\n  );\\n\\n  /** @notice emitted after each canceled split control transfer\\n   *  @param split Address of the split control transfer was canceled for\\n   */\\n  event CancelControlTransfer(address indexed split);\\n\\n  /** @notice emitted after each successful split control transfer\\n   *  @param split Address of the split control was transferred for\\n   *  @param previousController Address of the split's previous controller\\n   *  @param newController Address of the split's new controller\\n   */\\n  event ControlTransfer(\\n    address indexed split,\\n    address indexed previousController,\\n    address indexed newController\\n  );\\n\\n  /** @notice emitted after each successful ETH balance split\\n   *  @param split Address of the split that distributed its balance\\n   *  @param amount Amount of ETH distributed\\n   *  @param distributorAddress Address to credit distributor fee to\\n   */\\n  event DistributeETH(\\n    address indexed split,\\n    uint256 amount,\\n    address indexed distributorAddress\\n  );\\n\\n  /** @notice emitted after each successful ERC20 balance split\\n   *  @param split Address of the split that distributed its balance\\n   *  @param token Address of ERC20 distributed\\n   *  @param amount Amount of ERC20 distributed\\n   *  @param distributorAddress Address to credit distributor fee to\\n   */\\n  event DistributeERC20(\\n    address indexed split,\\n    ERC20 indexed token,\\n    uint256 amount,\\n    address indexed distributorAddress\\n  );\\n\\n  /** @notice emitted after each successful withdrawal\\n   *  @param account Address that funds were withdrawn to\\n   *  @param ethAmount Amount of ETH withdrawn\\n   *  @param tokens Addresses of ERC20s withdrawn\\n   *  @param tokenAmounts Amounts of corresponding ERC20s withdrawn\\n   */\\n  event Withdrawal(\\n    address indexed account,\\n    uint256 ethAmount,\\n    ERC20[] tokens,\\n    uint256[] tokenAmounts\\n  );\\n}\\n\",\"keccak256\":\"0xe4217bd53761c48e7dad18bd0063b7697689f231dbaec346453877987fb31b74\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "errors": {
              "Unauthorized()": [
                {
                  "notice": "Unauthorized sender"
                }
              ]
            },
            "events": {
              "ReceiveETH(address,uint256)": {
                "notice": "emitted after each successful ETH transfer to proxy"
              }
            },
            "kind": "user",
            "methods": {
              "constructor": {
                "notice": "CONSTRUCTOR"
              },
              "sendERC20ToMain(address,uint256)": {
                "notice": "Sends amount `amount` of ERC20 `token` in proxy to SplitMain"
              },
              "sendETHToMain(uint256)": {
                "notice": "Sends amount `amount` of ETH in proxy to SplitMain"
              },
              "splitMain()": {
                "notice": "address of SplitMain for split distributions & EOA/SC withdrawals"
              }
            },
            "notice": "The implementation logic for `SplitProxy`.",
            "version": 1
          }
        }
      },
      "contracts/TestInternalTxn.sol": {
        "TestInternalTxn": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "controller",
                  "type": "address"
                }
              ],
              "name": "create",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                }
              ],
              "name": "update",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506104b2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632f079a0f1461003b578063f5f0fa7714610050575b600080fd5b61004e610049366004610221565b61007f565b005b61006361005e3660046102b0565b6100fa565b6040516001600160a01b03909116815260200160405180910390f35b604051637677856760e11b8152732ed6c4b5da6378c7897ac67ba9e43102feb694ee9063ecef0ace906100c0908990899089908990899089906004016103c1565b600060405180830381600087803b1580156100da57600080fd5b505af11580156100ee573d6000803e3d6000fd5b50505050505050505050565b604051633b00fbc160e11b8152600090732ed6c4b5da6378c7897ac67ba9e43102feb694ee90637601f7829061013e908a908a908a908a908a908a90600401610413565b602060405180830381600087803b15801561015857600080fd5b505af115801561016c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019091906101fe565b979650505050505050565b60008083601f8401126101ac578182fd5b50813567ffffffffffffffff8111156101c3578182fd5b6020830191508360208260051b85010111156101de57600080fd5b9250929050565b803563ffffffff811681146101f957600080fd5b919050565b60006020828403121561020f578081fd5b815161021a81610464565b9392505050565b60008060008060008060808789031215610239578182fd5b863561024481610464565b9550602087013567ffffffffffffffff80821115610260578384fd5b61026c8a838b0161019b565b90975095506040890135915080821115610284578384fd5b5061029189828a0161019b565b90945092506102a49050606088016101e5565b90509295509295509295565b600080600080600080608087890312156102c8578182fd5b863567ffffffffffffffff808211156102df578384fd5b6102eb8a838b0161019b565b90985096506020890135915080821115610303578384fd5b5061031089828a0161019b565b90955093506103239050604088016101e5565b9150606087013561033381610464565b809150509295509295509295565b81835260006020808501945082825b8581101561037e57813561036381610464565b6001600160a01b031687529582019590820190600101610350565b509495945050505050565b81835260006020808501945082825b8581101561037e5763ffffffff6103ae836101e5565b1687529582019590820190600101610398565b6001600160a01b03871681526080602082018190526000906103e69083018789610341565b82810360408401526103f9818688610389565b91505063ffffffff83166060830152979650505050505050565b60808152600061042760808301888a610341565b828103602084015261043a818789610389565b63ffffffff95909516604084015250506001600160a01b0391909116606090910152949350505050565b6001600160a01b038116811461047957600080fd5b5056fea264697066735822122038fd5e3c850ff85fe66017e025dc40a934afcba79159a5fae420fe6a4d9c972164736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B2 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2F079A0F EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF5F0FA77 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x221 JUMP JUMPDEST PUSH2 0x7F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x76778567 PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0x2ED6C4B5DA6378C7897AC67BA9E43102FEB694EE SWAP1 PUSH4 0xECEF0ACE SWAP1 PUSH2 0xC0 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3B00FBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x2ED6C4B5DA6378C7897AC67BA9E43102FEB694EE SWAP1 PUSH4 0x7601F782 SWAP1 PUSH2 0x13E SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x413 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1FE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1AC JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x21A DUP2 PUSH2 0x464 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x239 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x244 DUP2 PUSH2 0x464 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x260 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x26C DUP11 DUP4 DUP12 ADD PUSH2 0x19B JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x284 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x291 DUP10 DUP3 DUP11 ADD PUSH2 0x19B JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x2A4 SWAP1 POP PUSH1 0x60 DUP9 ADD PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2C8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2DF JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2EB DUP11 DUP4 DUP12 ADD PUSH2 0x19B JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x303 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x310 DUP10 DUP3 DUP11 ADD PUSH2 0x19B JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x323 SWAP1 POP PUSH1 0x40 DUP9 ADD PUSH2 0x1E5 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x333 DUP2 PUSH2 0x464 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x37E JUMPI DUP2 CALLDATALOAD PUSH2 0x363 DUP2 PUSH2 0x464 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x350 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH4 0xFFFFFFFF PUSH2 0x3AE DUP4 PUSH2 0x1E5 JUMP JUMPDEST AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x398 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3E6 SWAP1 DUP4 ADD DUP8 DUP10 PUSH2 0x341 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x3F9 DUP2 DUP7 DUP9 PUSH2 0x389 JUMP JUMPDEST SWAP2 POP POP PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x427 PUSH1 0x80 DUP4 ADD DUP9 DUP11 PUSH2 0x341 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x43A DUP2 DUP8 DUP10 PUSH2 0x389 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE REVERT 0x5E EXTCODECOPY DUP6 0xF 0xF8 0x5F 0xE6 PUSH1 0x17 0xE0 0x25 0xDC BLOCKHASH 0xA9 CALLVALUE 0xAF 0xCB 0xA7 SWAP2 MSIZE 0xA5 STATICCALL 0xE4 KECCAK256 INVALID PUSH11 0x4D9C972164736F6C634300 ADDMOD DIV STOP CALLER ",
              "sourceMap": "134:701:4:-:0;;;258:16;;;;;;;;;;134:701;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:5603:7",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "98:311:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "147:30:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "arrayPos",
                                          "nodeType": "YulIdentifier",
                                          "src": "156:8:7"
                                        },
                                        {
                                          "name": "arrayPos",
                                          "nodeType": "YulIdentifier",
                                          "src": "166:8:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "149:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "149:26:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "149:26:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "126:6:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "134:4:7",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "122:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "122:17:7"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "141:3:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "118:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "118:27:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:35:7"
                              },
                              "nodeType": "YulIf",
                              "src": "108:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "186:30:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "209:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "196:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "196:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "186:6:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "259:30:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "arrayPos",
                                          "nodeType": "YulIdentifier",
                                          "src": "268:8:7"
                                        },
                                        {
                                          "name": "arrayPos",
                                          "nodeType": "YulIdentifier",
                                          "src": "278:8:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "261:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "261:26:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "261:26:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "231:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "239:18:7",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "228:30:7"
                              },
                              "nodeType": "YulIf",
                              "src": "225:2:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "298:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "314:6:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "322:4:7",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "310:17:7"
                              },
                              "variableNames": [
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "298:8:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "387:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "396:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "399:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "389:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "389:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "389:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "350:6:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "362:1:7",
                                                "type": "",
                                                "value": "5"
                                              },
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "365:6:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "358:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "358:14:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "346:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "346:27:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "375:4:7",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "342:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "342:38:7"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "382:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "339:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "339:47:7"
                              },
                              "nodeType": "YulIf",
                              "src": "336:2:7"
                            }
                          ]
                        },
                        "name": "abi_decode_array_address_dyn_calldata",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "61:6:7",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "69:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulTypedName",
                            "src": "77:8:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "87:6:7",
                            "type": ""
                          }
                        ],
                        "src": "14:395:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "462:115:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "472:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "494:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "481:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "481:20:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "472:5:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "555:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "564:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "567:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "557:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "557:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "557:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "523:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "534:5:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "541:10:7",
                                            "type": "",
                                            "value": "0xffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "530:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "530:22:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "520:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "520:33:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "513:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "513:41:7"
                              },
                              "nodeType": "YulIf",
                              "src": "510:2:7"
                            }
                          ]
                        },
                        "name": "abi_decode_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "441:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "452:5:7",
                            "type": ""
                          }
                        ],
                        "src": "414:163:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "663:180:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "709:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "718:6:7"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "726:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "711:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "711:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "711:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "684:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "693:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "680:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "680:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "705:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "676:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "676:32:7"
                              },
                              "nodeType": "YulIf",
                              "src": "673:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "744:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "763:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "757:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "757:16:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "748:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "807:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "782:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "782:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "782:31:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "822:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "832:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "822:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "629:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "640:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "652:6:7",
                            "type": ""
                          }
                        ],
                        "src": "582:261:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1037:821:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1084:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "1093:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "1101:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1086:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1086:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1086:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1058:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1067:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1054:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1054:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1079:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1050:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1050:33:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1047:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1119:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1145:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1132:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1132:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1123:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1189:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1164:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1164:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1164:31:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1204:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1214:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1204:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1228:46:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1259:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1270:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1255:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1255:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1242:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1242:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1232:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1283:28:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1293:18:7",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1287:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1338:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "1347:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "1355:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1340:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1340:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1340:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1326:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1334:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1323:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1323:14:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1320:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1373:96:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1441:9:7"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1452:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1437:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1437:22:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1461:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "1399:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1399:70:7"
                              },
                              "variables": [
                                {
                                  "name": "value1_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1377:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1387:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1478:18:7",
                              "value": {
                                "name": "value1_1",
                                "nodeType": "YulIdentifier",
                                "src": "1488:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1478:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1505:18:7",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "1515:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1505:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1532:48:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1565:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1576:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1561:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1561:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1548:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1548:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1536:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1609:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "1618:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "1626:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1611:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1611:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1611:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1595:8:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1605:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1592:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1592:16:7"
                              },
                              "nodeType": "YulIf",
                              "src": "1589:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1644:98:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1712:9:7"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1723:8:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1708:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1708:24:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1734:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "1670:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1670:72:7"
                              },
                              "variables": [
                                {
                                  "name": "value3_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1648:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value4_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1658:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1751:18:7",
                              "value": {
                                "name": "value3_1",
                                "nodeType": "YulIdentifier",
                                "src": "1761:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1751:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1778:18:7",
                              "value": {
                                "name": "value4_1",
                                "nodeType": "YulIdentifier",
                                "src": "1788:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "1778:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1805:47:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1837:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1848:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1833:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1833:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "1815:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1815:37:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "1805:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptrt_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "963:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "974:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "986:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "994:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1002:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1010:6:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "1018:6:7",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "1026:6:7",
                            "type": ""
                          }
                        ],
                        "src": "848:1010:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2052:821:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2099:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2108:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2116:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2101:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2101:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2101:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2073:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2082:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2069:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2069:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2094:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2065:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2065:33:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2062:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2134:37:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2161:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2148:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2148:23:7"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "2138:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2180:28:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2190:18:7",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2184:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2235:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2244:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2252:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2237:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2237:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2237:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2223:6:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2231:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2220:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2220:14:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2217:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2270:96:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2338:9:7"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2349:6:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2334:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2334:22:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2358:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "2296:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2296:70:7"
                              },
                              "variables": [
                                {
                                  "name": "value0_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2274:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value1_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2284:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2375:18:7",
                              "value": {
                                "name": "value0_1",
                                "nodeType": "YulIdentifier",
                                "src": "2385:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2375:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2402:18:7",
                              "value": {
                                "name": "value1_1",
                                "nodeType": "YulIdentifier",
                                "src": "2412:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2402:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2429:48:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2462:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2473:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2458:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2458:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2445:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2445:32:7"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2433:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2506:26:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2515:6:7"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2523:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2508:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2508:22:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2508:22:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2492:8:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2502:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2489:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2489:16:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2486:2:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2541:98:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2609:9:7"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2620:8:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2605:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2605:24:7"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2631:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "2567:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2567:72:7"
                              },
                              "variables": [
                                {
                                  "name": "value2_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2545:8:7",
                                  "type": ""
                                },
                                {
                                  "name": "value3_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2555:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2648:18:7",
                              "value": {
                                "name": "value2_1",
                                "nodeType": "YulIdentifier",
                                "src": "2658:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2648:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2675:18:7",
                              "value": {
                                "name": "value3_1",
                                "nodeType": "YulIdentifier",
                                "src": "2685:8:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2675:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2702:47:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2734:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2745:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2730:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2730:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "2712:17:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2712:37:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2702:6:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2758:45:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2788:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2799:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2784:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2784:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2771:12:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2771:32:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2762:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2837:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2812:24:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2812:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2812:31:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2852:15:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2862:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "2852:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptrt_uint32t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1978:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1989:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2001:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2009:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2017:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2025:6:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "2033:6:7",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "2041:6:7",
                            "type": ""
                          }
                        ],
                        "src": "1863:1010:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2956:446:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2973:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2978:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2966:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2966:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2966:19:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2994:14:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3004:4:7",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2998:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3017:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3028:3:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3033:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3024:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3024:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3017:3:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3045:19:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3059:5:7"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "3049:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3073:12:7",
                              "value": {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "3082:3:7"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "3077:1:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3143:234:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "3157:35:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3185:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "3172:12:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3172:20:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "value_1",
                                        "nodeType": "YulTypedName",
                                        "src": "3161:7:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "3230:7:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "validator_revert_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "3205:24:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3205:33:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3205:33:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "3258:3:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "value_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "3267:7:7"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "3284:3:7",
                                                      "type": "",
                                                      "value": "160"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "3289:1:7",
                                                      "type": "",
                                                      "value": "1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3280:3:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "3280:11:7"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3293:1:7",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "3276:3:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3276:19:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "3263:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3263:33:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3251:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3251:46:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3251:46:7"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3310:19:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "3321:3:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "3326:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3317:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3317:12:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3310:3:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3342:25:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3356:6:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "3364:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3352:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3352:15:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3342:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "3105:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3108:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3102:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3102:13:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "3116:18:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3118:14:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3127:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3130:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3123:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3123:9:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "3118:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "3098:3:7",
                                "statements": []
                              },
                              "src": "3094:283:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3386:10:7",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3393:3:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3386:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_array_address_dyn_calldata",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2925:5:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2932:6:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2940:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2948:3:7",
                            "type": ""
                          }
                        ],
                        "src": "2878:524:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3484:361:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3501:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3506:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3494:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3494:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3494:19:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3522:14:7",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3532:4:7",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3526:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3545:19:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3556:3:7"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3561:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3552:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3552:12:7"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3545:3:7"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3573:19:7",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3587:5:7"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "3577:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3601:12:7",
                              "value": {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "3610:3:7"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "3605:1:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3671:149:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "3692:3:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "srcPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3719:6:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "abi_decode_uint32",
                                                "nodeType": "YulIdentifier",
                                                "src": "3701:17:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3701:25:7"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3728:10:7",
                                              "type": "",
                                              "value": "0xffffffff"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "3697:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3697:42:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3685:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3685:55:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3685:55:7"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3753:19:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "3764:3:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "3769:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3760:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3760:12:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3753:3:7"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3785:25:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3799:6:7"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "3807:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3795:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3795:15:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3785:6:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "3633:1:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3636:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3630:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3630:13:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "3644:18:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3646:14:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3655:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3658:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3651:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3651:9:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "3646:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "3626:3:7",
                                "statements": []
                              },
                              "src": "3622:198:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3829:10:7",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3836:3:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3829:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_array_uint32_dyn_calldata",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3453:5:7",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3460:6:7",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3468:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3476:3:7",
                            "type": ""
                          }
                        ],
                        "src": "3407:438:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3951:102:7",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3961:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3973:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3984:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3969:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3969:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3961:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4003:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4018:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4034:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4039:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "4030:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4030:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4043:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "4026:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4026:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4014:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4014:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3996:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3996:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3996:51:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3920:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3931:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3942:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3850:203:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4359:400:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4376:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4391:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4407:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4412:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "4403:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4403:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4416:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "4399:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4399:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4387:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4387:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4369:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4369:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4369:51:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4440:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4451:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4436:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4436:18:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4456:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4429:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4429:31:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4429:31:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4469:88:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4521:6:7"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4529:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4541:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4552:3:7",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4537:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4537:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "4483:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4483:74:7"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4473:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4577:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4588:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4573:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4573:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4597:6:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4605:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4593:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4593:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4566:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4566:50:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4566:50:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4625:68:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "4670:6:7"
                                  },
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "4678:6:7"
                                  },
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4686:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_array_uint32_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "4633:36:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4633:60:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4625:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4713:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4724:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4709:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4709:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value5",
                                        "nodeType": "YulIdentifier",
                                        "src": "4733:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4741:10:7",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4729:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4729:23:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4702:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4702:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4702:51:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint32_$dyn_calldata_ptr_t_uint32__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4288:9:7",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "4299:6:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "4307:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "4315:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4323:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4331:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4339:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4350:4:7",
                            "type": ""
                          }
                        ],
                        "src": "4058:701:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5065:400:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5082:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5093:3:7",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5075:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5075:22:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5075:22:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5106:88:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5158:6:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5166:6:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5178:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5189:3:7",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5174:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5174:19:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_array_address_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "5120:37:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5120:74:7"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5110:6:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5214:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5225:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5210:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5210:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5234:6:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5242:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5230:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5230:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5203:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5203:50:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5203:50:7"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5262:68:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5307:6:7"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5315:6:7"
                                  },
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5323:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_array_uint32_dyn_calldata",
                                  "nodeType": "YulIdentifier",
                                  "src": "5270:36:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5270:60:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5262:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5350:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5361:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5346:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5346:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "5370:6:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5378:10:7",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5366:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5366:23:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5339:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5339:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5339:51:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5410:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5421:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5406:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5406:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value5",
                                        "nodeType": "YulIdentifier",
                                        "src": "5430:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5446:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5451:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "5442:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5442:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5455:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "5438:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5438:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5426:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5426:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5399:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5399:60:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5399:60:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint32_$dyn_calldata_ptr_t_uint32_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint32_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4994:9:7",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "5005:6:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "5013:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "5021:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5029:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5037:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5045:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5056:4:7",
                            "type": ""
                          }
                        ],
                        "src": "4764:701:7"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5515:86:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5579:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5588:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5591:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5581:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5581:12:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5581:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5538:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5549:5:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "5564:3:7",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "5569:1:7",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5560:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "5560:11:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5573:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "5556:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5556:19:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "5545:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5545:31:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "5535:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5535:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5528:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5528:50:7"
                              },
                              "nodeType": "YulIf",
                              "src": "5525:2:7"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5504:5:7",
                            "type": ""
                          }
                        ],
                        "src": "5470:131:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptrt_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        let value3_1, value4_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        value5 := abi_decode_uint32(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint32_$dyn_calldata_ptrt_uint32t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_uint32(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value5 := value\n    }\n    function abi_encode_array_address_dyn_calldata(value, length, pos) -> end\n    {\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := value\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let value_1 := calldataload(srcPtr)\n            validator_revert_address(value_1)\n            mstore(pos, and(value_1, sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_array_uint32_dyn_calldata(value, length, pos) -> end\n    {\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := value\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(abi_decode_uint32(srcPtr), 0xffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint32_$dyn_calldata_ptr_t_uint32__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint32__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 128)\n        let tail_1 := abi_encode_array_address_dyn_calldata(value1, value2, add(headStart, 128))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_array_uint32_dyn_calldata(value3, value4, tail_1)\n        mstore(add(headStart, 96), and(value5, 0xffffffff))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint32_$dyn_calldata_ptr_t_uint32_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint32_t_address__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_array_address_dyn_calldata(value0, value1, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint32_dyn_calldata(value2, value3, tail_1)\n        mstore(add(headStart, 64), and(value4, 0xffffffff))\n        mstore(add(headStart, 96), and(value5, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80632f079a0f1461003b578063f5f0fa7714610050575b600080fd5b61004e610049366004610221565b61007f565b005b61006361005e3660046102b0565b6100fa565b6040516001600160a01b03909116815260200160405180910390f35b604051637677856760e11b8152732ed6c4b5da6378c7897ac67ba9e43102feb694ee9063ecef0ace906100c0908990899089908990899089906004016103c1565b600060405180830381600087803b1580156100da57600080fd5b505af11580156100ee573d6000803e3d6000fd5b50505050505050505050565b604051633b00fbc160e11b8152600090732ed6c4b5da6378c7897ac67ba9e43102feb694ee90637601f7829061013e908a908a908a908a908a908a90600401610413565b602060405180830381600087803b15801561015857600080fd5b505af115801561016c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019091906101fe565b979650505050505050565b60008083601f8401126101ac578182fd5b50813567ffffffffffffffff8111156101c3578182fd5b6020830191508360208260051b85010111156101de57600080fd5b9250929050565b803563ffffffff811681146101f957600080fd5b919050565b60006020828403121561020f578081fd5b815161021a81610464565b9392505050565b60008060008060008060808789031215610239578182fd5b863561024481610464565b9550602087013567ffffffffffffffff80821115610260578384fd5b61026c8a838b0161019b565b90975095506040890135915080821115610284578384fd5b5061029189828a0161019b565b90945092506102a49050606088016101e5565b90509295509295509295565b600080600080600080608087890312156102c8578182fd5b863567ffffffffffffffff808211156102df578384fd5b6102eb8a838b0161019b565b90985096506020890135915080821115610303578384fd5b5061031089828a0161019b565b90955093506103239050604088016101e5565b9150606087013561033381610464565b809150509295509295509295565b81835260006020808501945082825b8581101561037e57813561036381610464565b6001600160a01b031687529582019590820190600101610350565b509495945050505050565b81835260006020808501945082825b8581101561037e5763ffffffff6103ae836101e5565b1687529582019590820190600101610398565b6001600160a01b03871681526080602082018190526000906103e69083018789610341565b82810360408401526103f9818688610389565b91505063ffffffff83166060830152979650505050505050565b60808152600061042760808301888a610341565b828103602084015261043a818789610389565b63ffffffff95909516604084015250506001600160a01b0391909116606090910152949350505050565b6001600160a01b038116811461047957600080fd5b5056fea264697066735822122038fd5e3c850ff85fe66017e025dc40a934afcba79159a5fae420fe6a4d9c972164736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2F079A0F EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF5F0FA77 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x221 JUMP JUMPDEST PUSH2 0x7F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x76778567 PUSH1 0xE1 SHL DUP2 MSTORE PUSH20 0x2ED6C4B5DA6378C7897AC67BA9E43102FEB694EE SWAP1 PUSH4 0xECEF0ACE SWAP1 PUSH2 0xC0 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3B00FBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x2ED6C4B5DA6378C7897AC67BA9E43102FEB694EE SWAP1 PUSH4 0x7601F782 SWAP1 PUSH2 0x13E SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x413 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1FE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1AC JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x21A DUP2 PUSH2 0x464 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x239 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x244 DUP2 PUSH2 0x464 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x260 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x26C DUP11 DUP4 DUP12 ADD PUSH2 0x19B JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x284 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x291 DUP10 DUP3 DUP11 ADD PUSH2 0x19B JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x2A4 SWAP1 POP PUSH1 0x60 DUP9 ADD PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2C8 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2DF JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2EB DUP11 DUP4 DUP12 ADD PUSH2 0x19B JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x303 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x310 DUP10 DUP3 DUP11 ADD PUSH2 0x19B JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x323 SWAP1 POP PUSH1 0x40 DUP9 ADD PUSH2 0x1E5 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x333 DUP2 PUSH2 0x464 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x37E JUMPI DUP2 CALLDATALOAD PUSH2 0x363 DUP2 PUSH2 0x464 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x350 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH4 0xFFFFFFFF PUSH2 0x3AE DUP4 PUSH2 0x1E5 JUMP JUMPDEST AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x398 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3E6 SWAP1 DUP4 ADD DUP8 DUP10 PUSH2 0x341 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x3F9 DUP2 DUP7 DUP9 PUSH2 0x389 JUMP JUMPDEST SWAP2 POP POP PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x427 PUSH1 0x80 DUP4 ADD DUP9 DUP11 PUSH2 0x341 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x43A DUP2 DUP8 DUP10 PUSH2 0x389 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE REVERT 0x5E EXTCODECOPY DUP6 0xF 0xF8 0x5F 0xE6 PUSH1 0x17 0xE0 0x25 0xDC BLOCKHASH 0xA9 CALLVALUE 0xAF 0xCB 0xA7 SWAP2 MSIZE 0xA5 STATICCALL 0xE4 KECCAK256 INVALID PUSH11 0x4D9C972164736F6C634300 ADDMOD DIV STOP CALLER ",
              "sourceMap": "134:701:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:235;;;;;;:::i;:::-;;:::i;:::-;;278:316;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4014:32:7;;;3996:51;;3984:2;3969:18;278:316:4;;;;;;;598:235;754:74;;-1:-1:-1;;;754:74:4;;210:42;;754:21;;:74;;776:5;;783:8;;;;793:18;;;;813:14;;754:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:235;;;;;;:::o;278:316::-;470:119;;-1:-1:-1;;;470:119:4;;442:7;;210:42;;470:21;;:119;;501:8;;;;519:18;;;;547:14;;571:10;;470:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;457:132;278:316;-1:-1:-1;;;;;;;278:316:4:o;14:395:7:-;77:8;87:6;141:3;134:4;126:6;122:17;118:27;108:2;;166:8;156;149:26;108:2;-1:-1:-1;196:20:7;;239:18;228:30;;225:2;;;278:8;268;261:26;225:2;322:4;314:6;310:17;298:29;;382:3;375:4;365:6;362:1;358:14;350:6;346:27;342:38;339:47;336:2;;;399:1;396;389:12;336:2;98:311;;;;;:::o;414:163::-;481:20;;541:10;530:22;;520:33;;510:2;;567:1;564;557:12;510:2;462:115;;;:::o;582:261::-;652:6;705:2;693:9;684:7;680:23;676:32;673:2;;;726:6;718;711:22;673:2;763:9;757:16;782:31;807:5;782:31;:::i;:::-;832:5;663:180;-1:-1:-1;;;663:180:7:o;848:1010::-;986:6;994;1002;1010;1018;1026;1079:3;1067:9;1058:7;1054:23;1050:33;1047:2;;;1101:6;1093;1086:22;1047:2;1145:9;1132:23;1164:31;1189:5;1164:31;:::i;:::-;1214:5;-1:-1:-1;1270:2:7;1255:18;;1242:32;1293:18;1323:14;;;1320:2;;;1355:6;1347;1340:22;1320:2;1399:70;1461:7;1452:6;1441:9;1437:22;1399:70;:::i;:::-;1488:8;;-1:-1:-1;1373:96:7;-1:-1:-1;1576:2:7;1561:18;;1548:32;;-1:-1:-1;1592:16:7;;;1589:2;;;1626:6;1618;1611:22;1589:2;;1670:72;1734:7;1723:8;1712:9;1708:24;1670:72;:::i;:::-;1761:8;;-1:-1:-1;1644:98:7;-1:-1:-1;1815:37:7;;-1:-1:-1;1848:2:7;1833:18;;1815:37;:::i;:::-;1805:47;;1037:821;;;;;;;;:::o;1863:1010::-;2001:6;2009;2017;2025;2033;2041;2094:3;2082:9;2073:7;2069:23;2065:33;2062:2;;;2116:6;2108;2101:22;2062:2;2161:9;2148:23;2190:18;2231:2;2223:6;2220:14;2217:2;;;2252:6;2244;2237:22;2217:2;2296:70;2358:7;2349:6;2338:9;2334:22;2296:70;:::i;:::-;2385:8;;-1:-1:-1;2270:96:7;-1:-1:-1;2473:2:7;2458:18;;2445:32;;-1:-1:-1;2489:16:7;;;2486:2;;;2523:6;2515;2508:22;2486:2;;2567:72;2631:7;2620:8;2609:9;2605:24;2567:72;:::i;:::-;2658:8;;-1:-1:-1;2541:98:7;-1:-1:-1;2712:37:7;;-1:-1:-1;2745:2:7;2730:18;;2712:37;:::i;:::-;2702:47;;2799:2;2788:9;2784:18;2771:32;2812:31;2837:5;2812:31;:::i;:::-;2862:5;2852:15;;;2052:821;;;;;;;;:::o;2878:524::-;2978:6;2973:3;2966:19;2948:3;3004:4;3033:2;3028:3;3024:12;3017:19;;3059:5;3082:3;3094:283;3108:6;3105:1;3102:13;3094:283;;;3185:6;3172:20;3205:33;3230:7;3205:33;:::i;:::-;-1:-1:-1;;;;;3263:33:7;3251:46;;3317:12;;;;3352:15;;;;3293:1;3123:9;3094:283;;;-1:-1:-1;3393:3:7;;2956:446;-1:-1:-1;;;;;2956:446:7:o;3407:438::-;3506:6;3501:3;3494:19;3476:3;3532:4;3561:2;3556:3;3552:12;3545:19;;3587:5;3610:3;3622:198;3636:6;3633:1;3630:13;3622:198;;;3728:10;3701:25;3719:6;3701:25;:::i;:::-;3697:42;3685:55;;3760:12;;;;3795:15;;;;3658:1;3651:9;3622:198;;4058:701;-1:-1:-1;;;;;4387:32:7;;4369:51;;4456:3;4451:2;4436:18;;4429:31;;;-1:-1:-1;;4483:74:7;;4537:19;;4529:6;4521;4483:74;:::i;:::-;4605:9;4597:6;4593:22;4588:2;4577:9;4573:18;4566:50;4633:60;4686:6;4678;4670;4633:60;:::i;:::-;4625:68;;;4741:10;4733:6;4729:23;4724:2;4713:9;4709:18;4702:51;4359:400;;;;;;;;;:::o;4764:701::-;5093:3;5082:9;5075:22;5056:4;5120:74;5189:3;5178:9;5174:19;5166:6;5158;5120:74;:::i;:::-;5242:9;5234:6;5230:22;5225:2;5214:9;5210:18;5203:50;5270:60;5323:6;5315;5307;5270:60;:::i;:::-;5378:10;5366:23;;;;5361:2;5346:18;;5339:51;-1:-1:-1;;;;;;;5426:32:7;;;;5421:2;5406:18;;;5399:60;5262:68;5065:400;-1:-1:-1;;;;5065:400:7:o;5470:131::-;-1:-1:-1;;;;;5545:31:7;;5535:42;;5525:2;;5591:1;5588;5581:12;5525:2;5515:86;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "240400",
                "executionCost": "281",
                "totalCost": "240681"
              },
              "external": {
                "create(address[],uint32[],uint32,address)": "infinite",
                "update(address,address[],uint32[],uint32)": "infinite"
              }
            },
            "methodIdentifiers": {
              "create(address[],uint32[],uint32,address)": "f5f0fa77",
              "update(address,address[],uint32[],uint32)": "2f079a0f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestInternalTxn.sol\":\"TestInternalTxn\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*///////////////////////////////////////////////////////////////\\n                                  EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    bytes32 public constant PERMIT_TYPEHASH =\\n        keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            bytes32 digest = keccak256(\\n                abi.encodePacked(\\n                    \\\"\\\\x19\\\\x01\\\",\\n                    DOMAIN_SEPARATOR(),\\n                    keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\n                )\\n            );\\n\\n            address recoveredAddress = ecrecover(digest, v, r, s);\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\"},\"contracts/TestInternalTxn.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.4;\\n\\nimport {ISplitMain} from 'contracts/interfaces/ISplitMain.sol';\\n\\ncontract TestInternalTxn {\\n  ISplitMain constant splitMain =\\n    ISplitMain(0x2ed6c4B5dA6378c7897AC67Ba9e43102Feb694EE);\\n\\n  constructor() {}\\n\\n  function create(\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address controller\\n  ) external returns (address) {\\n    return\\n      splitMain.createSplit(\\n        accounts,\\n        percentAllocations,\\n        distributorFee,\\n        controller\\n      );\\n  }\\n\\n  function update(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee\\n  ) external {\\n    splitMain.updateSplit(split, accounts, percentAllocations, distributorFee);\\n  }\\n}\\n\",\"keccak256\":\"0xa96b3411bbd4f4e021d3ff798801082fa63584110ae1a019734c83751ba5b2c1\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interfaces/ISplitMain.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.4;\\n\\nimport {ERC20} from '@rari-capital/solmate/src/tokens/ERC20.sol';\\n\\n/**\\n * @title ISplitMain\\n * @author 0xSplits <will@0xSplits.xyz>\\n */\\ninterface ISplitMain {\\n  /**\\n   * FUNCTIONS\\n   */\\n\\n  function walletImplementation() external returns (address);\\n\\n  function createSplit(\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address controller\\n  ) external returns (address);\\n\\n  function predictImmutableSplitAddress(\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee\\n  ) external view returns (address);\\n\\n  function updateSplit(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee\\n  ) external;\\n\\n  function transferControl(address split, address newController) external;\\n\\n  function cancelControlTransfer(address split) external;\\n\\n  function acceptControl(address split) external;\\n\\n  function makeSplitImmutable(address split) external;\\n\\n  function distributeETH(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function updateAndDistributeETH(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function distributeERC20(\\n    address split,\\n    ERC20 token,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function updateAndDistributeERC20(\\n    address split,\\n    ERC20 token,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function withdraw(\\n    address account,\\n    uint256 withdrawETH,\\n    ERC20[] calldata tokens\\n  ) external;\\n\\n  /**\\n   * EVENTS\\n   */\\n\\n  /** @notice emitted after each successful split creation\\n   *  @param split Address of the created split\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   *  @param controller Controlling address (0x0 if immutable)\\n   */\\n  event CreateSplit(\\n    address indexed split,\\n    address[] accounts,\\n    uint32[] percentAllocations,\\n    uint32 distributorFee,\\n    address controller\\n  );\\n\\n  /** @notice emitted after each successful split update\\n   *  @param split Address of the updated split\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   */\\n  event UpdateSplit(\\n    address indexed split,\\n    address[] accounts,\\n    uint32[] percentAllocations,\\n    uint32 distributorFee\\n  );\\n\\n  /** @notice emitted after each initiated split control transfer\\n   *  @param split Address of the split control transfer was initiated for\\n   *  @param newPotentialController Address of the split's new potential controller\\n   */\\n  event InitiateControlTransfer(\\n    address indexed split,\\n    address indexed newPotentialController\\n  );\\n\\n  /** @notice emitted after each canceled split control transfer\\n   *  @param split Address of the split control transfer was canceled for\\n   */\\n  event CancelControlTransfer(address indexed split);\\n\\n  /** @notice emitted after each successful split control transfer\\n   *  @param split Address of the split control was transferred for\\n   *  @param previousController Address of the split's previous controller\\n   *  @param newController Address of the split's new controller\\n   */\\n  event ControlTransfer(\\n    address indexed split,\\n    address indexed previousController,\\n    address indexed newController\\n  );\\n\\n  /** @notice emitted after each successful ETH balance split\\n   *  @param split Address of the split that distributed its balance\\n   *  @param amount Amount of ETH distributed\\n   *  @param distributorAddress Address to credit distributor fee to\\n   */\\n  event DistributeETH(\\n    address indexed split,\\n    uint256 amount,\\n    address indexed distributorAddress\\n  );\\n\\n  /** @notice emitted after each successful ERC20 balance split\\n   *  @param split Address of the split that distributed its balance\\n   *  @param token Address of ERC20 distributed\\n   *  @param amount Amount of ERC20 distributed\\n   *  @param distributorAddress Address to credit distributor fee to\\n   */\\n  event DistributeERC20(\\n    address indexed split,\\n    ERC20 indexed token,\\n    uint256 amount,\\n    address indexed distributorAddress\\n  );\\n\\n  /** @notice emitted after each successful withdrawal\\n   *  @param account Address that funds were withdrawn to\\n   *  @param ethAmount Amount of ETH withdrawn\\n   *  @param tokens Addresses of ERC20s withdrawn\\n   *  @param tokenAmounts Amounts of corresponding ERC20s withdrawn\\n   */\\n  event Withdrawal(\\n    address indexed account,\\n    uint256 ethAmount,\\n    ERC20[] tokens,\\n    uint256[] tokenAmounts\\n  );\\n}\\n\",\"keccak256\":\"0xe4217bd53761c48e7dad18bd0063b7697689f231dbaec346453877987fb31b74\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/interfaces/ISplitMain.sol": {
        "ISplitMain": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                }
              ],
              "name": "CancelControlTransfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousController",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newController",
                  "type": "address"
                }
              ],
              "name": "ControlTransfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "controller",
                  "type": "address"
                }
              ],
              "name": "CreateSplit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "distributorAddress",
                  "type": "address"
                }
              ],
              "name": "DistributeERC20",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "distributorAddress",
                  "type": "address"
                }
              ],
              "name": "DistributeETH",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newPotentialController",
                  "type": "address"
                }
              ],
              "name": "InitiateControlTransfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                }
              ],
              "name": "UpdateSplit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "ethAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "contract ERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "tokenAmounts",
                  "type": "uint256[]"
                }
              ],
              "name": "Withdrawal",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                }
              ],
              "name": "acceptControl",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                }
              ],
              "name": "cancelControlTransfer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "controller",
                  "type": "address"
                }
              ],
              "name": "createSplit",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "distributorAddress",
                  "type": "address"
                }
              ],
              "name": "distributeERC20",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "distributorAddress",
                  "type": "address"
                }
              ],
              "name": "distributeETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                }
              ],
              "name": "makeSplitImmutable",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                }
              ],
              "name": "predictImmutableSplitAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "newController",
                  "type": "address"
                }
              ],
              "name": "transferControl",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "distributorAddress",
                  "type": "address"
                }
              ],
              "name": "updateAndDistributeERC20",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "distributorAddress",
                  "type": "address"
                }
              ],
              "name": "updateAndDistributeETH",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "split",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32[]",
                  "name": "percentAllocations",
                  "type": "uint32[]"
                },
                {
                  "internalType": "uint32",
                  "name": "distributorFee",
                  "type": "uint32"
                }
              ],
              "name": "updateSplit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "walletImplementation",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawETH",
                  "type": "uint256"
                },
                {
                  "internalType": "contract ERC20[]",
                  "name": "tokens",
                  "type": "address[]"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "0xSplits <will@0xSplits.xyz>",
            "events": {
              "CancelControlTransfer(address)": {
                "params": {
                  "split": "Address of the split control transfer was canceled for"
                }
              },
              "ControlTransfer(address,address,address)": {
                "params": {
                  "newController": "Address of the split's new controller",
                  "previousController": "Address of the split's previous controller",
                  "split": "Address of the split control was transferred for"
                }
              },
              "CreateSplit(address,address[],uint32[],uint32,address)": {
                "params": {
                  "accounts": "Ordered, unique list of addresses with ownership in the split",
                  "controller": "Controlling address (0x0 if immutable)",
                  "distributorFee": "Keeper fee paid by split to cover gas costs of distribution",
                  "percentAllocations": "Percent allocations associated with each address",
                  "split": "Address of the created split"
                }
              },
              "DistributeERC20(address,address,uint256,address)": {
                "params": {
                  "amount": "Amount of ERC20 distributed",
                  "distributorAddress": "Address to credit distributor fee to",
                  "split": "Address of the split that distributed its balance",
                  "token": "Address of ERC20 distributed"
                }
              },
              "DistributeETH(address,uint256,address)": {
                "params": {
                  "amount": "Amount of ETH distributed",
                  "distributorAddress": "Address to credit distributor fee to",
                  "split": "Address of the split that distributed its balance"
                }
              },
              "InitiateControlTransfer(address,address)": {
                "params": {
                  "newPotentialController": "Address of the split's new potential controller",
                  "split": "Address of the split control transfer was initiated for"
                }
              },
              "UpdateSplit(address,address[],uint32[],uint32)": {
                "params": {
                  "accounts": "Ordered, unique list of addresses with ownership in the split",
                  "distributorFee": "Keeper fee paid by split to cover gas costs of distribution",
                  "percentAllocations": "Percent allocations associated with each address",
                  "split": "Address of the updated split"
                }
              },
              "Withdrawal(address,uint256,address[],uint256[])": {
                "params": {
                  "account": "Address that funds were withdrawn to",
                  "ethAmount": "Amount of ETH withdrawn",
                  "tokenAmounts": "Amounts of corresponding ERC20s withdrawn",
                  "tokens": "Addresses of ERC20s withdrawn"
                }
              }
            },
            "kind": "dev",
            "methods": {},
            "title": "ISplitMain",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "acceptControl(address)": "c7de6440",
              "cancelControlTransfer(address)": "1267c6da",
              "createSplit(address[],uint32[],uint32,address)": "7601f782",
              "distributeERC20(address,address,address[],uint32[],uint32,address)": "15811302",
              "distributeETH(address,address[],uint32[],uint32,address)": "e61cb05e",
              "makeSplitImmutable(address)": "189cbaa0",
              "predictImmutableSplitAddress(address[],uint32[],uint32)": "52844dd3",
              "transferControl(address,address)": "d0e4b2f4",
              "updateAndDistributeERC20(address,address,address[],uint32[],uint32,address)": "77b1e4e9",
              "updateAndDistributeETH(address,address[],uint32[],uint32,address)": "a5e3909e",
              "updateSplit(address,address[],uint32[],uint32)": "ecef0ace",
              "walletImplementation()": "8117abc1",
              "withdraw(address,uint256,address[])": "6e5f6919"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"}],\"name\":\"CancelControlTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousController\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ControlTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"CreateSplit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"distributorAddress\",\"type\":\"address\"}],\"name\":\"DistributeERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"distributorAddress\",\"type\":\"address\"}],\"name\":\"DistributeETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPotentialController\",\"type\":\"address\"}],\"name\":\"InitiateControlTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"}],\"name\":\"UpdateSplit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract ERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"}],\"name\":\"acceptControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"}],\"name\":\"cancelControlTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"createSplit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"distributorAddress\",\"type\":\"address\"}],\"name\":\"distributeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"distributorAddress\",\"type\":\"address\"}],\"name\":\"distributeETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"}],\"name\":\"makeSplitImmutable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"}],\"name\":\"predictImmutableSplitAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"transferControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"distributorAddress\",\"type\":\"address\"}],\"name\":\"updateAndDistributeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"distributorAddress\",\"type\":\"address\"}],\"name\":\"updateAndDistributeETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"split\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"percentAllocations\",\"type\":\"uint32[]\"},{\"internalType\":\"uint32\",\"name\":\"distributorFee\",\"type\":\"uint32\"}],\"name\":\"updateSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawETH\",\"type\":\"uint256\"},{\"internalType\":\"contract ERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0xSplits <will@0xSplits.xyz>\",\"events\":{\"CancelControlTransfer(address)\":{\"params\":{\"split\":\"Address of the split control transfer was canceled for\"}},\"ControlTransfer(address,address,address)\":{\"params\":{\"newController\":\"Address of the split's new controller\",\"previousController\":\"Address of the split's previous controller\",\"split\":\"Address of the split control was transferred for\"}},\"CreateSplit(address,address[],uint32[],uint32,address)\":{\"params\":{\"accounts\":\"Ordered, unique list of addresses with ownership in the split\",\"controller\":\"Controlling address (0x0 if immutable)\",\"distributorFee\":\"Keeper fee paid by split to cover gas costs of distribution\",\"percentAllocations\":\"Percent allocations associated with each address\",\"split\":\"Address of the created split\"}},\"DistributeERC20(address,address,uint256,address)\":{\"params\":{\"amount\":\"Amount of ERC20 distributed\",\"distributorAddress\":\"Address to credit distributor fee to\",\"split\":\"Address of the split that distributed its balance\",\"token\":\"Address of ERC20 distributed\"}},\"DistributeETH(address,uint256,address)\":{\"params\":{\"amount\":\"Amount of ETH distributed\",\"distributorAddress\":\"Address to credit distributor fee to\",\"split\":\"Address of the split that distributed its balance\"}},\"InitiateControlTransfer(address,address)\":{\"params\":{\"newPotentialController\":\"Address of the split's new potential controller\",\"split\":\"Address of the split control transfer was initiated for\"}},\"UpdateSplit(address,address[],uint32[],uint32)\":{\"params\":{\"accounts\":\"Ordered, unique list of addresses with ownership in the split\",\"distributorFee\":\"Keeper fee paid by split to cover gas costs of distribution\",\"percentAllocations\":\"Percent allocations associated with each address\",\"split\":\"Address of the updated split\"}},\"Withdrawal(address,uint256,address[],uint256[])\":{\"params\":{\"account\":\"Address that funds were withdrawn to\",\"ethAmount\":\"Amount of ETH withdrawn\",\"tokenAmounts\":\"Amounts of corresponding ERC20s withdrawn\",\"tokens\":\"Addresses of ERC20s withdrawn\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"ISplitMain\",\"version\":1},\"userdoc\":{\"events\":{\"CancelControlTransfer(address)\":{\"notice\":\"emitted after each canceled split control transfer\"},\"ControlTransfer(address,address,address)\":{\"notice\":\"emitted after each successful split control transfer\"},\"CreateSplit(address,address[],uint32[],uint32,address)\":{\"notice\":\"emitted after each successful split creation\"},\"DistributeERC20(address,address,uint256,address)\":{\"notice\":\"emitted after each successful ERC20 balance split\"},\"DistributeETH(address,uint256,address)\":{\"notice\":\"emitted after each successful ETH balance split\"},\"InitiateControlTransfer(address,address)\":{\"notice\":\"emitted after each initiated split control transfer\"},\"UpdateSplit(address,address[],uint32[],uint32)\":{\"notice\":\"emitted after each successful split update\"},\"Withdrawal(address,uint256,address[],uint256[])\":{\"notice\":\"emitted after each successful withdrawal\"}},\"kind\":\"user\",\"methods\":{\"walletImplementation()\":{\"notice\":\"FUNCTIONS\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISplitMain.sol\":\"ISplitMain\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*///////////////////////////////////////////////////////////////\\n                                  EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    bytes32 public constant PERMIT_TYPEHASH =\\n        keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            bytes32 digest = keccak256(\\n                abi.encodePacked(\\n                    \\\"\\\\x19\\\\x01\\\",\\n                    DOMAIN_SEPARATOR(),\\n                    keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\n                )\\n            );\\n\\n            address recoveredAddress = ecrecover(digest, v, r, s);\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\"},\"contracts/interfaces/ISplitMain.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.4;\\n\\nimport {ERC20} from '@rari-capital/solmate/src/tokens/ERC20.sol';\\n\\n/**\\n * @title ISplitMain\\n * @author 0xSplits <will@0xSplits.xyz>\\n */\\ninterface ISplitMain {\\n  /**\\n   * FUNCTIONS\\n   */\\n\\n  function walletImplementation() external returns (address);\\n\\n  function createSplit(\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address controller\\n  ) external returns (address);\\n\\n  function predictImmutableSplitAddress(\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee\\n  ) external view returns (address);\\n\\n  function updateSplit(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee\\n  ) external;\\n\\n  function transferControl(address split, address newController) external;\\n\\n  function cancelControlTransfer(address split) external;\\n\\n  function acceptControl(address split) external;\\n\\n  function makeSplitImmutable(address split) external;\\n\\n  function distributeETH(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function updateAndDistributeETH(\\n    address split,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function distributeERC20(\\n    address split,\\n    ERC20 token,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function updateAndDistributeERC20(\\n    address split,\\n    ERC20 token,\\n    address[] calldata accounts,\\n    uint32[] calldata percentAllocations,\\n    uint32 distributorFee,\\n    address distributorAddress\\n  ) external;\\n\\n  function withdraw(\\n    address account,\\n    uint256 withdrawETH,\\n    ERC20[] calldata tokens\\n  ) external;\\n\\n  /**\\n   * EVENTS\\n   */\\n\\n  /** @notice emitted after each successful split creation\\n   *  @param split Address of the created split\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   *  @param controller Controlling address (0x0 if immutable)\\n   */\\n  event CreateSplit(\\n    address indexed split,\\n    address[] accounts,\\n    uint32[] percentAllocations,\\n    uint32 distributorFee,\\n    address controller\\n  );\\n\\n  /** @notice emitted after each successful split update\\n   *  @param split Address of the updated split\\n   *  @param accounts Ordered, unique list of addresses with ownership in the split\\n   *  @param percentAllocations Percent allocations associated with each address\\n   *  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\\n   */\\n  event UpdateSplit(\\n    address indexed split,\\n    address[] accounts,\\n    uint32[] percentAllocations,\\n    uint32 distributorFee\\n  );\\n\\n  /** @notice emitted after each initiated split control transfer\\n   *  @param split Address of the split control transfer was initiated for\\n   *  @param newPotentialController Address of the split's new potential controller\\n   */\\n  event InitiateControlTransfer(\\n    address indexed split,\\n    address indexed newPotentialController\\n  );\\n\\n  /** @notice emitted after each canceled split control transfer\\n   *  @param split Address of the split control transfer was canceled for\\n   */\\n  event CancelControlTransfer(address indexed split);\\n\\n  /** @notice emitted after each successful split control transfer\\n   *  @param split Address of the split control was transferred for\\n   *  @param previousController Address of the split's previous controller\\n   *  @param newController Address of the split's new controller\\n   */\\n  event ControlTransfer(\\n    address indexed split,\\n    address indexed previousController,\\n    address indexed newController\\n  );\\n\\n  /** @notice emitted after each successful ETH balance split\\n   *  @param split Address of the split that distributed its balance\\n   *  @param amount Amount of ETH distributed\\n   *  @param distributorAddress Address to credit distributor fee to\\n   */\\n  event DistributeETH(\\n    address indexed split,\\n    uint256 amount,\\n    address indexed distributorAddress\\n  );\\n\\n  /** @notice emitted after each successful ERC20 balance split\\n   *  @param split Address of the split that distributed its balance\\n   *  @param token Address of ERC20 distributed\\n   *  @param amount Amount of ERC20 distributed\\n   *  @param distributorAddress Address to credit distributor fee to\\n   */\\n  event DistributeERC20(\\n    address indexed split,\\n    ERC20 indexed token,\\n    uint256 amount,\\n    address indexed distributorAddress\\n  );\\n\\n  /** @notice emitted after each successful withdrawal\\n   *  @param account Address that funds were withdrawn to\\n   *  @param ethAmount Amount of ETH withdrawn\\n   *  @param tokens Addresses of ERC20s withdrawn\\n   *  @param tokenAmounts Amounts of corresponding ERC20s withdrawn\\n   */\\n  event Withdrawal(\\n    address indexed account,\\n    uint256 ethAmount,\\n    ERC20[] tokens,\\n    uint256[] tokenAmounts\\n  );\\n}\\n\",\"keccak256\":\"0xe4217bd53761c48e7dad18bd0063b7697689f231dbaec346453877987fb31b74\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "events": {
              "CancelControlTransfer(address)": {
                "notice": "emitted after each canceled split control transfer"
              },
              "ControlTransfer(address,address,address)": {
                "notice": "emitted after each successful split control transfer"
              },
              "CreateSplit(address,address[],uint32[],uint32,address)": {
                "notice": "emitted after each successful split creation"
              },
              "DistributeERC20(address,address,uint256,address)": {
                "notice": "emitted after each successful ERC20 balance split"
              },
              "DistributeETH(address,uint256,address)": {
                "notice": "emitted after each successful ETH balance split"
              },
              "InitiateControlTransfer(address,address)": {
                "notice": "emitted after each initiated split control transfer"
              },
              "UpdateSplit(address,address[],uint32[],uint32)": {
                "notice": "emitted after each successful split update"
              },
              "Withdrawal(address,uint256,address[],uint256[])": {
                "notice": "emitted after each successful withdrawal"
              }
            },
            "kind": "user",
            "methods": {
              "walletImplementation()": {
                "notice": "FUNCTIONS"
              }
            },
            "version": 1
          }
        }
      },
      "contracts/libraries/Clones.sol": {
        "Clones": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220858e936820ca9408904c50fdb55da5e902f280ca91ce17f62ed2073e3d6fb86664736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 DUP15 SWAP4 PUSH9 0x20CA9408904C50FDB5 0x5D 0xA5 0xE9 MUL CALLCODE DUP1 0xCA SWAP2 0xCE OR 0xF6 0x2E 0xD2 SMOD RETURNDATACOPY RETURNDATASIZE PUSH16 0xB86664736F6C63430008040033000000 ",
              "sourceMap": "180:6526:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;180:6526:6;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220858e936820ca9408904c50fdb55da5e902f280ca91ce17f62ed2073e3d6fb86664736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 DUP15 SWAP4 PUSH9 0x20CA9408904C50FDB5 0x5D 0xA5 0xE9 MUL CALLCODE DUP1 0xCA SWAP2 0xCE OR 0xF6 0x2E 0xD2 SMOD RETURNDATACOPY RETURNDATASIZE PUSH16 0xB86664736F6C63430008040033000000 ",
              "sourceMap": "180:6526:6:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "103",
                "totalCost": "17303"
              },
              "internal": {
                "clone(address)": "infinite",
                "cloneDeterministic(address,bytes32)": "infinite",
                "predictDeterministicAddress(address,bytes32)": "infinite",
                "predictDeterministicAddress(address,bytes32,address)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Clones.sol\":\"Clones\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.4;\\n\\n/// @notice create opcode failed\\nerror CreateError();\\n/// @notice create2 opcode failed\\nerror Create2Error();\\n\\nlibrary Clones {\\n  /**\\n   * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`\\n   * except when someone calls `receive()` and then it emits an event matching\\n   * `SplitWallet.ReceiveETH(indexed address, amount)`\\n   * Inspired by OZ & 0age's minimal clone implementations based on eip 1167 found at\\n   * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.3.0/contracts/proxy/Clones.sol\\n   * and https://medium.com/coinmonks/the-more-minimal-proxy-5756ae08ee48\\n   *\\n   * This function uses the create2 opcode and a `salt` to deterministically deploy\\n   * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n   * the clones cannot be deployed twice at the same address.\\n   *\\n   * init: 0x3d605d80600a3d3981f3\\n   * 3d   returndatasize  0\\n   * 605d push1 0x5d      0x5d 0\\n   * 80   dup1            0x5d 0x5d 0\\n   * 600a push1 0x0a      0x0a 0x5d 0x5d 0\\n   * 3d   returndatasize  0 0x0a 0x5d 0x5d 0\\n   * 39   codecopy        0x5d 0                      destOffset offset length     memory[destOffset:destOffset+length] = address(this).code[offset:offset+length]       copy executing contracts bytecode\\n   * 81   dup2            0 0x5d 0\\n   * f3   return          0                           offset length                return memory[offset:offset+length]                                                   returns from this contract call\\n   *\\n   * contract: 0x36603057343d52307f830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b160203da23d3df35b3d3d3d3d363d3d37363d73bebebebebebebebebebebebebebebebebebebebe5af43d3d93803e605b57fd5bf3\\n   *     0x000     36       calldatasize      cds\\n   *     0x001     6030     push1 0x30        0x30 cds\\n   * ,=< 0x003     57       jumpi\\n   * |   0x004     34       callvalue         cv\\n   * |   0x005     3d       returndatasize    0 cv\\n   * |   0x006     52       mstore\\n   * |   0x007     30       address           addr\\n   * |   0x008     7f830d.. push32 0x830d..   id addr\\n   * |   0x029     6020     push1 0x20        0x20 id addr\\n   * |   0x02b     3d       returndatasize    0 0x20 id addr\\n   * |   0x02c     a2       log2\\n   * |   0x02d     3d       returndatasize    0\\n   * |   0x02e     3d       returndatasize    0 0\\n   * |   0x02f     f3       return\\n   * `-> 0x030     5b       jumpdest\\n   *     0x031     3d       returndatasize    0\\n   *     0x032     3d       returndatasize    0 0\\n   *     0x033     3d       returndatasize    0 0 0\\n   *     0x034     3d       returndatasize    0 0 0 0\\n   *     0x035     36       calldatasize      cds 0 0 0 0\\n   *     0x036     3d       returndatasize    0 cds 0 0 0 0\\n   *     0x037     3d       returndatasize    0 0 cds 0 0 0 0\\n   *     0x038     37       calldatacopy      0 0 0 0\\n   *     0x039     36       calldatasize      cds 0 0 0 0\\n   *     0x03a     3d       returndatasize    0 cds 0 0 0 0\\n   *     0x03b     73bebe.. push20 0xbebe..   0xbebe 0 cds 0 0 0 0\\n   *     0x050     5a       gas               gas 0xbebe 0 cds 0 0 0 0\\n   *     0x051     f4       delegatecall      suc 0 0\\n   *     0x052     3d       returndatasize    rds suc 0 0\\n   *     0x053     3d       returndatasize    rds rds suc 0 0\\n   *     0x054     93       swap4             0 rds suc 0 rds\\n   *     0x055     80       dup1              0 0 rds suc 0 rds\\n   *     0x056     3e       returndatacopy    suc 0 rds\\n   *     0x057     605b     push1 0x5b        0x5b suc 0 rds\\n   * ,=< 0x059     57       jumpi             0 rds\\n   * |   0x05a     fd       revert\\n   * `-> 0x05b     5b       jumpdest          0 rds\\n   *     0x05c     f3       return\\n   *\\n   */\\n  function clone(address implementation) internal returns (address instance) {\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(\\n        ptr,\\n        0x3d605d80600a3d3981f336603057343d52307f00000000000000000000000000\\n      )\\n      mstore(\\n        add(ptr, 0x13),\\n        0x830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b1\\n      )\\n      mstore(\\n        add(ptr, 0x33),\\n        0x60203da23d3df35b3d3d3d3d363d3d37363d7300000000000000000000000000\\n      )\\n      mstore(add(ptr, 0x46), shl(0x60, implementation))\\n      mstore(\\n        add(ptr, 0x5a),\\n        0x5af43d3d93803e605b57fd5bf300000000000000000000000000000000000000\\n      )\\n      instance := create(0, ptr, 0x67)\\n    }\\n    if (instance == address(0)) revert CreateError();\\n  }\\n\\n  function cloneDeterministic(address implementation, bytes32 salt)\\n    internal\\n    returns (address instance)\\n  {\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(\\n        ptr,\\n        0x3d605d80600a3d3981f336603057343d52307f00000000000000000000000000\\n      )\\n      mstore(\\n        add(ptr, 0x13),\\n        0x830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b1\\n      )\\n      mstore(\\n        add(ptr, 0x33),\\n        0x60203da23d3df35b3d3d3d3d363d3d37363d7300000000000000000000000000\\n      )\\n      mstore(add(ptr, 0x46), shl(0x60, implementation))\\n      mstore(\\n        add(ptr, 0x5a),\\n        0x5af43d3d93803e605b57fd5bf300000000000000000000000000000000000000\\n      )\\n      instance := create2(0, ptr, 0x67, salt)\\n    }\\n    if (instance == address(0)) revert Create2Error();\\n  }\\n\\n  /**\\n   * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n   */\\n  function predictDeterministicAddress(\\n    address implementation,\\n    bytes32 salt,\\n    address deployer\\n  ) internal pure returns (address predicted) {\\n    assembly {\\n      let ptr := mload(0x40)\\n      mstore(\\n        ptr,\\n        0x3d605d80600a3d3981f336603057343d52307f00000000000000000000000000\\n      )\\n      mstore(\\n        add(ptr, 0x13),\\n        0x830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b1\\n      )\\n      mstore(\\n        add(ptr, 0x33),\\n        0x60203da23d3df35b3d3d3d3d363d3d37363d7300000000000000000000000000\\n      )\\n      mstore(add(ptr, 0x46), shl(0x60, implementation))\\n      mstore(\\n        add(ptr, 0x5a),\\n        0x5af43d3d93803e605b57fd5bf3ff000000000000000000000000000000000000\\n      )\\n      mstore(add(ptr, 0x68), shl(0x60, deployer))\\n      mstore(add(ptr, 0x7c), salt)\\n      mstore(add(ptr, 0x9c), keccak256(ptr, 0x67))\\n      predicted := keccak256(add(ptr, 0x67), 0x55)\\n    }\\n  }\\n\\n  /**\\n   * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n   */\\n  function predictDeterministicAddress(address implementation, bytes32 salt)\\n    internal\\n    view\\n    returns (address predicted)\\n  {\\n    return predictDeterministicAddress(implementation, salt, address(this));\\n  }\\n}\\n\",\"keccak256\":\"0xb5dcbb1cc134cf221c67dceb9206d4b4037038bd84539073ec0ad2a365e78f81\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "@rari-capital/solmate/src/tokens/ERC20.sol": {
        "ast": {
          "absolutePath": "@rari-capital/solmate/src/tokens/ERC20.sol",
          "exportedSymbols": {
            "ERC20": [
              394
            ]
          },
          "id": 395,
          "license": "AGPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "42:24:0"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "68:403:0",
                "text": "@notice Modern and gas efficient ERC20 + EIP-2612 implementation.\n @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\n @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\n @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it."
              },
              "fullyImplemented": true,
              "id": 394,
              "linearizedBaseContracts": [
                394
              ],
              "name": "ERC20",
              "nameLocation": "489:5:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 10,
                  "name": "Transfer",
                  "nameLocation": "688:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "713:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "697:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "697:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 6,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "735:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "719:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 5,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "719:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 8,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "747:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "739:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "739:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "696:58:0"
                  },
                  "src": "682:73:0"
                },
                {
                  "anonymous": false,
                  "id": 18,
                  "name": "Approval",
                  "nameLocation": "767:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 12,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "792:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "776:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 11,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "776:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 14,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "815:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "799:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "799:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 16,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "832:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "824:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "824:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "775:64:0"
                  },
                  "src": "761:79:0"
                },
                {
                  "constant": false,
                  "functionSelector": "06fdde03",
                  "id": 20,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1046:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "1032:18:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "95d89b41",
                  "id": 22,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1071:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "1057:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "313ce567",
                  "id": 24,
                  "mutability": "immutable",
                  "name": "decimals",
                  "nameLocation": "1107:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "1084:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "18160ddd",
                  "id": 26,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nameLocation": "1321:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "1306:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "70a08231",
                  "id": 30,
                  "mutability": "mutable",
                  "name": "balanceOf",
                  "nameLocation": "1374:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "1339:44:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 29,
                    "keyType": {
                      "id": 27,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1347:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1339:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 28,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1358:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "dd62ed3e",
                  "id": 36,
                  "mutability": "mutable",
                  "name": "allowance",
                  "nameLocation": "1445:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "1390:64:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 35,
                    "keyType": {
                      "id": 31,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1398:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1390:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueType": {
                      "id": 34,
                      "keyType": {
                        "id": 32,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1417:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1409:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 33,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1428:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "30adf81f",
                  "id": 41,
                  "mutability": "constant",
                  "name": "PERMIT_TYPEHASH",
                  "nameLocation": "1671:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "1647:145:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1707:84:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                          "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                        },
                        "value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                          "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                        }
                      ],
                      "id": 38,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1697:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1697:95:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "immutable",
                  "name": "INITIAL_CHAIN_ID",
                  "nameLocation": "1826:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "1799:43:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1799:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "immutable",
                  "name": "INITIAL_DOMAIN_SEPARATOR",
                  "nameLocation": "1876:24:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "1849:51:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "7ecebe00",
                  "id": 49,
                  "mutability": "mutable",
                  "name": "nonces",
                  "nameLocation": "1942:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "1907:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 48,
                    "keyType": {
                      "id": 46,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1915:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1907:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 47,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1926:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 80,
                    "nodeType": "Block",
                    "src": "2241:189:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 58,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "2251:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 59,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "2258:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2251:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 61,
                        "nodeType": "ExpressionStatement",
                        "src": "2251:12:0"
                      },
                      {
                        "expression": {
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 62,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "2273:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 63,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "2282:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2273:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 65,
                        "nodeType": "ExpressionStatement",
                        "src": "2273:16:0"
                      },
                      {
                        "expression": {
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 66,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2299:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 67,
                            "name": "_decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "2310:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "2299:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 69,
                        "nodeType": "ExpressionStatement",
                        "src": "2299:20:0"
                      },
                      {
                        "expression": {
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 70,
                            "name": "INITIAL_CHAIN_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "2330:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 71,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2349:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "2349:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2330:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 74,
                        "nodeType": "ExpressionStatement",
                        "src": "2330:32:0"
                      },
                      {
                        "expression": {
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 75,
                            "name": "INITIAL_DOMAIN_SEPARATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "2372:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 76,
                              "name": "computeDomainSeparator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "2399:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                                "typeString": "function () view returns (bytes32)"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2399:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2372:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 79,
                        "nodeType": "ExpressionStatement",
                        "src": "2372:51:0"
                      }
                    ]
                  },
                  "id": 81,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 56,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 51,
                        "mutability": "mutable",
                        "name": "_name",
                        "nameLocation": "2173:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "2159:19:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 50,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2159:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 53,
                        "mutability": "mutable",
                        "name": "_symbol",
                        "nameLocation": "2202:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "2188:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2188:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 55,
                        "mutability": "mutable",
                        "name": "_decimals",
                        "nameLocation": "2225:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "2219:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 54,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2219:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2149:91:0"
                  },
                  "returnParameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2241:0:0"
                  },
                  "scope": 394,
                  "src": "2138:292:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 108,
                    "nodeType": "Block",
                    "src": "2698:131:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 90,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36,
                                "src": "2708:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 94,
                              "indexExpression": {
                                "expression": {
                                  "id": 91,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2718:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2718:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2708:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 95,
                            "indexExpression": {
                              "id": 93,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "2730:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2708:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 96,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "2741:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2708:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 98,
                        "nodeType": "ExpressionStatement",
                        "src": "2708:39:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 100,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2772:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2772:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 102,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "2784:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 103,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "2793:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 99,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "2763:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2763:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 105,
                        "nodeType": "EmitStatement",
                        "src": "2758:42:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2818:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 89,
                        "id": 107,
                        "nodeType": "Return",
                        "src": "2811:11:0"
                      }
                    ]
                  },
                  "functionSelector": "095ea7b3",
                  "id": 109,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2627:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2643:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "2635:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2635:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 85,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2660:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "2652:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 84,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2652:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2634:33:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 88,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "2692:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 87,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2692:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2691:6:0"
                  },
                  "scope": 394,
                  "src": "2618:211:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 141,
                    "nodeType": "Block",
                    "src": "2911:297:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 118,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "2921:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 121,
                            "indexExpression": {
                              "expression": {
                                "id": 119,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2931:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2931:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2921:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 122,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "2946:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2921:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2921:31:0"
                      },
                      {
                        "id": 131,
                        "nodeType": "UncheckedBlock",
                        "src": "3074:58:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 125,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "3098:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 127,
                                "indexExpression": {
                                  "id": 126,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "3108:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "3098:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "id": 128,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "3115:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3098:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 130,
                            "nodeType": "ExpressionStatement",
                            "src": "3098:23:0"
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 133,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3156:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3156:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 135,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "3168:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 136,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "3172:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 132,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "3147:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3147:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 138,
                        "nodeType": "EmitStatement",
                        "src": "3142:37:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3197:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 117,
                        "id": 140,
                        "nodeType": "Return",
                        "src": "3190:11:0"
                      }
                    ]
                  },
                  "functionSelector": "a9059cbb",
                  "id": 142,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "2844:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 111,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2861:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "2853:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 110,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2853:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 113,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2873:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "2865:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2865:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2852:28:0"
                  },
                  "returnParameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "2905:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2905:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2904:6:0"
                  },
                  "scope": 394,
                  "src": "2835:373:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 202,
                    "nodeType": "Block",
                    "src": "3338:468:0",
                    "statements": [
                      {
                        "assignments": [
                          154
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 154,
                            "mutability": "mutable",
                            "name": "allowed",
                            "nameLocation": "3356:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 202,
                            "src": "3348:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 153,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3348:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 161,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 155,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "3366:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 157,
                            "indexExpression": {
                              "id": 156,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144,
                              "src": "3376:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3366:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 160,
                          "indexExpression": {
                            "expression": {
                              "id": 158,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3382:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3382:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3366:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3348:45:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 162,
                            "name": "allowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154,
                            "src": "3444:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3460:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 164,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3460:7:0",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 163,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "3455:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3455:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "3455:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3444:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 180,
                        "nodeType": "IfStatement",
                        "src": "3440:80:0",
                        "trueBody": {
                          "expression": {
                            "id": 178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 169,
                                  "name": "allowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36,
                                  "src": "3474:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 173,
                                "indexExpression": {
                                  "id": 170,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 144,
                                  "src": "3484:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3474:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 174,
                              "indexExpression": {
                                "expression": {
                                  "id": 171,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3490:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 172,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3490:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "3474:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 175,
                                "name": "allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 154,
                                "src": "3504:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 176,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 148,
                                "src": "3514:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3504:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3474:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 179,
                          "nodeType": "ExpressionStatement",
                          "src": "3474:46:0"
                        }
                      },
                      {
                        "expression": {
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 181,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "3531:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 183,
                            "indexExpression": {
                              "id": 182,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144,
                              "src": "3541:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3531:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 184,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148,
                            "src": "3550:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3531:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "3531:25:0"
                      },
                      {
                        "id": 193,
                        "nodeType": "UncheckedBlock",
                        "src": "3678:58:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 187,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "3702:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 189,
                                "indexExpression": {
                                  "id": 188,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 146,
                                  "src": "3712:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "3702:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "id": 190,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 148,
                                "src": "3719:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3702:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 192,
                            "nodeType": "ExpressionStatement",
                            "src": "3702:23:0"
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 195,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144,
                              "src": "3760:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 196,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "3766:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 197,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "3770:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 194,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "3751:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3751:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 199,
                        "nodeType": "EmitStatement",
                        "src": "3746:31:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3795:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 152,
                        "id": 201,
                        "nodeType": "Return",
                        "src": "3788:11:0"
                      }
                    ]
                  },
                  "functionSelector": "23b872dd",
                  "id": 203,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "3223:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3253:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "3245:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3245:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 146,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3275:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "3267:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3267:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 148,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3295:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "3287:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 147,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3287:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3235:72:0"
                  },
                  "returnParameters": {
                    "id": 152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 151,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "3332:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 150,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3332:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3331:6:0"
                  },
                  "scope": 394,
                  "src": "3214:592:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 291,
                    "nodeType": "Block",
                    "src": "4186:804:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 221,
                                "name": "deadline",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 211,
                                "src": "4204:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 222,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "4216:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "4216:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4204:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5045524d49545f444541444c494e455f45585049524544",
                              "id": 225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4233:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e",
                                "typeString": "literal_string \"PERMIT_DEADLINE_EXPIRED\""
                              },
                              "value": "PERMIT_DEADLINE_EXPIRED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e",
                                "typeString": "literal_string \"PERMIT_DEADLINE_EXPIRED\""
                              }
                            ],
                            "id": 220,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4196:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4196:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 227,
                        "nodeType": "ExpressionStatement",
                        "src": "4196:63:0"
                      },
                      {
                        "id": 284,
                        "nodeType": "UncheckedBlock",
                        "src": "4400:537:0",
                        "statements": [
                          {
                            "assignments": [
                              229
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 229,
                                "mutability": "mutable",
                                "name": "digest",
                                "nameLocation": "4432:6:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 284,
                                "src": "4424:14:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "typeName": {
                                  "id": 228,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4424:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 252,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "1901",
                                      "id": 233,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4506:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                        "typeString": "literal_string hex\"1901\""
                                      },
                                      "value": "\u0019\u0001"
                                    },
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 234,
                                        "name": "DOMAIN_SEPARATOR",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "4538:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                                          "typeString": "function () view returns (bytes32)"
                                        }
                                      },
                                      "id": 235,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4538:18:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 239,
                                              "name": "PERMIT_TYPEHASH",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 41,
                                              "src": "4599:15:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            {
                                              "id": 240,
                                              "name": "owner",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 205,
                                              "src": "4616:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 241,
                                              "name": "spender",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 207,
                                              "src": "4623:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 242,
                                              "name": "value",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 209,
                                              "src": "4632:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "id": 246,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "UnaryOperation",
                                              "operator": "++",
                                              "prefix": false,
                                              "src": "4639:15:0",
                                              "subExpression": {
                                                "baseExpression": {
                                                  "id": 243,
                                                  "name": "nonces",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 49,
                                                  "src": "4639:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                    "typeString": "mapping(address => uint256)"
                                                  }
                                                },
                                                "id": 245,
                                                "indexExpression": {
                                                  "id": 244,
                                                  "name": "owner",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 205,
                                                  "src": "4646:5:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": true,
                                                "nodeType": "IndexAccess",
                                                "src": "4639:13:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "id": 247,
                                              "name": "deadline",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 211,
                                              "src": "4656:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 237,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "4588:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 238,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encode",
                                            "nodeType": "MemberAccess",
                                            "src": "4588:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 248,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4588:77:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 236,
                                        "name": "keccak256",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -8,
                                        "src": "4578:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (bytes memory) pure returns (bytes32)"
                                        }
                                      },
                                      "id": 249,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4578:88:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                        "typeString": "literal_string hex\"1901\""
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 231,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "4468:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 232,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "4468:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 250,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4468:216:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 230,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "4441:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4441:257:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4424:274:0"
                          },
                          {
                            "assignments": [
                              254
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 254,
                                "mutability": "mutable",
                                "name": "recoveredAddress",
                                "nameLocation": "4721:16:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 284,
                                "src": "4713:24:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 253,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4713:7:0",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 261,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 256,
                                  "name": "digest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 229,
                                  "src": "4750:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 257,
                                  "name": "v",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 213,
                                  "src": "4758:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                {
                                  "id": 258,
                                  "name": "r",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 215,
                                  "src": "4761:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 259,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 217,
                                  "src": "4764:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 255,
                                "name": "ecrecover",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -6,
                                "src": "4740:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                                  "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                                }
                              },
                              "id": 260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4740:26:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4713:53:0"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 272,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 268,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 263,
                                      "name": "recoveredAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 254,
                                      "src": "4789:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 266,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4817:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 265,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4809:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 264,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4809:7:0",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 267,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4809:10:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "4789:30:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 271,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 269,
                                      "name": "recoveredAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 254,
                                      "src": "4823:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 270,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 205,
                                      "src": "4843:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "4823:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "4789:59:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "494e56414c49445f5349474e4552",
                                  "id": 273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4850:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c",
                                    "typeString": "literal_string \"INVALID_SIGNER\""
                                  },
                                  "value": "INVALID_SIGNER"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c",
                                    "typeString": "literal_string \"INVALID_SIGNER\""
                                  }
                                ],
                                "id": 262,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "4781:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4781:86:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 275,
                            "nodeType": "ExpressionStatement",
                            "src": "4781:86:0"
                          },
                          {
                            "expression": {
                              "id": 282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 276,
                                    "name": "allowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 36,
                                    "src": "4882:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 279,
                                  "indexExpression": {
                                    "id": 277,
                                    "name": "recoveredAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 254,
                                    "src": "4892:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4882:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 280,
                                "indexExpression": {
                                  "id": 278,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 207,
                                  "src": "4910:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "4882:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 281,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 209,
                                "src": "4921:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4882:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 283,
                            "nodeType": "ExpressionStatement",
                            "src": "4882:44:0"
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 286,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 205,
                              "src": "4961:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 287,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 207,
                              "src": "4968:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 288,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 209,
                              "src": "4977:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 285,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "4952:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4952:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 290,
                        "nodeType": "EmitStatement",
                        "src": "4947:36:0"
                      }
                    ]
                  },
                  "functionSelector": "d505accf",
                  "id": 292,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "4006:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "4030:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "4022:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4022:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4053:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "4045:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4045:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4078:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "4070:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4070:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "4101:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "4093:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4093:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 213,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "4125:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "4119:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4119:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 215,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "4144:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "4136:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4136:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "4163:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "4155:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4155:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4012:158:0"
                  },
                  "returnParameters": {
                    "id": 219,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4186:0:0"
                  },
                  "scope": 394,
                  "src": "3997:993:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 306,
                    "nodeType": "Block",
                    "src": "5062:111:0",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 297,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5079:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "chainid",
                              "nodeType": "MemberAccess",
                              "src": "5079:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 299,
                              "name": "INITIAL_CHAIN_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "5096:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5079:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 302,
                              "name": "computeDomainSeparator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "5142:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                                "typeString": "function () view returns (bytes32)"
                              }
                            },
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5142:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "5079:87:0",
                          "trueExpression": {
                            "id": 301,
                            "name": "INITIAL_DOMAIN_SEPARATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "5115:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 296,
                        "id": 305,
                        "nodeType": "Return",
                        "src": "5072:94:0"
                      }
                    ]
                  },
                  "functionSelector": "3644e515",
                  "id": 307,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nameLocation": "5005:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5021:2:0"
                  },
                  "returnParameters": {
                    "id": 296,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 295,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 307,
                        "src": "5053:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5053:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5052:9:0"
                  },
                  "scope": 394,
                  "src": "4996:177:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 336,
                    "nodeType": "Block",
                    "src": "5253:372:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                      "id": 316,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5351:84:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                        "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                      },
                                      "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                        "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                      }
                                    ],
                                    "id": 315,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "5341:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5341:95:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 321,
                                          "name": "name",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 20,
                                          "src": "5474:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                          }
                                        ],
                                        "id": 320,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5468:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 319,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5468:5:0",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 322,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5468:11:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes storage pointer"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes storage pointer"
                                      }
                                    ],
                                    "id": 318,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "5458:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5458:22:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 325,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5512:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                        "typeString": "literal_string \"1\""
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                        "typeString": "literal_string \"1\""
                                      }
                                    ],
                                    "id": 324,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "5502:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5502:14:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 327,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5538:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "chainid",
                                  "nodeType": "MemberAccess",
                                  "src": "5538:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 331,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5581:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$394",
                                        "typeString": "contract ERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ERC20_$394",
                                        "typeString": "contract ERC20"
                                      }
                                    ],
                                    "id": 330,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5573:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 329,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5573:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5573:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 313,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5309:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "5309:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5309:295:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 312,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "5282:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5282:336:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 311,
                        "id": 335,
                        "nodeType": "Return",
                        "src": "5263:355:0"
                      }
                    ]
                  },
                  "id": 337,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "computeDomainSeparator",
                  "nameLocation": "5188:22:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 308,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5210:2:0"
                  },
                  "returnParameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 310,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 337,
                        "src": "5244:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5244:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5243:9:0"
                  },
                  "scope": 394,
                  "src": "5179:446:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 364,
                    "nodeType": "Block",
                    "src": "5879:265:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 344,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "5889:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 345,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 341,
                            "src": "5904:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5889:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 347,
                        "nodeType": "ExpressionStatement",
                        "src": "5889:21:0"
                      },
                      {
                        "id": 354,
                        "nodeType": "UncheckedBlock",
                        "src": "6032:58:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 348,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "6056:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 350,
                                "indexExpression": {
                                  "id": 349,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 339,
                                  "src": "6066:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "6056:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "id": 351,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 341,
                                "src": "6073:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6056:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 353,
                            "nodeType": "ExpressionStatement",
                            "src": "6056:23:0"
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 358,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6122:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6114:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 356,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6114:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6114:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 360,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "6126:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 361,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "6130:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 355,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "6105:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6105:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 363,
                        "nodeType": "EmitStatement",
                        "src": "6100:37:0"
                      }
                    ]
                  },
                  "id": 365,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "5828:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5842:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "5834:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5834:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "5854:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "5846:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5846:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5833:28:0"
                  },
                  "returnParameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5879:0:0"
                  },
                  "scope": 394,
                  "src": "5819:325:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 392,
                    "nodeType": "Block",
                    "src": "6212:266:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 372,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "6222:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 374,
                            "indexExpression": {
                              "id": 373,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "6232:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6222:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 375,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 369,
                            "src": "6241:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6222:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 377,
                        "nodeType": "ExpressionStatement",
                        "src": "6222:25:0"
                      },
                      {
                        "id": 382,
                        "nodeType": "UncheckedBlock",
                        "src": "6366:56:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 378,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "6390:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "-=",
                              "rightHandSide": {
                                "id": 379,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 369,
                                "src": "6405:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6390:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 381,
                            "nodeType": "ExpressionStatement",
                            "src": "6390:21:0"
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 384,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "6446:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6460:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6452:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 385,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6452:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6452:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 389,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 369,
                              "src": "6464:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 383,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "6437:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6437:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 391,
                        "nodeType": "EmitStatement",
                        "src": "6432:39:0"
                      }
                    ]
                  },
                  "id": 393,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "6159:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 370,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 367,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6173:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 393,
                        "src": "6165:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6165:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 369,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6187:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 393,
                        "src": "6179:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 368,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6179:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6164:30:0"
                  },
                  "returnParameters": {
                    "id": 371,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6212:0:0"
                  },
                  "scope": 394,
                  "src": "6150:328:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 395,
              "src": "471:6009:0",
              "usedErrors": []
            }
          ],
          "src": "42:6439:0"
        },
        "id": 0
      },
      "@rari-capital/solmate/src/utils/SafeTransferLib.sol": {
        "ast": {
          "absolutePath": "@rari-capital/solmate/src/utils/SafeTransferLib.sol",
          "exportedSymbols": {
            "ERC20": [
              394
            ],
            "SafeTransferLib": [
              494
            ]
          },
          "id": 495,
          "license": "AGPL-3.0-only",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 396,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "42:24:1"
            },
            {
              "absolutePath": "@rari-capital/solmate/src/tokens/ERC20.sol",
              "file": "../tokens/ERC20.sol",
              "id": 398,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 495,
              "sourceUnit": 395,
              "src": "68:42:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 397,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "76:5:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 399,
                "nodeType": "StructuredDocumentation",
                "src": "112:459:1",
                "text": "@notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol)\n @author Modified from Gnosis (https://github.com/gnosis/gp-v2-contracts/blob/main/src/contracts/libraries/GPv2SafeERC20.sol)\n @dev Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer."
              },
              "fullyImplemented": true,
              "id": 494,
              "linearizedBaseContracts": [
                494
              ],
              "name": "SafeTransferLib",
              "nameLocation": "579:15:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 415,
                    "nodeType": "Block",
                    "src": "846:243:1",
                    "statements": [
                      {
                        "assignments": [
                          407
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 407,
                            "mutability": "mutable",
                            "name": "callStatus",
                            "nameLocation": "861:10:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 415,
                            "src": "856:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 406,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "856:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 408,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "856:15:1"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "891:139:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "971:49:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "990:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "990:5:1"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "997:2:1"
                                  },
                                  {
                                    "name": "amount",
                                    "nodeType": "YulIdentifier",
                                    "src": "1001:6:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1009:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1012:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1015:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1018:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "985:4:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "985:35:1"
                              },
                              "variableNames": [
                                {
                                  "name": "callStatus",
                                  "nodeType": "YulIdentifier",
                                  "src": "971:10:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 403,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1001:6:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 407,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "971:10:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 401,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "997:2:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 409,
                        "nodeType": "InlineAssembly",
                        "src": "882:148:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 411,
                              "name": "callStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 407,
                              "src": "1048:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4554485f5452414e534645525f4641494c4544",
                              "id": 412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1060:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29",
                                "typeString": "literal_string \"ETH_TRANSFER_FAILED\""
                              },
                              "value": "ETH_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29",
                                "typeString": "literal_string \"ETH_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 410,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1040:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1040:42:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 414,
                        "nodeType": "ExpressionStatement",
                        "src": "1040:42:1"
                      }
                    ]
                  },
                  "id": 416,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferETH",
                  "nameLocation": "793:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 401,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "817:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 416,
                        "src": "809:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 400,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "829:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 416,
                        "src": "821:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:28:1"
                  },
                  "returnParameters": {
                    "id": 405,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "846:0:1"
                  },
                  "scope": 494,
                  "src": "784:305:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 439,
                    "nodeType": "Block",
                    "src": "1407:1090:1",
                    "statements": [
                      {
                        "assignments": [
                          429
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 429,
                            "mutability": "mutable",
                            "name": "callStatus",
                            "nameLocation": "1422:10:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 439,
                            "src": "1417:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 428,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1417:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 430,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1417:15:1"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1452:951:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1516:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1547:4:1",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1541:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1541:11:1"
                              },
                              "variables": [
                                {
                                  "name": "freeMemoryPointer",
                                  "nodeType": "YulTypedName",
                                  "src": "1520:17:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "freeMemoryPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "1645:17:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1664:66:1",
                                    "type": "",
                                    "value": "0x23b872dd00000000000000000000000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1638:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1638:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1638:93:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "freeMemoryPointer",
                                        "nodeType": "YulIdentifier",
                                        "src": "1792:17:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1811:1:1",
                                        "type": "",
                                        "value": "4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1788:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1788:25:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "from",
                                        "nodeType": "YulIdentifier",
                                        "src": "1819:4:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1825:42:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1815:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1815:53:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1781:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1781:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1781:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "freeMemoryPointer",
                                        "nodeType": "YulIdentifier",
                                        "src": "1933:17:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1952:2:1",
                                        "type": "",
                                        "value": "36"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1929:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1929:26:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "to",
                                        "nodeType": "YulIdentifier",
                                        "src": "1961:2:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1965:42:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1957:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1957:51:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1922:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1922:87:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1922:87:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "freeMemoryPointer",
                                        "nodeType": "YulIdentifier",
                                        "src": "2071:17:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2090:2:1",
                                        "type": "",
                                        "value": "68"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2067:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2067:26:1"
                                  },
                                  {
                                    "name": "amount",
                                    "nodeType": "YulIdentifier",
                                    "src": "2095:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2060:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2060:42:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2060:42:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2328:65:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "2347:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2347:5:1"
                                  },
                                  {
                                    "name": "token",
                                    "nodeType": "YulIdentifier",
                                    "src": "2354:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2361:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "freeMemoryPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "2364:17:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2383:3:1",
                                    "type": "",
                                    "value": "100"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2388:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2391:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "2342:4:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2342:51:1"
                              },
                              "variableNames": [
                                {
                                  "name": "callStatus",
                                  "nodeType": "YulIdentifier",
                                  "src": "2328:10:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 425,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2095:6:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 429,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2328:10:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 421,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1819:4:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 423,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1961:2:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 419,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2354:5:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 431,
                        "nodeType": "InlineAssembly",
                        "src": "1443:960:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 434,
                                  "name": "callStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 429,
                                  "src": "2454:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 433,
                                "name": "didLastOptionalReturnCallSucceed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 493,
                                "src": "2421:32:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_bool_$",
                                  "typeString": "function (bool) pure returns (bool)"
                                }
                              },
                              "id": 435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2421:44:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5452414e534645525f46524f4d5f4641494c4544",
                              "id": 436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2467:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_77631768048ee92f9dcf4b9b9d762877d6b9723214862c733f0596708fc219b7",
                                "typeString": "literal_string \"TRANSFER_FROM_FAILED\""
                              },
                              "value": "TRANSFER_FROM_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_77631768048ee92f9dcf4b9b9d762877d6b9723214862c733f0596708fc219b7",
                                "typeString": "literal_string \"TRANSFER_FROM_FAILED\""
                              }
                            ],
                            "id": 432,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2413:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2413:77:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 438,
                        "nodeType": "ExpressionStatement",
                        "src": "2413:77:1"
                      }
                    ]
                  },
                  "id": 440,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1288:16:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 426,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 419,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1320:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "1314:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$394",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "id": 418,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 417,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "1314:5:1"
                          },
                          "referencedDeclaration": 394,
                          "src": "1314:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$394",
                            "typeString": "contract ERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1343:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "1335:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1335:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 423,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1365:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "1357:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1357:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 425,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1385:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "1377:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 424,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1377:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1304:93:1"
                  },
                  "returnParameters": {
                    "id": 427,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1407:0:1"
                  },
                  "scope": 494,
                  "src": "1279:1218:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 461,
                    "nodeType": "Block",
                    "src": "2605:941:1",
                    "statements": [
                      {
                        "assignments": [
                          451
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 451,
                            "mutability": "mutable",
                            "name": "callStatus",
                            "nameLocation": "2620:10:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 461,
                            "src": "2615:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 450,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2615:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 452,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2615:15:1"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2650:807:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2714:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2745:4:1",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2739:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2739:11:1"
                              },
                              "variables": [
                                {
                                  "name": "freeMemoryPointer",
                                  "nodeType": "YulTypedName",
                                  "src": "2718:17:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "freeMemoryPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "2843:17:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2862:66:1",
                                    "type": "",
                                    "value": "0xa9059cbb00000000000000000000000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2836:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2836:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2836:93:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "freeMemoryPointer",
                                        "nodeType": "YulIdentifier",
                                        "src": "2990:17:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3009:1:1",
                                        "type": "",
                                        "value": "4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2986:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2986:25:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "to",
                                        "nodeType": "YulIdentifier",
                                        "src": "3017:2:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3021:42:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3013:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3013:51:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2979:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2979:86:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2979:86:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "freeMemoryPointer",
                                        "nodeType": "YulIdentifier",
                                        "src": "3127:17:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3146:2:1",
                                        "type": "",
                                        "value": "36"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3123:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3123:26:1"
                                  },
                                  {
                                    "name": "amount",
                                    "nodeType": "YulIdentifier",
                                    "src": "3151:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3116:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3116:42:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3116:42:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3383:64:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "3402:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3402:5:1"
                                  },
                                  {
                                    "name": "token",
                                    "nodeType": "YulIdentifier",
                                    "src": "3409:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3416:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "freeMemoryPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "3419:17:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3438:2:1",
                                    "type": "",
                                    "value": "68"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3442:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3445:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "3397:4:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3397:50:1"
                              },
                              "variableNames": [
                                {
                                  "name": "callStatus",
                                  "nodeType": "YulIdentifier",
                                  "src": "3383:10:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 447,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3151:6:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 451,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3383:10:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 445,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3017:2:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 443,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3409:5:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 453,
                        "nodeType": "InlineAssembly",
                        "src": "2641:816:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 456,
                                  "name": "callStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 451,
                                  "src": "3508:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 455,
                                "name": "didLastOptionalReturnCallSucceed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 493,
                                "src": "3475:32:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_bool_$",
                                  "typeString": "function (bool) pure returns (bool)"
                                }
                              },
                              "id": 457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3475:44:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5452414e534645525f4641494c4544",
                              "id": 458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3521:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72",
                                "typeString": "literal_string \"TRANSFER_FAILED\""
                              },
                              "value": "TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72",
                                "typeString": "literal_string \"TRANSFER_FAILED\""
                              }
                            ],
                            "id": 454,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3467:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3467:72:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 460,
                        "nodeType": "ExpressionStatement",
                        "src": "3467:72:1"
                      }
                    ]
                  },
                  "id": 462,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nameLocation": "2512:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 448,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 443,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2540:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "2534:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$394",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "id": 442,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 441,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "2534:5:1"
                          },
                          "referencedDeclaration": 394,
                          "src": "2534:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$394",
                            "typeString": "contract ERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 445,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2563:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "2555:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 444,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2555:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 447,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2583:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "2575:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 446,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2575:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2524:71:1"
                  },
                  "returnParameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2605:0:1"
                  },
                  "scope": 494,
                  "src": "2503:1043:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 483,
                    "nodeType": "Block",
                    "src": "3653:940:1",
                    "statements": [
                      {
                        "assignments": [
                          473
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 473,
                            "mutability": "mutable",
                            "name": "callStatus",
                            "nameLocation": "3668:10:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 483,
                            "src": "3663:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 472,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3663:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 474,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3663:15:1"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3698:807:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3762:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3793:4:1",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3787:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3787:11:1"
                              },
                              "variables": [
                                {
                                  "name": "freeMemoryPointer",
                                  "nodeType": "YulTypedName",
                                  "src": "3766:17:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "freeMemoryPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "3891:17:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3910:66:1",
                                    "type": "",
                                    "value": "0x095ea7b300000000000000000000000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3884:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3884:93:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3884:93:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "freeMemoryPointer",
                                        "nodeType": "YulIdentifier",
                                        "src": "4038:17:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4057:1:1",
                                        "type": "",
                                        "value": "4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4034:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4034:25:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "to",
                                        "nodeType": "YulIdentifier",
                                        "src": "4065:2:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4069:42:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4061:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4061:51:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4027:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4027:86:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4027:86:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "freeMemoryPointer",
                                        "nodeType": "YulIdentifier",
                                        "src": "4175:17:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4194:2:1",
                                        "type": "",
                                        "value": "36"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4171:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4171:26:1"
                                  },
                                  {
                                    "name": "amount",
                                    "nodeType": "YulIdentifier",
                                    "src": "4199:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4164:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4164:42:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4164:42:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4431:64:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "4450:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4450:5:1"
                                  },
                                  {
                                    "name": "token",
                                    "nodeType": "YulIdentifier",
                                    "src": "4457:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4464:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "freeMemoryPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "4467:17:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4486:2:1",
                                    "type": "",
                                    "value": "68"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4490:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4493:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "4445:4:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4445:50:1"
                              },
                              "variableNames": [
                                {
                                  "name": "callStatus",
                                  "nodeType": "YulIdentifier",
                                  "src": "4431:10:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 469,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4199:6:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 473,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4431:10:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 467,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4065:2:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 465,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4457:5:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 475,
                        "nodeType": "InlineAssembly",
                        "src": "3689:816:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 478,
                                  "name": "callStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 473,
                                  "src": "4556:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 477,
                                "name": "didLastOptionalReturnCallSucceed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 493,
                                "src": "4523:32:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_bool_$",
                                  "typeString": "function (bool) pure returns (bool)"
                                }
                              },
                              "id": 479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4523:44:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "415050524f56455f4641494c4544",
                              "id": 480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4569:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cd400c5237ae346977ee020ef8d0d26a880c07edf7eba69a8848f0d31e9a88f2",
                                "typeString": "literal_string \"APPROVE_FAILED\""
                              },
                              "value": "APPROVE_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cd400c5237ae346977ee020ef8d0d26a880c07edf7eba69a8848f0d31e9a88f2",
                                "typeString": "literal_string \"APPROVE_FAILED\""
                              }
                            ],
                            "id": 476,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4515:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4515:71:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 482,
                        "nodeType": "ExpressionStatement",
                        "src": "4515:71:1"
                      }
                    ]
                  },
                  "id": 484,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeApprove",
                  "nameLocation": "3561:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 470,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 465,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3588:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "3582:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$394",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "id": 464,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 463,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "3582:5:1"
                          },
                          "referencedDeclaration": 394,
                          "src": "3582:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$394",
                            "typeString": "contract ERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 467,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3611:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "3603:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 466,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3603:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 469,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3631:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "3623:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 468,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3623:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3572:71:1"
                  },
                  "returnParameters": {
                    "id": 471,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3653:0:1"
                  },
                  "scope": 494,
                  "src": "3552:1041:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 492,
                    "nodeType": "Block",
                    "src": "4881:946:1",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "4900:921:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4967:38:1",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "returndatasize",
                                  "nodeType": "YulIdentifier",
                                  "src": "4989:14:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4989:16:1"
                              },
                              "variables": [
                                {
                                  "name": "returnDataSize",
                                  "nodeType": "YulTypedName",
                                  "src": "4971:14:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5078:216:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5167:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5170:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "name": "returnDataSize",
                                          "nodeType": "YulIdentifier",
                                          "src": "5173:14:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "returndatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "5152:14:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5152:36:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5152:36:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5262:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "name": "returnDataSize",
                                          "nodeType": "YulIdentifier",
                                          "src": "5265:14:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5255:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5255:25:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5255:25:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "callStatus",
                                    "nodeType": "YulIdentifier",
                                    "src": "5066:10:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5059:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5059:18:1"
                              },
                              "nodeType": "YulIf",
                              "src": "5056:2:1"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "5350:234:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "5436:1:1",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "5439:1:1",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "name": "returnDataSize",
                                              "nodeType": "YulIdentifier",
                                              "src": "5442:14:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "returndatacopy",
                                            "nodeType": "YulIdentifier",
                                            "src": "5421:14:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5421:36:1"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "5421:36:1"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "5535:35:1",
                                        "value": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "5566:1:1",
                                                      "type": "",
                                                      "value": "0"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mload",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5560:5:1"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "5560:8:1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "iszero",
                                                "nodeType": "YulIdentifier",
                                                "src": "5553:6:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "5553:16:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "iszero",
                                            "nodeType": "YulIdentifier",
                                            "src": "5546:6:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5546:24:1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "success",
                                            "nodeType": "YulIdentifier",
                                            "src": "5535:7:1"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "5342:242:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5347:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "5604:89:1",
                                    "statements": [
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "5667:12:1",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5678:1:1",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "success",
                                            "nodeType": "YulIdentifier",
                                            "src": "5667:7:1"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "5597:96:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5602:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "5714:97:1",
                                    "statements": [
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "5785:12:1",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5796:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "success",
                                            "nodeType": "YulIdentifier",
                                            "src": "5785:7:1"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "5706:105:1",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "returnDataSize",
                                "nodeType": "YulIdentifier",
                                "src": "5315:14:1"
                              },
                              "nodeType": "YulSwitch",
                              "src": "5308:503:1"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 486,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5066:10:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 489,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5535:7:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 489,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5667:7:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 489,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5785:7:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 491,
                        "nodeType": "InlineAssembly",
                        "src": "4891:930:1"
                      }
                    ]
                  },
                  "id": 493,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "didLastOptionalReturnCallSucceed",
                  "nameLocation": "4795:32:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 486,
                        "mutability": "mutable",
                        "name": "callStatus",
                        "nameLocation": "4833:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 493,
                        "src": "4828:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 485,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4828:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4827:17:1"
                  },
                  "returnParameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "4872:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 493,
                        "src": "4867:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4867:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4866:14:1"
                  },
                  "scope": 494,
                  "src": "4786:1041:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 495,
              "src": "571:5258:1",
              "usedErrors": []
            }
          ],
          "src": "42:5788:1"
        },
        "id": 1
      },
      "contracts/SplitMain.sol": {
        "ast": {
          "absolutePath": "contracts/SplitMain.sol",
          "exportedSymbols": {
            "Clones": [
              2384
            ],
            "ERC20": [
              394
            ],
            "ISplitMain": [
              2300
            ],
            "InvalidNewController": [
              553
            ],
            "InvalidSplit__AccountsAndAllocationsMismatch": [
              523
            ],
            "InvalidSplit__AccountsOutOfOrder": [
              533
            ],
            "InvalidSplit__AllocationMustBePositive": [
              538
            ],
            "InvalidSplit__InvalidAllocationsSum": [
              528
            ],
            "InvalidSplit__InvalidDistributorFee": [
              543
            ],
            "InvalidSplit__InvalidHash": [
              548
            ],
            "InvalidSplit__TooFewAccounts": [
              516
            ],
            "SafeTransferLib": [
              494
            ],
            "SplitMain": [
              1904
            ],
            "SplitWallet": [
              2002
            ],
            "Unauthorized": [
              511
            ]
          },
          "id": 1905,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 496,
              "literals": [
                "solidity",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:22:2"
            },
            {
              "absolutePath": "contracts/interfaces/ISplitMain.sol",
              "file": "contracts/interfaces/ISplitMain.sol",
              "id": 498,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1905,
              "sourceUnit": 2301,
              "src": "69:63:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 497,
                    "name": "ISplitMain",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "77:10:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/SplitWallet.sol",
              "file": "contracts/SplitWallet.sol",
              "id": 500,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1905,
              "sourceUnit": 2003,
              "src": "133:54:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 499,
                    "name": "SplitWallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "141:11:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libraries/Clones.sol",
              "file": "contracts/libraries/Clones.sol",
              "id": 502,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1905,
              "sourceUnit": 2385,
              "src": "188:54:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 501,
                    "name": "Clones",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "196:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@rari-capital/solmate/src/tokens/ERC20.sol",
              "file": "@rari-capital/solmate/src/tokens/ERC20.sol",
              "id": 504,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1905,
              "sourceUnit": 395,
              "src": "243:65:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 503,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "251:5:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@rari-capital/solmate/src/utils/SafeTransferLib.sol",
              "file": "@rari-capital/solmate/src/utils/SafeTransferLib.sol",
              "id": 506,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1905,
              "sourceUnit": 495,
              "src": "309:84:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 505,
                    "name": "SafeTransferLib",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "317:15:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "documentation": {
                "id": 507,
                "nodeType": "StructuredDocumentation",
                "src": "9934:78:2",
                "text": "@notice Unauthorized sender `sender`\n @param sender Transaction sender"
              },
              "id": 511,
              "name": "Unauthorized",
              "nameLocation": "10018:12:2",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 510,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 509,
                    "mutability": "mutable",
                    "name": "sender",
                    "nameLocation": "10039:6:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 511,
                    "src": "10031:14:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 508,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10031:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "10030:16:2"
              },
              "src": "10012:35:2"
            },
            {
              "documentation": {
                "id": 512,
                "nodeType": "StructuredDocumentation",
                "src": "10048:129:2",
                "text": "@notice Invalid number of accounts `accountsLength`, must have at least 2\n @param accountsLength Length of accounts array"
              },
              "id": 516,
              "name": "InvalidSplit__TooFewAccounts",
              "nameLocation": "10183:28:2",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 515,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 514,
                    "mutability": "mutable",
                    "name": "accountsLength",
                    "nameLocation": "10220:14:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 516,
                    "src": "10212:22:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 513,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10212:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "10211:24:2"
              },
              "src": "10177:59:2"
            },
            {
              "documentation": {
                "id": 517,
                "nodeType": "StructuredDocumentation",
                "src": "10237:228:2",
                "text": "@notice Array lengths of accounts & percentAllocations don't match (`accountsLength` != `allocationsLength`)\n @param accountsLength Length of accounts array\n @param allocationsLength Length of percentAllocations array"
              },
              "id": 523,
              "name": "InvalidSplit__AccountsAndAllocationsMismatch",
              "nameLocation": "10471:44:2",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 522,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 519,
                    "mutability": "mutable",
                    "name": "accountsLength",
                    "nameLocation": "10527:14:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 523,
                    "src": "10519:22:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 518,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10519:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 521,
                    "mutability": "mutable",
                    "name": "allocationsLength",
                    "nameLocation": "10553:17:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 523,
                    "src": "10545:25:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 520,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10545:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "10515:57:2"
              },
              "src": "10465:108:2"
            },
            {
              "documentation": {
                "id": 524,
                "nodeType": "StructuredDocumentation",
                "src": "10574:148:2",
                "text": "@notice Invalid percentAllocations sum `allocationsSum` must equal `PERCENTAGE_SCALE`\n @param allocationsSum Sum of percentAllocations array"
              },
              "id": 528,
              "name": "InvalidSplit__InvalidAllocationsSum",
              "nameLocation": "10728:35:2",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 527,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 526,
                    "mutability": "mutable",
                    "name": "allocationsSum",
                    "nameLocation": "10771:14:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 528,
                    "src": "10764:21:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "typeName": {
                      "id": 525,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "10764:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "10763:23:2"
              },
              "src": "10722:65:2"
            },
            {
              "documentation": {
                "id": 529,
                "nodeType": "StructuredDocumentation",
                "src": "10788:96:2",
                "text": "@notice Invalid accounts ordering at `index`\n @param index Index of out-of-order account"
              },
              "id": 533,
              "name": "InvalidSplit__AccountsOutOfOrder",
              "nameLocation": "10890:32:2",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 532,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 531,
                    "mutability": "mutable",
                    "name": "index",
                    "nameLocation": "10931:5:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 533,
                    "src": "10923:13:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 530,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10923:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "10922:15:2"
              },
              "src": "10884:54:2"
            },
            {
              "documentation": {
                "id": 534,
                "nodeType": "StructuredDocumentation",
                "src": "10939:106:2",
                "text": "@notice Invalid percentAllocation of zero at `index`\n @param index Index of zero percentAllocation"
              },
              "id": 538,
              "name": "InvalidSplit__AllocationMustBePositive",
              "nameLocation": "11051:38:2",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 537,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 536,
                    "mutability": "mutable",
                    "name": "index",
                    "nameLocation": "11098:5:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 538,
                    "src": "11090:13:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 535,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11090:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "11089:15:2"
              },
              "src": "11045:60:2"
            },
            {
              "documentation": {
                "id": 539,
                "nodeType": "StructuredDocumentation",
                "src": "11106:141:2",
                "text": "@notice Invalid distributorFee `distributorFee` cannot be greater than 10% (1e5)\n @param distributorFee Invalid distributorFee amount"
              },
              "id": 543,
              "name": "InvalidSplit__InvalidDistributorFee",
              "nameLocation": "11253:35:2",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 542,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 541,
                    "mutability": "mutable",
                    "name": "distributorFee",
                    "nameLocation": "11296:14:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 543,
                    "src": "11289:21:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "typeName": {
                      "id": 540,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "11289:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "11288:23:2"
              },
              "src": "11247:65:2"
            },
            {
              "documentation": {
                "id": 544,
                "nodeType": "StructuredDocumentation",
                "src": "11313:124:2",
                "text": "@notice Invalid hash `hash` from split data (accounts, percentAllocations, distributorFee)\n @param hash Invalid hash"
              },
              "id": 548,
              "name": "InvalidSplit__InvalidHash",
              "nameLocation": "11443:25:2",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 547,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 546,
                    "mutability": "mutable",
                    "name": "hash",
                    "nameLocation": "11477:4:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 548,
                    "src": "11469:12:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 545,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "11469:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "11468:14:2"
              },
              "src": "11437:46:2"
            },
            {
              "documentation": {
                "id": 549,
                "nodeType": "StructuredDocumentation",
                "src": "11484:126:2",
                "text": "@notice Invalid new controlling address `newController` for mutable split\n @param newController Invalid new controller"
              },
              "id": 553,
              "name": "InvalidNewController",
              "nameLocation": "11616:20:2",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 552,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 551,
                    "mutability": "mutable",
                    "name": "newController",
                    "nameLocation": "11645:13:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 553,
                    "src": "11637:21:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 550,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "11637:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "11636:23:2"
              },
              "src": "11610:50:2"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 555,
                    "name": "ISplitMain",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2300,
                    "src": "12239:10:2"
                  },
                  "id": 556,
                  "nodeType": "InheritanceSpecifier",
                  "src": "12239:10:2"
                }
              ],
              "contractDependencies": [
                2002
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 554,
                "nodeType": "StructuredDocumentation",
                "src": "11662:554:2",
                "text": " @title SplitMain\n @author 0xSplits <will@0xSplits.xyz>\n @notice A composable and gas-efficient protocol for deploying splitter contracts.\n @dev Split recipients, ownerships, and keeper fees are stored onchain as calldata & re-passed as args / validated\n via hashing when needed. Each split gets its own address & proxy for maximum composability with other contracts onchain.\n For these proxies, we extended EIP-1167 Minimal Proxy Contract to avoid `DELEGATECALL` inside `receive()` to accept\n hard gas-capped `sends` & `transfers`."
              },
              "fullyImplemented": true,
              "id": 1904,
              "linearizedBaseContracts": [
                1904,
                2300
              ],
              "name": "SplitMain",
              "nameLocation": "12226:9:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 559,
                  "libraryName": {
                    "id": 557,
                    "name": "SafeTransferLib",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 494,
                    "src": "12260:15:2"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "12254:34:2",
                  "typeName": {
                    "id": 558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12280:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                {
                  "id": 563,
                  "libraryName": {
                    "id": 560,
                    "name": "SafeTransferLib",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 494,
                    "src": "12297:15:2"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "12291:32:2",
                  "typeName": {
                    "id": 562,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 561,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 394,
                      "src": "12317:5:2"
                    },
                    "referencedDeclaration": 394,
                    "src": "12317:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$394",
                      "typeString": "contract ERC20"
                    }
                  }
                },
                {
                  "canonicalName": "SplitMain.Split",
                  "id": 570,
                  "members": [
                    {
                      "constant": false,
                      "id": 565,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "12415:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 570,
                      "src": "12407:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 564,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12407:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 567,
                      "mutability": "mutable",
                      "name": "controller",
                      "nameLocation": "12433:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 570,
                      "src": "12425:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 566,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12425:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 569,
                      "mutability": "mutable",
                      "name": "newPotentialController",
                      "nameLocation": "12457:22:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 570,
                      "src": "12449:30:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 568,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12449:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Split",
                  "nameLocation": "12395:5:2",
                  "nodeType": "StructDefinition",
                  "scope": 1904,
                  "src": "12388:96:2",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 571,
                    "nodeType": "StructuredDocumentation",
                    "src": "12565:66:2",
                    "text": "@notice constant to scale uints into percentages (1e6 == 100%)"
                  },
                  "functionSelector": "3f26479e",
                  "id": 574,
                  "mutability": "constant",
                  "name": "PERCENTAGE_SCALE",
                  "nameLocation": "12658:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1904,
                  "src": "12634:46:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12634:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "316536",
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12677:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    },
                    "value": "1e6"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 575,
                    "nodeType": "StructuredDocumentation",
                    "src": "12684:65:2",
                    "text": "@notice maximum distributor fee; 1e5 = 10% * PERCENTAGE_SCALE"
                  },
                  "id": 578,
                  "mutability": "constant",
                  "name": "MAX_DISTRIBUTOR_FEE",
                  "nameLocation": "12778:19:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1904,
                  "src": "12752:51:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12752:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "316535",
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12800:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000_by_1",
                      "typeString": "int_const 100000"
                    },
                    "value": "1e5"
                  },
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    2075
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 579,
                    "nodeType": "StructuredDocumentation",
                    "src": "12807:62:2",
                    "text": "@notice address of wallet implementation for split proxies"
                  },
                  "functionSelector": "8117abc1",
                  "id": 582,
                  "mutability": "immutable",
                  "name": "walletImplementation",
                  "nameLocation": "12906:20:2",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 581,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "12897:8:2"
                  },
                  "scope": 1904,
                  "src": "12872:54:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12872:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 583,
                    "nodeType": "StructuredDocumentation",
                    "src": "12990:43:2",
                    "text": "@notice mapping to account ETH balances"
                  },
                  "id": 587,
                  "mutability": "mutable",
                  "name": "ethBalances",
                  "nameLocation": "13073:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1904,
                  "src": "13036:48:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 586,
                    "keyType": {
                      "id": 584,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13044:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "13036:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 585,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13055:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 588,
                    "nodeType": "StructuredDocumentation",
                    "src": "13088:45:2",
                    "text": "@notice mapping to account ERC20 balances"
                  },
                  "id": 595,
                  "mutability": "mutable",
                  "name": "erc20Balances",
                  "nameLocation": "13191:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1904,
                  "src": "13136:68:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_contract$_ERC20_$394_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(contract ERC20 => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 594,
                    "keyType": {
                      "id": 590,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 589,
                        "name": "ERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 394,
                        "src": "13144:5:2"
                      },
                      "referencedDeclaration": 394,
                      "src": "13144:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$394",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "13136:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_contract$_ERC20_$394_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(contract ERC20 => mapping(address => uint256))"
                    },
                    "valueType": {
                      "id": 593,
                      "keyType": {
                        "id": 591,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13161:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "13153:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 592,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13172:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 596,
                    "nodeType": "StructuredDocumentation",
                    "src": "13208:37:2",
                    "text": "@notice mapping to Split metadata"
                  },
                  "id": 601,
                  "mutability": "mutable",
                  "name": "splits",
                  "nameLocation": "13283:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1904,
                  "src": "13248:41:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                    "typeString": "mapping(address => struct SplitMain.Split)"
                  },
                  "typeName": {
                    "id": 600,
                    "keyType": {
                      "id": 597,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13256:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "13248:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                      "typeString": "mapping(address => struct SplitMain.Split)"
                    },
                    "valueType": {
                      "id": 599,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 598,
                        "name": "Split",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 570,
                        "src": "13267:5:2"
                      },
                      "referencedDeclaration": 570,
                      "src": "13267:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Split_$570_storage_ptr",
                        "typeString": "struct SplitMain.Split"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 620,
                    "nodeType": "Block",
                    "src": "13486:93:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 606,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "13496:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "13496:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 608,
                                "name": "splits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "13510:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                  "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                }
                              },
                              "id": 610,
                              "indexExpression": {
                                "id": 609,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 604,
                                "src": "13517:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13510:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Split_$570_storage",
                                "typeString": "struct SplitMain.Split storage ref"
                              }
                            },
                            "id": 611,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "controller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 567,
                            "src": "13510:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13496:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 618,
                        "nodeType": "IfStatement",
                        "src": "13492:75:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 614,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "13556:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "13556:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 613,
                              "name": "Unauthorized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 511,
                              "src": "13543:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13543:24:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 617,
                          "nodeType": "RevertStatement",
                          "src": "13536:31:2"
                        }
                      },
                      {
                        "id": 619,
                        "nodeType": "PlaceholderStatement",
                        "src": "13573:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 602,
                    "nodeType": "StructuredDocumentation",
                    "src": "13322:117:2",
                    "text": "@notice Reverts if the sender doesn't own the split `split`\n  @param split Address to check for control"
                  },
                  "id": 621,
                  "name": "onlySplitController",
                  "nameLocation": "13451:19:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 605,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 604,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "13479:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 621,
                        "src": "13471:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 603,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13471:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13470:15:2"
                  },
                  "src": "13442:137:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 640,
                    "nodeType": "Block",
                    "src": "13795:111:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 626,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "13805:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "13805:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 628,
                                "name": "splits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "13819:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                  "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                }
                              },
                              "id": 630,
                              "indexExpression": {
                                "id": 629,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 624,
                                "src": "13826:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13819:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Split_$570_storage",
                                "typeString": "struct SplitMain.Split storage ref"
                              }
                            },
                            "id": 631,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "newPotentialController",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 569,
                            "src": "13819:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13805:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 638,
                        "nodeType": "IfStatement",
                        "src": "13801:93:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 634,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "13883:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "13883:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 633,
                              "name": "Unauthorized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 511,
                              "src": "13870:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13870:24:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 637,
                          "nodeType": "RevertStatement",
                          "src": "13863:31:2"
                        }
                      },
                      {
                        "id": 639,
                        "nodeType": "PlaceholderStatement",
                        "src": "13900:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 622,
                    "nodeType": "StructuredDocumentation",
                    "src": "13583:153:2",
                    "text": "@notice Reverts if the sender isn't the new potential controller of split `split`\n  @param split Address to check for new potential control"
                  },
                  "id": 641,
                  "name": "onlySplitNewPotentialController",
                  "nameLocation": "13748:31:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "13788:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 641,
                        "src": "13780:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13780:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13779:15:2"
                  },
                  "src": "13739:167:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 756,
                    "nodeType": "Block",
                    "src": "14406:1305:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 652,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 645,
                              "src": "14416:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "14416:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14434:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "14416:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 661,
                        "nodeType": "IfStatement",
                        "src": "14412:83:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 657,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 645,
                                  "src": "14479:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "14479:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 656,
                              "name": "InvalidSplit__TooFewAccounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 516,
                              "src": "14450:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) pure"
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14450:45:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 660,
                          "nodeType": "RevertStatement",
                          "src": "14443:52:2"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 662,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 645,
                              "src": "14505:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "14505:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 664,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "14524:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                "typeString": "uint32[] memory"
                              }
                            },
                            "id": 665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "14524:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14505:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 674,
                        "nodeType": "IfStatement",
                        "src": "14501:175:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 668,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 645,
                                  "src": "14618:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "14618:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 670,
                                  "name": "percentAllocations",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 648,
                                  "src": "14643:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                    "typeString": "uint32[] memory"
                                  }
                                },
                                "id": 671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "14643:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 667,
                              "name": "InvalidSplit__AccountsAndAllocationsMismatch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 523,
                              "src": "14564:44:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14564:112:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 673,
                          "nodeType": "RevertStatement",
                          "src": "14557:119:2"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 676,
                                "name": "percentAllocations",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 648,
                                "src": "14757:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                  "typeString": "uint32[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                  "typeString": "uint32[] memory"
                                }
                              ],
                              "id": 675,
                              "name": "_getSum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1434,
                              "src": "14749:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_uint32_$",
                                "typeString": "function (uint32[] memory) pure returns (uint32)"
                              }
                            },
                            "id": 677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14749:27:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 678,
                            "name": "PERCENTAGE_SCALE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 574,
                            "src": "14780:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14749:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 686,
                        "nodeType": "IfStatement",
                        "src": "14745:130:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 682,
                                    "name": "percentAllocations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 648,
                                    "src": "14855:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                      "typeString": "uint32[] memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                      "typeString": "uint32[] memory"
                                    }
                                  ],
                                  "id": 681,
                                  "name": "_getSum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1434,
                                  "src": "14847:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_uint32_$",
                                    "typeString": "function (uint32[] memory) pure returns (uint32)"
                                  }
                                },
                                "id": 683,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14847:27:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 680,
                              "name": "InvalidSplit__InvalidAllocationsSum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 528,
                              "src": "14811:35:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint32_$returns$__$",
                                "typeString": "function (uint32) pure"
                              }
                            },
                            "id": 684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14811:64:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 685,
                          "nodeType": "RevertStatement",
                          "src": "14804:71:2"
                        }
                      },
                      {
                        "id": 746,
                        "nodeType": "UncheckedBlock",
                        "src": "14881:707:2",
                        "statements": [
                          {
                            "assignments": [
                              688
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 688,
                                "mutability": "mutable",
                                "name": "loopLength",
                                "nameLocation": "15007:10:2",
                                "nodeType": "VariableDeclaration",
                                "scope": 746,
                                "src": "14999:18:2",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 687,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14999:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 693,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 689,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 645,
                                  "src": "15020:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "15020:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15038:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "15020:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "14999:40:2"
                          },
                          {
                            "body": {
                              "id": 731,
                              "nodeType": "Block",
                              "src": "15088:277:2",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 704,
                                        "name": "accounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 645,
                                        "src": "15164:8:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 706,
                                      "indexExpression": {
                                        "id": 705,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 695,
                                        "src": "15173:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15164:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 707,
                                        "name": "accounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 645,
                                        "src": "15179:8:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 711,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 710,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 708,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 695,
                                          "src": "15188:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 709,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15192:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "15188:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15179:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "15164:30:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 717,
                                  "nodeType": "IfStatement",
                                  "src": "15160:88:2",
                                  "trueBody": {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 714,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 695,
                                          "src": "15246:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 713,
                                        "name": "InvalidSplit__AccountsOutOfOrder",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 533,
                                        "src": "15213:32:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256) pure"
                                        }
                                      },
                                      "id": 715,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15213:35:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 716,
                                    "nodeType": "RevertStatement",
                                    "src": "15206:42:2"
                                  }
                                },
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    "id": 725,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 718,
                                        "name": "percentAllocations",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 648,
                                        "src": "15262:18:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                          "typeString": "uint32[] memory"
                                        }
                                      },
                                      "id": 720,
                                      "indexExpression": {
                                        "id": 719,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 695,
                                        "src": "15281:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15262:21:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 723,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15294:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 722,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "15287:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint32_$",
                                          "typeString": "type(uint32)"
                                        },
                                        "typeName": {
                                          "id": 721,
                                          "name": "uint32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "15287:6:2",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 724,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15287:9:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "src": "15262:34:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 730,
                                  "nodeType": "IfStatement",
                                  "src": "15258:98:2",
                                  "trueBody": {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 727,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 695,
                                          "src": "15354:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 726,
                                        "name": "InvalidSplit__AllocationMustBePositive",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 538,
                                        "src": "15315:38:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256) pure"
                                        }
                                      },
                                      "id": 728,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15315:41:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 729,
                                    "nodeType": "RevertStatement",
                                    "src": "15308:48:2"
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 698,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 695,
                                "src": "15067:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 699,
                                "name": "loopLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 688,
                                "src": "15071:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15067:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 732,
                            "initializationExpression": {
                              "assignments": [
                                695
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 695,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "15060:1:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 732,
                                  "src": "15052:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 694,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15052:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 697,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15064:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15052:13:2"
                            },
                            "loopExpression": {
                              "expression": {
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": true,
                                "src": "15083:3:2",
                                "subExpression": {
                                  "id": 701,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 695,
                                  "src": "15085:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 703,
                              "nodeType": "ExpressionStatement",
                              "src": "15083:3:2"
                            },
                            "nodeType": "ForStatement",
                            "src": "15047:318:2"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 733,
                                  "name": "percentAllocations",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 648,
                                  "src": "15471:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                    "typeString": "uint32[] memory"
                                  }
                                },
                                "id": 735,
                                "indexExpression": {
                                  "id": 734,
                                  "name": "loopLength",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 688,
                                  "src": "15490:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15471:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15512:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 737,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15505:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint32_$",
                                    "typeString": "type(uint32)"
                                  },
                                  "typeName": {
                                    "id": 736,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15505:6:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15505:9:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "15471:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 745,
                            "nodeType": "IfStatement",
                            "src": "15467:114:2",
                            "trueBody": {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 742,
                                    "name": "loopLength",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 688,
                                    "src": "15570:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 741,
                                  "name": "InvalidSplit__AllocationMustBePositive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 538,
                                  "src": "15531:38:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) pure"
                                  }
                                },
                                "id": 743,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15531:50:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 744,
                              "nodeType": "RevertStatement",
                              "src": "15524:57:2"
                            }
                          }
                        ]
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 747,
                            "name": "distributorFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "15597:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 748,
                            "name": "MAX_DISTRIBUTOR_FEE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 578,
                            "src": "15614:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15597:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 754,
                        "nodeType": "IfStatement",
                        "src": "15593:106:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 751,
                                "name": "distributorFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 650,
                                "src": "15684:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 750,
                              "name": "InvalidSplit__InvalidDistributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "15648:35:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint32_$returns$__$",
                                "typeString": "function (uint32) pure"
                              }
                            },
                            "id": 752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15648:51:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 753,
                          "nodeType": "RevertStatement",
                          "src": "15641:58:2"
                        }
                      },
                      {
                        "id": 755,
                        "nodeType": "PlaceholderStatement",
                        "src": "15705:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 642,
                    "nodeType": "StructuredDocumentation",
                    "src": "13910:371:2",
                    "text": "@notice Reverts if the split with recipients represented by `accounts` and `percentAllocations` is malformed\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution"
                  },
                  "id": 757,
                  "name": "validSplit",
                  "nameLocation": "14293:10:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 651,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 645,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "14326:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 757,
                        "src": "14309:25:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 643,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14309:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 644,
                          "nodeType": "ArrayTypeName",
                          "src": "14309:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 648,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "14356:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 757,
                        "src": "14340:34:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 646,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "14340:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 647,
                          "nodeType": "ArrayTypeName",
                          "src": "14340:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 650,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "14387:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 757,
                        "src": "14380:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 649,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "14380:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14303:102:2"
                  },
                  "src": "14284:1427:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 774,
                    "nodeType": "Block",
                    "src": "15893:93:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 762,
                            "name": "newController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "15903:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 765,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15928:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15920:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 763,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15920:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15920:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15903:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 772,
                        "nodeType": "IfStatement",
                        "src": "15899:75:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 769,
                                "name": "newController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 760,
                                "src": "15960:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 768,
                              "name": "InvalidNewController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "15939:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15939:35:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 771,
                          "nodeType": "RevertStatement",
                          "src": "15932:42:2"
                        }
                      },
                      {
                        "id": 773,
                        "nodeType": "PlaceholderStatement",
                        "src": "15980:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 758,
                    "nodeType": "StructuredDocumentation",
                    "src": "15715:124:2",
                    "text": "@notice Reverts if `newController` is the zero address\n  @param newController Proposed new controlling address"
                  },
                  "id": 775,
                  "name": "validNewController",
                  "nameLocation": "15851:18:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 761,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 760,
                        "mutability": "mutable",
                        "name": "newController",
                        "nameLocation": "15878:13:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "15870:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 759,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15870:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15869:23:2"
                  },
                  "src": "15842:144:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 789,
                    "nodeType": "Block",
                    "src": "16034:60:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 779,
                            "name": "walletImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "16040:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 784,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "16071:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SplitWallet_$2002_$",
                                    "typeString": "function () returns (contract SplitWallet)"
                                  },
                                  "typeName": {
                                    "id": 783,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 782,
                                      "name": "SplitWallet",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 2002,
                                      "src": "16075:11:2"
                                    },
                                    "referencedDeclaration": 2002,
                                    "src": "16075:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SplitWallet_$2002",
                                      "typeString": "contract SplitWallet"
                                    }
                                  }
                                },
                                "id": 785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16071:17:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SplitWallet_$2002",
                                  "typeString": "contract SplitWallet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SplitWallet_$2002",
                                  "typeString": "contract SplitWallet"
                                }
                              ],
                              "id": 781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16063:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 780,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16063:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16063:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16040:49:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 788,
                        "nodeType": "ExpressionStatement",
                        "src": "16040:49:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 776,
                    "nodeType": "StructuredDocumentation",
                    "src": "15990:26:2",
                    "text": " CONSTRUCTOR"
                  },
                  "id": 790,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 777,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16031:2:2"
                  },
                  "returnParameters": {
                    "id": 778,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16034:0:2"
                  },
                  "scope": 1904,
                  "src": "16020:74:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 794,
                    "nodeType": "Block",
                    "src": "16382:2:2",
                    "statements": []
                  },
                  "documentation": {
                    "id": 791,
                    "nodeType": "StructuredDocumentation",
                    "src": "16174:178:2",
                    "text": "@notice Receive ETH\n  @dev Used by split proxies in `distributeETH` to transfer ETH to `SplitMain`\n  Funds sent outside of `distributeETH` will be unrecoverable"
                  },
                  "id": 795,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 792,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16362:2:2"
                  },
                  "returnParameters": {
                    "id": 793,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16382:0:2"
                  },
                  "scope": 1904,
                  "src": "16355:29:2",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2090
                  ],
                  "body": {
                    "id": 871,
                    "nodeType": "Block",
                    "src": "17216:617:2",
                    "statements": [
                      {
                        "assignments": [
                          818
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 818,
                            "mutability": "mutable",
                            "name": "splitHash",
                            "nameLocation": "17230:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 871,
                            "src": "17222:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 817,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "17222:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 824,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 820,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 799,
                              "src": "17260:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 821,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 802,
                              "src": "17276:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 822,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 804,
                              "src": "17302:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 819,
                            "name": "_hashSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1458,
                            "src": "17242:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint32_$returns$_t_bytes32_$",
                              "typeString": "function (address[] memory,uint32[] memory,uint32) pure returns (bytes32)"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17242:80:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17222:100:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 825,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "17332:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17354:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17346:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 826,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17346:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17346:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17332:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 854,
                          "nodeType": "Block",
                          "src": "17477:132:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 840,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 815,
                                  "src": "17515:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 843,
                                      "name": "walletImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 582,
                                      "src": "17536:20:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 841,
                                      "name": "Clones",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2384,
                                      "src": "17523:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Clones_$2384_$",
                                        "typeString": "type(library Clones)"
                                      }
                                    },
                                    "id": 842,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "clone",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2328,
                                    "src": "17523:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                                      "typeString": "function (address) returns (address)"
                                    }
                                  },
                                  "id": 844,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17523:34:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "17515:42:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 846,
                              "nodeType": "ExpressionStatement",
                              "src": "17515:42:2"
                            },
                            {
                              "expression": {
                                "id": 852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 847,
                                      "name": "splits",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 601,
                                      "src": "17565:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                        "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                      }
                                    },
                                    "id": 849,
                                    "indexExpression": {
                                      "id": 848,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 815,
                                      "src": "17572:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17565:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Split_$570_storage",
                                      "typeString": "struct SplitMain.Split storage ref"
                                    }
                                  },
                                  "id": 850,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "controller",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 567,
                                  "src": "17565:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 851,
                                  "name": "controller",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 806,
                                  "src": "17592:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "17565:37:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 853,
                              "nodeType": "ExpressionStatement",
                              "src": "17565:37:2"
                            }
                          ]
                        },
                        "id": 855,
                        "nodeType": "IfStatement",
                        "src": "17328:281:2",
                        "trueBody": {
                          "id": 839,
                          "nodeType": "Block",
                          "src": "17358:113:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 831,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 815,
                                  "src": "17398:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 834,
                                      "name": "walletImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 582,
                                      "src": "17432:20:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 835,
                                      "name": "splitHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 818,
                                      "src": "17454:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 832,
                                      "name": "Clones",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2384,
                                      "src": "17406:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Clones_$2384_$",
                                        "typeString": "type(library Clones)"
                                      }
                                    },
                                    "id": 833,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "cloneDeterministic",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2349,
                                    "src": "17406:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$",
                                      "typeString": "function (address,bytes32) returns (address)"
                                    }
                                  },
                                  "id": 836,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17406:58:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "17398:66:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 838,
                              "nodeType": "ExpressionStatement",
                              "src": "17398:66:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 856,
                                "name": "splits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "17675:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                  "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                }
                              },
                              "id": 858,
                              "indexExpression": {
                                "id": 857,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 815,
                                "src": "17682:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17675:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Split_$570_storage",
                                "typeString": "struct SplitMain.Split storage ref"
                              }
                            },
                            "id": 859,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "hash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 565,
                            "src": "17675:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 860,
                            "name": "splitHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 818,
                            "src": "17696:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "17675:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 862,
                        "nodeType": "ExpressionStatement",
                        "src": "17675:30:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 864,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 815,
                              "src": "17735:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 865,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 799,
                              "src": "17748:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 866,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 802,
                              "src": "17764:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 867,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 804,
                              "src": "17790:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 868,
                              "name": "controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 806,
                              "src": "17812:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 863,
                            "name": "CreateSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2230,
                            "src": "17716:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint32_$_t_address_$returns$__$",
                              "typeString": "function (address,address[] memory,uint32[] memory,uint32,address)"
                            }
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17716:112:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 870,
                        "nodeType": "EmitStatement",
                        "src": "17711:117:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 796,
                    "nodeType": "StructuredDocumentation",
                    "src": "16388:557:2",
                    "text": "@notice Creates a new split with recipients `accounts` with ownerships `percentAllocations`, a keeper fee for splitting of `distributorFee` and the controlling address `controller`\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n  @param controller Controlling address (0x0 if immutable)\n  @return split Address of newly created split"
                  },
                  "functionSelector": "7601f782",
                  "id": 872,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 810,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 799,
                          "src": "17140:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        {
                          "id": 811,
                          "name": "percentAllocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 802,
                          "src": "17150:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                            "typeString": "uint32[] calldata"
                          }
                        },
                        {
                          "id": 812,
                          "name": "distributorFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "17170:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "id": 813,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 809,
                        "name": "validSplit",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 757,
                        "src": "17129:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "17129:56:2"
                    }
                  ],
                  "name": "createSplit",
                  "nameLocation": "16957:11:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 808,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17116:8:2"
                  },
                  "parameters": {
                    "id": 807,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 799,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "16993:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "16974:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 797,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16974:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 798,
                          "nodeType": "ArrayTypeName",
                          "src": "16974:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 802,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "17025:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "17007:36:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 800,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "17007:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 801,
                          "nodeType": "ArrayTypeName",
                          "src": "17007:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 804,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "17056:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "17049:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 803,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "17049:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 806,
                        "mutability": "mutable",
                        "name": "controller",
                        "nameLocation": "17084:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "17076:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 805,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17076:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16968:130:2"
                  },
                  "returnParameters": {
                    "id": 816,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 815,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "17207:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "17199:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 814,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17199:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17198:15:2"
                  },
                  "scope": 1904,
                  "src": "16948:885:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2103
                  ],
                  "body": {
                    "id": 908,
                    "nodeType": "Block",
                    "src": "18612:192:2",
                    "statements": [
                      {
                        "assignments": [
                          893
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 893,
                            "mutability": "mutable",
                            "name": "splitHash",
                            "nameLocation": "18626:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 908,
                            "src": "18618:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 892,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "18618:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 899,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 895,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 876,
                              "src": "18656:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 896,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 879,
                              "src": "18672:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 897,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 881,
                              "src": "18698:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 894,
                            "name": "_hashSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1458,
                            "src": "18638:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint32_$returns$_t_bytes32_$",
                              "typeString": "function (address[] memory,uint32[] memory,uint32) pure returns (bytes32)"
                            }
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18638:80:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18618:100:2"
                      },
                      {
                        "expression": {
                          "id": 906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 900,
                            "name": "split",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "18724:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 903,
                                "name": "walletImplementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 582,
                                "src": "18767:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 904,
                                "name": "splitHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 893,
                                "src": "18789:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 901,
                                "name": "Clones",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2384,
                                "src": "18732:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Clones_$2384_$",
                                  "typeString": "type(library Clones)"
                                }
                              },
                              "id": 902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "predictDeterministicAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2383,
                              "src": "18732:34:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                                "typeString": "function (address,bytes32) view returns (address)"
                              }
                            },
                            "id": 905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18732:67:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18724:75:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 907,
                        "nodeType": "ExpressionStatement",
                        "src": "18724:75:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 873,
                    "nodeType": "StructuredDocumentation",
                    "src": "17837:502:2",
                    "text": "@notice Predicts the address for an immutable split created with recipients `accounts` with ownerships `percentAllocations` and a keeper fee for splitting of `distributorFee`\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n  @return split Predicted address of such an immutable split"
                  },
                  "functionSelector": "52844dd3",
                  "id": 909,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 885,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "18536:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        {
                          "id": 886,
                          "name": "percentAllocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 879,
                          "src": "18546:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                            "typeString": "uint32[] calldata"
                          }
                        },
                        {
                          "id": 887,
                          "name": "distributorFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 881,
                          "src": "18566:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "id": 888,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 884,
                        "name": "validSplit",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 757,
                        "src": "18525:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "18525:56:2"
                    }
                  ],
                  "name": "predictImmutableSplitAddress",
                  "nameLocation": "18351:28:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 883,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "18512:8:2"
                  },
                  "parameters": {
                    "id": 882,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 876,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "18404:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 909,
                        "src": "18385:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 874,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18385:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 875,
                          "nodeType": "ArrayTypeName",
                          "src": "18385:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 879,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "18436:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 909,
                        "src": "18418:36:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 877,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "18418:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 878,
                          "nodeType": "ArrayTypeName",
                          "src": "18418:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 881,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "18467:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 909,
                        "src": "18460:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 880,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "18460:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18379:106:2"
                  },
                  "returnParameters": {
                    "id": 891,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 890,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "18603:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 909,
                        "src": "18595:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 889,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18595:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18594:15:2"
                  },
                  "scope": 1904,
                  "src": "18342:462:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2116
                  ],
                  "body": {
                    "id": 939,
                    "nodeType": "Block",
                    "src": "19542:76:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 933,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 912,
                              "src": "19561:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 934,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "19568:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 935,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 918,
                              "src": "19578:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 936,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 920,
                              "src": "19598:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 932,
                            "name": "_updateSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1495,
                            "src": "19548:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint32_$dyn_calldata_ptr_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address[] calldata,uint32[] calldata,uint32)"
                            }
                          },
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19548:65:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 938,
                        "nodeType": "ExpressionStatement",
                        "src": "19548:65:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 910,
                    "nodeType": "StructuredDocumentation",
                    "src": "18808:465:2",
                    "text": "@notice Updates an existing split with recipients `accounts` with ownerships `percentAllocations` and a keeper fee for splitting of `distributorFee`\n  @param split Address of mutable split to update\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution"
                  },
                  "functionSelector": "ecef0ace",
                  "id": 940,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 924,
                          "name": "split",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 912,
                          "src": "19472:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 925,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 923,
                        "name": "onlySplitController",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 621,
                        "src": "19452:19:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "19452:26:2"
                    },
                    {
                      "arguments": [
                        {
                          "id": 927,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 915,
                          "src": "19494:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        {
                          "id": 928,
                          "name": "percentAllocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 918,
                          "src": "19504:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                            "typeString": "uint32[] calldata"
                          }
                        },
                        {
                          "id": 929,
                          "name": "distributorFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 920,
                          "src": "19524:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "id": 930,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 926,
                        "name": "validSplit",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 757,
                        "src": "19483:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "19483:56:2"
                    }
                  ],
                  "name": "updateSplit",
                  "nameLocation": "19285:11:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 922,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "19439:8:2"
                  },
                  "parameters": {
                    "id": 921,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 912,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "19310:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 940,
                        "src": "19302:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 911,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19302:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 915,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "19340:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 940,
                        "src": "19321:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 913,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19321:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 914,
                          "nodeType": "ArrayTypeName",
                          "src": "19321:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 918,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "19372:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 940,
                        "src": "19354:36:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 916,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "19354:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 917,
                          "nodeType": "ArrayTypeName",
                          "src": "19354:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 920,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "19403:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 940,
                        "src": "19396:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 919,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "19396:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19296:125:2"
                  },
                  "returnParameters": {
                    "id": 931,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19542:0:2"
                  },
                  "scope": 1904,
                  "src": "19276:342:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2123
                  ],
                  "body": {
                    "id": 967,
                    "nodeType": "Block",
                    "src": "20183:119:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 955,
                                "name": "splits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "20189:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                  "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                }
                              },
                              "id": 957,
                              "indexExpression": {
                                "id": 956,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 943,
                                "src": "20196:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20189:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Split_$570_storage",
                                "typeString": "struct SplitMain.Split storage ref"
                              }
                            },
                            "id": 958,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "newPotentialController",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 569,
                            "src": "20189:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 959,
                            "name": "newController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 945,
                            "src": "20228:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "20189:52:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 961,
                        "nodeType": "ExpressionStatement",
                        "src": "20189:52:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 963,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 943,
                              "src": "20276:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 964,
                              "name": "newController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 945,
                              "src": "20283:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 962,
                            "name": "InitiateControlTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2250,
                            "src": "20252:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20252:45:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 966,
                        "nodeType": "EmitStatement",
                        "src": "20247:50:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 941,
                    "nodeType": "StructuredDocumentation",
                    "src": "19622:398:2",
                    "text": "@notice Begins transfer of the controlling address of mutable split `split` to `newController`\n  @dev Two-step control transfer inspired by [dharma](https://github.com/dharma-eng/dharma-smart-wallet/blob/master/contracts/helpers/TwoStepOwnable.sol)\n  @param split Address of mutable split to transfer control for\n  @param newController Address to begin transferring control to"
                  },
                  "functionSelector": "d0e4b2f4",
                  "id": 968,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 949,
                          "name": "split",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "20136:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 950,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 948,
                        "name": "onlySplitController",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 621,
                        "src": "20116:19:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "20116:26:2"
                    },
                    {
                      "arguments": [
                        {
                          "id": 952,
                          "name": "newController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 945,
                          "src": "20166:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 953,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 951,
                        "name": "validNewController",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 775,
                        "src": "20147:18:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "20147:33:2"
                    }
                  ],
                  "name": "transferControl",
                  "nameLocation": "20032:15:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 947,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "20103:8:2"
                  },
                  "parameters": {
                    "id": 946,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 943,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "20056:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 968,
                        "src": "20048:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 942,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20048:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 945,
                        "mutability": "mutable",
                        "name": "newController",
                        "nameLocation": "20071:13:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 968,
                        "src": "20063:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 944,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20063:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20047:38:2"
                  },
                  "returnParameters": {
                    "id": 954,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20183:0:2"
                  },
                  "scope": 1904,
                  "src": "20023:279:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2128
                  ],
                  "body": {
                    "id": 988,
                    "nodeType": "Block",
                    "src": "20575:93:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "20581:43:2",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 978,
                                "name": "splits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "20588:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                  "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                }
                              },
                              "id": 980,
                              "indexExpression": {
                                "id": 979,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 971,
                                "src": "20595:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20588:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Split_$570_storage",
                                "typeString": "struct SplitMain.Split storage ref"
                              }
                            },
                            "id": 981,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "newPotentialController",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 569,
                            "src": "20588:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 983,
                        "nodeType": "ExpressionStatement",
                        "src": "20581:43:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 985,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "20657:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 984,
                            "name": "CancelControlTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2255,
                            "src": "20635:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20635:28:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 987,
                        "nodeType": "EmitStatement",
                        "src": "20630:33:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 969,
                    "nodeType": "StructuredDocumentation",
                    "src": "20306:161:2",
                    "text": "@notice Cancels transfer of the controlling address of mutable split `split`\n  @param split Address of mutable split to cancel control transfer for"
                  },
                  "functionSelector": "1267c6da",
                  "id": 989,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 975,
                          "name": "split",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 971,
                          "src": "20566:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 976,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 974,
                        "name": "onlySplitController",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 621,
                        "src": "20546:19:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "20546:26:2"
                    }
                  ],
                  "name": "cancelControlTransfer",
                  "nameLocation": "20479:21:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 973,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "20533:8:2"
                  },
                  "parameters": {
                    "id": 972,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 971,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "20509:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 989,
                        "src": "20501:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 970,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20501:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20500:15:2"
                  },
                  "returnParameters": {
                    "id": 977,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20575:0:2"
                  },
                  "scope": 1904,
                  "src": "20470:198:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2133
                  ],
                  "body": {
                    "id": 1023,
                    "nodeType": "Block",
                    "src": "20945:168:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "20951:43:2",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 999,
                                "name": "splits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "20958:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                  "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                }
                              },
                              "id": 1001,
                              "indexExpression": {
                                "id": 1000,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 992,
                                "src": "20965:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20958:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Split_$570_storage",
                                "typeString": "struct SplitMain.Split storage ref"
                              }
                            },
                            "id": 1002,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "newPotentialController",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 569,
                            "src": "20958:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1004,
                        "nodeType": "ExpressionStatement",
                        "src": "20951:43:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1006,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 992,
                              "src": "21021:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1007,
                                  "name": "splits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 601,
                                  "src": "21028:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                    "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                  }
                                },
                                "id": 1009,
                                "indexExpression": {
                                  "id": 1008,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 992,
                                  "src": "21035:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21028:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Split_$570_storage",
                                  "typeString": "struct SplitMain.Split storage ref"
                                }
                              },
                              "id": 1010,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "controller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 567,
                              "src": "21028:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1011,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "21054:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "21054:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1005,
                            "name": "ControlTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2264,
                            "src": "21005:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21005:60:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1014,
                        "nodeType": "EmitStatement",
                        "src": "21000:65:2"
                      },
                      {
                        "expression": {
                          "id": 1021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1015,
                                "name": "splits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "21071:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                  "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                }
                              },
                              "id": 1017,
                              "indexExpression": {
                                "id": 1016,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 992,
                                "src": "21078:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21071:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Split_$570_storage",
                                "typeString": "struct SplitMain.Split storage ref"
                              }
                            },
                            "id": 1018,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "controller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 567,
                            "src": "21071:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1019,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "21098:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "21098:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "21071:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1022,
                        "nodeType": "ExpressionStatement",
                        "src": "21071:37:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 990,
                    "nodeType": "StructuredDocumentation",
                    "src": "20672:161:2",
                    "text": "@notice Accepts transfer of the controlling address of mutable split `split`\n  @param split Address of mutable split to accept control transfer for"
                  },
                  "functionSelector": "c7de6440",
                  "id": 1024,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 996,
                          "name": "split",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 992,
                          "src": "20936:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 997,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 995,
                        "name": "onlySplitNewPotentialController",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 641,
                        "src": "20904:31:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "20904:38:2"
                    }
                  ],
                  "name": "acceptControl",
                  "nameLocation": "20845:13:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 994,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "20891:8:2"
                  },
                  "parameters": {
                    "id": 993,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 992,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "20867:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1024,
                        "src": "20859:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 991,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "20859:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20858:15:2"
                  },
                  "returnParameters": {
                    "id": 998,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20945:0:2"
                  },
                  "scope": 1904,
                  "src": "20836:277:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2138
                  ],
                  "body": {
                    "id": 1062,
                    "nodeType": "Block",
                    "src": "21339:168:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "21345:43:2",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1034,
                                "name": "splits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "21352:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                  "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                }
                              },
                              "id": 1036,
                              "indexExpression": {
                                "id": 1035,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1027,
                                "src": "21359:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21352:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Split_$570_storage",
                                "typeString": "struct SplitMain.Split storage ref"
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "newPotentialController",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 569,
                            "src": "21352:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1039,
                        "nodeType": "ExpressionStatement",
                        "src": "21345:43:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1041,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1027,
                              "src": "21415:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1042,
                                  "name": "splits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 601,
                                  "src": "21422:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                    "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                  }
                                },
                                "id": 1044,
                                "indexExpression": {
                                  "id": 1043,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1027,
                                  "src": "21429:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "21422:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Split_$570_storage",
                                  "typeString": "struct SplitMain.Split storage ref"
                                }
                              },
                              "id": 1045,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "controller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 567,
                              "src": "21422:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1048,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21456:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1047,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "21448:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1046,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "21448:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21448:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1040,
                            "name": "ControlTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2264,
                            "src": "21399:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21399:60:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1051,
                        "nodeType": "EmitStatement",
                        "src": "21394:65:2"
                      },
                      {
                        "expression": {
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1052,
                                "name": "splits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "21465:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                  "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                }
                              },
                              "id": 1054,
                              "indexExpression": {
                                "id": 1053,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1027,
                                "src": "21472:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "21465:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Split_$570_storage",
                                "typeString": "struct SplitMain.Split storage ref"
                              }
                            },
                            "id": 1055,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "controller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 567,
                            "src": "21465:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21500:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21492:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1056,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "21492:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21492:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "21465:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1061,
                        "nodeType": "ExpressionStatement",
                        "src": "21465:37:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1025,
                    "nodeType": "StructuredDocumentation",
                    "src": "21117:117:2",
                    "text": "@notice Turns mutable split `split` immutable\n  @param split Address of mutable split to turn immutable"
                  },
                  "functionSelector": "189cbaa0",
                  "id": 1063,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1031,
                          "name": "split",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1027,
                          "src": "21330:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1032,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1030,
                        "name": "onlySplitController",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 621,
                        "src": "21310:19:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "21310:26:2"
                    }
                  ],
                  "name": "makeSplitImmutable",
                  "nameLocation": "21246:18:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1029,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "21297:8:2"
                  },
                  "parameters": {
                    "id": 1028,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1027,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "21273:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "21265:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1026,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "21265:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21264:15:2"
                  },
                  "returnParameters": {
                    "id": 1033,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21339:0:2"
                  },
                  "scope": 1904,
                  "src": "21237:270:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2153
                  ],
                  "body": {
                    "id": 1100,
                    "nodeType": "Block",
                    "src": "22375:288:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1086,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1066,
                              "src": "22477:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1087,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1069,
                              "src": "22484:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 1088,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1072,
                              "src": "22494:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 1089,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1074,
                              "src": "22514:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 1085,
                            "name": "_validSplitHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1529,
                            "src": "22461:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address[] memory,uint32[] memory,uint32) view"
                            }
                          },
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22461:68:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1091,
                        "nodeType": "ExpressionStatement",
                        "src": "22461:68:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1093,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1066,
                              "src": "22557:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1094,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1069,
                              "src": "22570:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 1095,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1072,
                              "src": "22586:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 1096,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1074,
                              "src": "22612:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 1097,
                              "name": "distributorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1076,
                              "src": "22634:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1092,
                            "name": "_distributeETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1665,
                            "src": "22535:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint32_$_t_address_$returns$__$",
                              "typeString": "function (address,address[] memory,uint32[] memory,uint32,address)"
                            }
                          },
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22535:123:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1099,
                        "nodeType": "ExpressionStatement",
                        "src": "22535:123:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1064,
                    "nodeType": "StructuredDocumentation",
                    "src": "21511:606:2",
                    "text": "@notice Distributes the ETH balance for split `split`\n  @dev `accounts`, `percentAllocations`, and `distributorFee` are verified by hashing\n  & comparing to the hash in storage associated with split `split`\n  @param split Address of split to distribute balance for\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n  @param distributorAddress Address to pay `distributorFee` to"
                  },
                  "functionSelector": "e61cb05e",
                  "id": 1101,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1080,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1069,
                          "src": "22329:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        {
                          "id": 1081,
                          "name": "percentAllocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1072,
                          "src": "22339:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                            "typeString": "uint32[] calldata"
                          }
                        },
                        {
                          "id": 1082,
                          "name": "distributorFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "22359:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "id": 1083,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1079,
                        "name": "validSplit",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 757,
                        "src": "22318:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "22318:56:2"
                    }
                  ],
                  "name": "distributeETH",
                  "nameLocation": "22129:13:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1078,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "22309:8:2"
                  },
                  "parameters": {
                    "id": 1077,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1066,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "22156:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1101,
                        "src": "22148:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1065,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "22148:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1069,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "22186:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1101,
                        "src": "22167:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1067,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "22167:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1068,
                          "nodeType": "ArrayTypeName",
                          "src": "22167:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1072,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "22218:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1101,
                        "src": "22200:36:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1070,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "22200:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 1071,
                          "nodeType": "ArrayTypeName",
                          "src": "22200:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1074,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "22249:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1101,
                        "src": "22242:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1073,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "22242:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1076,
                        "mutability": "mutable",
                        "name": "distributorAddress",
                        "nameLocation": "22277:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1101,
                        "src": "22269:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1075,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "22269:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "22142:157:2"
                  },
                  "returnParameters": {
                    "id": 1084,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "22375:0:2"
                  },
                  "scope": 1904,
                  "src": "22120:543:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2168
                  ],
                  "body": {
                    "id": 1141,
                    "nodeType": "Block",
                    "src": "23478:295:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1127,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1104,
                              "src": "23497:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1128,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "23504:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 1129,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1110,
                              "src": "23514:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 1130,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "23534:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 1126,
                            "name": "_updateSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1495,
                            "src": "23484:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint32_$dyn_calldata_ptr_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address[] calldata,uint32[] calldata,uint32)"
                            }
                          },
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23484:65:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1132,
                        "nodeType": "ExpressionStatement",
                        "src": "23484:65:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1134,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1104,
                              "src": "23667:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1135,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "23680:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 1136,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1110,
                              "src": "23696:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 1137,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "23722:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 1138,
                              "name": "distributorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1114,
                              "src": "23744:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1133,
                            "name": "_distributeETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1665,
                            "src": "23645:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint32_$_t_address_$returns$__$",
                              "typeString": "function (address,address[] memory,uint32[] memory,uint32,address)"
                            }
                          },
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23645:123:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1140,
                        "nodeType": "ExpressionStatement",
                        "src": "23645:123:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1102,
                    "nodeType": "StructuredDocumentation",
                    "src": "22667:499:2",
                    "text": "@notice Updates & distributes the ETH balance for split `split`\n  @dev only callable by SplitController\n  @param split Address of split to distribute balance for\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n  @param distributorAddress Address to pay `distributorFee` to"
                  },
                  "functionSelector": "a5e3909e",
                  "id": 1142,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1118,
                          "name": "split",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1104,
                          "src": "23408:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1119,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1117,
                        "name": "onlySplitController",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 621,
                        "src": "23388:19:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "23388:26:2"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1121,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1107,
                          "src": "23430:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        {
                          "id": 1122,
                          "name": "percentAllocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1110,
                          "src": "23440:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                            "typeString": "uint32[] calldata"
                          }
                        },
                        {
                          "id": 1123,
                          "name": "distributorFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "23460:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "id": 1124,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1120,
                        "name": "validSplit",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 757,
                        "src": "23419:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "23419:56:2"
                    }
                  ],
                  "name": "updateAndDistributeETH",
                  "nameLocation": "23178:22:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1116,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "23375:8:2"
                  },
                  "parameters": {
                    "id": 1115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1104,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "23214:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1142,
                        "src": "23206:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23206:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1107,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "23244:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1142,
                        "src": "23225:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1105,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23225:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1106,
                          "nodeType": "ArrayTypeName",
                          "src": "23225:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1110,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "23276:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1142,
                        "src": "23258:36:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1108,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "23258:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 1109,
                          "nodeType": "ArrayTypeName",
                          "src": "23258:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1112,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "23307:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1142,
                        "src": "23300:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1111,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "23300:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1114,
                        "mutability": "mutable",
                        "name": "distributorAddress",
                        "nameLocation": "23335:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1142,
                        "src": "23327:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23327:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23200:157:2"
                  },
                  "returnParameters": {
                    "id": 1125,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23478:0:2"
                  },
                  "scope": 1904,
                  "src": "23169:604:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2186
                  ],
                  "body": {
                    "id": 1183,
                    "nodeType": "Block",
                    "src": "24889:303:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1168,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1145,
                              "src": "24991:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1169,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1151,
                              "src": "24998:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 1170,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1154,
                              "src": "25008:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 1171,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1156,
                              "src": "25028:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 1167,
                            "name": "_validSplitHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1529,
                            "src": "24975:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address[] memory,uint32[] memory,uint32) view"
                            }
                          },
                          "id": 1172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24975:68:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1173,
                        "nodeType": "ExpressionStatement",
                        "src": "24975:68:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1175,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1145,
                              "src": "25073:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1176,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1148,
                              "src": "25086:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$394",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 1177,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1151,
                              "src": "25099:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 1178,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1154,
                              "src": "25115:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 1179,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1156,
                              "src": "25141:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 1180,
                              "name": "distributorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1158,
                              "src": "25163:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$394",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1174,
                            "name": "_distributeERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1825,
                            "src": "25049:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_ERC20_$394_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint32_$_t_address_$returns$__$",
                              "typeString": "function (address,contract ERC20,address[] memory,uint32[] memory,uint32,address)"
                            }
                          },
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25049:138:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1182,
                        "nodeType": "ExpressionStatement",
                        "src": "25049:138:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1143,
                    "nodeType": "StructuredDocumentation",
                    "src": "23777:835:2",
                    "text": "@notice Distributes the ERC20 `token` balance for split `split`\n  @dev `accounts`, `percentAllocations`, and `distributorFee` are verified by hashing\n  & comparing to the hash in storage associated with split `split`\n  @dev pernicious ERC20s may cause overflow in this function inside\n  _scaleAmountByPercentage, but results do not affect ETH & other ERC20 balances\n  @param split Address of split to distribute balance for\n  @param token Address of ERC20 to distribute balance for\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n  @param distributorAddress Address to pay `distributorFee` to"
                  },
                  "functionSelector": "15811302",
                  "id": 1184,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1162,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1151,
                          "src": "24843:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        {
                          "id": 1163,
                          "name": "percentAllocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1154,
                          "src": "24853:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                            "typeString": "uint32[] calldata"
                          }
                        },
                        {
                          "id": 1164,
                          "name": "distributorFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1156,
                          "src": "24873:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "id": 1165,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1161,
                        "name": "validSplit",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 757,
                        "src": "24832:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "24832:56:2"
                    }
                  ],
                  "name": "distributeERC20",
                  "nameLocation": "24624:15:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1160,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "24823:8:2"
                  },
                  "parameters": {
                    "id": 1159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1145,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "24653:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1184,
                        "src": "24645:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1144,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24645:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1148,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "24670:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1184,
                        "src": "24664:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$394",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "id": 1147,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1146,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "24664:5:2"
                          },
                          "referencedDeclaration": 394,
                          "src": "24664:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$394",
                            "typeString": "contract ERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1151,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "24700:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1184,
                        "src": "24681:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1149,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24681:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1150,
                          "nodeType": "ArrayTypeName",
                          "src": "24681:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1154,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "24732:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1184,
                        "src": "24714:36:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1152,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "24714:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 1153,
                          "nodeType": "ArrayTypeName",
                          "src": "24714:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1156,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "24763:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1184,
                        "src": "24756:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1155,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "24756:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1158,
                        "mutability": "mutable",
                        "name": "distributorAddress",
                        "nameLocation": "24791:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1184,
                        "src": "24783:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1157,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24783:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "24639:174:2"
                  },
                  "returnParameters": {
                    "id": 1166,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "24889:0:2"
                  },
                  "scope": 1904,
                  "src": "24615:577:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2204
                  ],
                  "body": {
                    "id": 1228,
                    "nodeType": "Block",
                    "src": "26255:310:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1213,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1187,
                              "src": "26274:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1214,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "26281:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 1215,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1196,
                              "src": "26291:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 1216,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1198,
                              "src": "26311:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 1212,
                            "name": "_updateSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1495,
                            "src": "26261:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint32_$dyn_calldata_ptr_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address[] calldata,uint32[] calldata,uint32)"
                            }
                          },
                          "id": 1217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26261:65:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1218,
                        "nodeType": "ExpressionStatement",
                        "src": "26261:65:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1220,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1187,
                              "src": "26446:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1221,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1190,
                              "src": "26459:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$394",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 1222,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "26472:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 1223,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1196,
                              "src": "26488:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 1224,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1198,
                              "src": "26514:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 1225,
                              "name": "distributorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1200,
                              "src": "26536:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$394",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1219,
                            "name": "_distributeERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1825,
                            "src": "26422:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_ERC20_$394_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint32_$_t_address_$returns$__$",
                              "typeString": "function (address,contract ERC20,address[] memory,uint32[] memory,uint32,address)"
                            }
                          },
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26422:138:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1227,
                        "nodeType": "ExpressionStatement",
                        "src": "26422:138:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1185,
                    "nodeType": "StructuredDocumentation",
                    "src": "25196:728:2",
                    "text": "@notice Updates & distributes the ERC20 `token` balance for split `split`\n  @dev only callable by SplitController\n  @dev pernicious ERC20s may cause overflow in this function inside\n  _scaleAmountByPercentage, but results do not affect ETH & other ERC20 balances\n  @param split Address of split to distribute balance for\n  @param token Address of ERC20 to distribute balance for\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n  @param distributorAddress Address to pay `distributorFee` to"
                  },
                  "functionSelector": "77b1e4e9",
                  "id": 1229,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1204,
                          "name": "split",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1187,
                          "src": "26185:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1205,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1203,
                        "name": "onlySplitController",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 621,
                        "src": "26165:19:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "26165:26:2"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1207,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1193,
                          "src": "26207:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        {
                          "id": 1208,
                          "name": "percentAllocations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "26217:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                            "typeString": "uint32[] calldata"
                          }
                        },
                        {
                          "id": 1209,
                          "name": "distributorFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1198,
                          "src": "26237:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "id": 1210,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1206,
                        "name": "validSplit",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 757,
                        "src": "26196:10:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "26196:56:2"
                    }
                  ],
                  "name": "updateAndDistributeERC20",
                  "nameLocation": "25936:24:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1202,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "26152:8:2"
                  },
                  "parameters": {
                    "id": 1201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1187,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "25974:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "25966:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1186,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25966:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1190,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "25991:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "25985:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$394",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "id": 1189,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1188,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "25985:5:2"
                          },
                          "referencedDeclaration": 394,
                          "src": "25985:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$394",
                            "typeString": "contract ERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1193,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "26021:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "26002:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1191,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26002:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1192,
                          "nodeType": "ArrayTypeName",
                          "src": "26002:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1196,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "26053:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "26035:36:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1194,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "26035:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 1195,
                          "nodeType": "ArrayTypeName",
                          "src": "26035:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1198,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "26084:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "26077:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1197,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "26077:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1200,
                        "mutability": "mutable",
                        "name": "distributorAddress",
                        "nameLocation": "26112:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "26104:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1199,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26104:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "25960:174:2"
                  },
                  "returnParameters": {
                    "id": 1211,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "26255:0:2"
                  },
                  "scope": 1904,
                  "src": "25927:638:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2215
                  ],
                  "body": {
                    "id": 1300,
                    "nodeType": "Block",
                    "src": "26916:494:2",
                    "statements": [
                      {
                        "assignments": [
                          1246
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1246,
                            "mutability": "mutable",
                            "name": "tokenAmounts",
                            "nameLocation": "26939:12:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1300,
                            "src": "26922:29:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1244,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "26922:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1245,
                              "nodeType": "ArrayTypeName",
                              "src": "26922:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1253,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1250,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1238,
                                "src": "26968:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_ERC20_$394_$dyn_calldata_ptr",
                                  "typeString": "contract ERC20[] calldata"
                                }
                              },
                              "id": 1251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "26968:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "26954:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1247,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "26958:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1248,
                              "nodeType": "ArrayTypeName",
                              "src": "26958:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26954:28:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26922:60:2"
                      },
                      {
                        "assignments": [
                          1255
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1255,
                            "mutability": "mutable",
                            "name": "ethAmount",
                            "nameLocation": "26996:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1300,
                            "src": "26988:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1254,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "26988:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1256,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26988:17:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1257,
                            "name": "withdrawETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1234,
                            "src": "27015:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27030:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "27015:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1267,
                        "nodeType": "IfStatement",
                        "src": "27011:67:2",
                        "trueBody": {
                          "id": 1266,
                          "nodeType": "Block",
                          "src": "27033:45:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1260,
                                  "name": "ethAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1255,
                                  "src": "27041:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1262,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1232,
                                      "src": "27063:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1261,
                                    "name": "_withdraw",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1866,
                                    "src": "27053:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) returns (uint256)"
                                    }
                                  },
                                  "id": 1263,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "27053:18:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "27041:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1265,
                              "nodeType": "ExpressionStatement",
                              "src": "27041:30:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1299,
                        "nodeType": "UncheckedBlock",
                        "src": "27083:323:2",
                        "statements": [
                          {
                            "body": {
                              "id": 1290,
                              "nodeType": "Block",
                              "src": "27202:133:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1288,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 1279,
                                        "name": "tokenAmounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1246,
                                        "src": "27274:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 1281,
                                      "indexExpression": {
                                        "id": 1280,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1269,
                                        "src": "27287:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "27274:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "id": 1283,
                                          "name": "account",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1232,
                                          "src": "27307:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "id": 1284,
                                            "name": "tokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1238,
                                            "src": "27316:6:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_ERC20_$394_$dyn_calldata_ptr",
                                              "typeString": "contract ERC20[] calldata"
                                            }
                                          },
                                          "id": 1286,
                                          "indexExpression": {
                                            "id": 1285,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1269,
                                            "src": "27323:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "27316:9:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ERC20_$394",
                                            "typeString": "contract ERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_contract$_ERC20_$394",
                                            "typeString": "contract ERC20"
                                          }
                                        ],
                                        "id": 1282,
                                        "name": "_withdrawERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1903,
                                        "src": "27292:14:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_ERC20_$394_$returns$_t_uint256_$",
                                          "typeString": "function (address,contract ERC20) returns (uint256)"
                                        }
                                      },
                                      "id": 1287,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "27292:34:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "27274:52:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1289,
                                  "nodeType": "ExpressionStatement",
                                  "src": "27274:52:2"
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1272,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1269,
                                "src": "27178:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1273,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1238,
                                  "src": "27182:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_ERC20_$394_$dyn_calldata_ptr",
                                    "typeString": "contract ERC20[] calldata"
                                  }
                                },
                                "id": 1274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "27182:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "27178:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1291,
                            "initializationExpression": {
                              "assignments": [
                                1269
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1269,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "27171:1:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1291,
                                  "src": "27163:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1268,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "27163:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1271,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 1270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "27175:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "27163:13:2"
                            },
                            "loopExpression": {
                              "expression": {
                                "id": 1277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": true,
                                "src": "27197:3:2",
                                "subExpression": {
                                  "id": 1276,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1269,
                                  "src": "27199:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1278,
                              "nodeType": "ExpressionStatement",
                              "src": "27197:3:2"
                            },
                            "nodeType": "ForStatement",
                            "src": "27158:177:2"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "id": 1293,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1232,
                                  "src": "27358:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1294,
                                  "name": "ethAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1255,
                                  "src": "27367:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1295,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1238,
                                  "src": "27378:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_ERC20_$394_$dyn_calldata_ptr",
                                    "typeString": "contract ERC20[] calldata"
                                  }
                                },
                                {
                                  "id": 1296,
                                  "name": "tokenAmounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1246,
                                  "src": "27386:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_array$_t_contract$_ERC20_$394_$dyn_calldata_ptr",
                                    "typeString": "contract ERC20[] calldata"
                                  },
                                  {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                ],
                                "id": 1292,
                                "name": "Withdrawal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2299,
                                "src": "27347:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_array$_t_contract$_ERC20_$394_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                                  "typeString": "function (address,uint256,contract ERC20[] memory,uint256[] memory)"
                                }
                              },
                              "id": 1297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27347:52:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1298,
                            "nodeType": "EmitStatement",
                            "src": "27342:57:2"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1230,
                    "nodeType": "StructuredDocumentation",
                    "src": "26569:229:2",
                    "text": "@notice Withdraw ETH &/ ERC20 balances for account `account`\n  @param account Address to withdraw on behalf of\n  @param withdrawETH Withdraw all ETH if nonzero\n  @param tokens Addresses of ERC20s to withdraw"
                  },
                  "functionSelector": "6e5f6919",
                  "id": 1301,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "26810:8:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1240,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "26907:8:2"
                  },
                  "parameters": {
                    "id": 1239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1232,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "26832:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1301,
                        "src": "26824:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1231,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26824:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1234,
                        "mutability": "mutable",
                        "name": "withdrawETH",
                        "nameLocation": "26853:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1301,
                        "src": "26845:19:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1233,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26845:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1238,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "26887:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1301,
                        "src": "26870:23:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$394_$dyn_calldata_ptr",
                          "typeString": "contract ERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1236,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1235,
                              "name": "ERC20",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 394,
                              "src": "26870:5:2"
                            },
                            "referencedDeclaration": 394,
                            "src": "26870:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$394",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 1237,
                          "nodeType": "ArrayTypeName",
                          "src": "26870:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ERC20_$394_$dyn_storage_ptr",
                            "typeString": "contract ERC20[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "26818:79:2"
                  },
                  "returnParameters": {
                    "id": 1241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "26916:0:2"
                  },
                  "scope": 1904,
                  "src": "26801:609:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1314,
                    "nodeType": "Block",
                    "src": "27647:36:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1309,
                              "name": "splits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "27660:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                              }
                            },
                            "id": 1311,
                            "indexExpression": {
                              "id": 1310,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1304,
                              "src": "27667:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "27660:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Split_$570_storage",
                              "typeString": "struct SplitMain.Split storage ref"
                            }
                          },
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 565,
                          "src": "27660:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1308,
                        "id": 1313,
                        "nodeType": "Return",
                        "src": "27653:25:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1302,
                    "nodeType": "StructuredDocumentation",
                    "src": "27450:130:2",
                    "text": "@notice Returns the current hash of split `split`\n  @param split Split to return hash for\n  @return Split's hash"
                  },
                  "functionSelector": "1da0b8fc",
                  "id": 1315,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHash",
                  "nameLocation": "27592:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1304,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "27608:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1315,
                        "src": "27600:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1303,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "27600:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "27599:15:2"
                  },
                  "returnParameters": {
                    "id": 1308,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1307,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1315,
                        "src": "27638:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1306,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "27638:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "27637:9:2"
                  },
                  "scope": 1904,
                  "src": "27583:100:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1328,
                    "nodeType": "Block",
                    "src": "27908:42:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1323,
                              "name": "splits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "27921:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                              }
                            },
                            "id": 1325,
                            "indexExpression": {
                              "id": 1324,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1318,
                              "src": "27928:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "27921:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Split_$570_storage",
                              "typeString": "struct SplitMain.Split storage ref"
                            }
                          },
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "controller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 567,
                          "src": "27921:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1322,
                        "id": 1327,
                        "nodeType": "Return",
                        "src": "27914:31:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1316,
                    "nodeType": "StructuredDocumentation",
                    "src": "27687:148:2",
                    "text": "@notice Returns the current controller of split `split`\n  @param split Split to return controller for\n  @return Split's controller"
                  },
                  "functionSelector": "88c662aa",
                  "id": 1329,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getController",
                  "nameLocation": "27847:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1318,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "27869:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1329,
                        "src": "27861:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1317,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "27861:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "27860:15:2"
                  },
                  "returnParameters": {
                    "id": 1322,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1321,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1329,
                        "src": "27899:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1320,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "27899:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "27898:9:2"
                  },
                  "scope": 1904,
                  "src": "27838:112:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1342,
                    "nodeType": "Block",
                    "src": "28237:54:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1337,
                              "name": "splits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "28250:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                              }
                            },
                            "id": 1339,
                            "indexExpression": {
                              "id": 1338,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1332,
                              "src": "28257:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "28250:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Split_$570_storage",
                              "typeString": "struct SplitMain.Split storage ref"
                            }
                          },
                          "id": 1340,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "newPotentialController",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 569,
                          "src": "28250:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1336,
                        "id": 1341,
                        "nodeType": "Return",
                        "src": "28243:43:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1330,
                    "nodeType": "StructuredDocumentation",
                    "src": "27954:184:2",
                    "text": "@notice Returns the current newPotentialController of split `split`\n  @param split Split to return newPotentialController for\n  @return Split's newPotentialController"
                  },
                  "functionSelector": "e10e51d6",
                  "id": 1343,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNewPotentialController",
                  "nameLocation": "28150:25:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1332,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "28184:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1343,
                        "src": "28176:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1331,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28176:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "28175:15:2"
                  },
                  "returnParameters": {
                    "id": 1336,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1335,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1343,
                        "src": "28226:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28226:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "28225:9:2"
                  },
                  "scope": 1904,
                  "src": "28141:150:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1367,
                    "nodeType": "Block",
                    "src": "28534:96:2",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1351,
                              "name": "ethBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "28553:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1353,
                            "indexExpression": {
                              "id": 1352,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1346,
                              "src": "28565:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "28553:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "id": 1359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1354,
                                        "name": "splits",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 601,
                                        "src": "28577:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                          "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                        }
                                      },
                                      "id": 1356,
                                      "indexExpression": {
                                        "id": 1355,
                                        "name": "account",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1346,
                                        "src": "28584:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "28577:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Split_$570_storage",
                                        "typeString": "struct SplitMain.Split storage ref"
                                      }
                                    },
                                    "id": 1357,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "hash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 565,
                                    "src": "28577:20:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1358,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "28601:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "28577:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "hexValue": "30",
                                  "id": 1362,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "28623:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 1363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "28577:47:2",
                                "trueExpression": {
                                  "expression": {
                                    "id": 1360,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1346,
                                    "src": "28605:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 1361,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "28605:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1364,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "28576:49:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28553:72:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1350,
                        "id": 1366,
                        "nodeType": "Return",
                        "src": "28540:85:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1344,
                    "nodeType": "StructuredDocumentation",
                    "src": "28295:164:2",
                    "text": "@notice Returns the current ETH balance of account `account`\n  @param account Account to return ETH balance for\n  @return Account's balance of ETH"
                  },
                  "functionSelector": "3bb66a7b",
                  "id": 1368,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getETHBalance",
                  "nameLocation": "28471:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1347,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1346,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "28493:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1368,
                        "src": "28485:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1345,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28485:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "28484:17:2"
                  },
                  "returnParameters": {
                    "id": 1350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1349,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1368,
                        "src": "28525:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1348,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "28525:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "28524:9:2"
                  },
                  "scope": 1904,
                  "src": "28462:168:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1399,
                    "nodeType": "Block",
                    "src": "28975:120:2",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1379,
                                "name": "erc20Balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 595,
                                "src": "28994:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_contract$_ERC20_$394_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(contract ERC20 => mapping(address => uint256))"
                                }
                              },
                              "id": 1381,
                              "indexExpression": {
                                "id": 1380,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1374,
                                "src": "29008:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$394",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28994:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1383,
                            "indexExpression": {
                              "id": 1382,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1371,
                              "src": "29015:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "28994:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "id": 1389,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1384,
                                        "name": "splits",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 601,
                                        "src": "29033:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                          "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                        }
                                      },
                                      "id": 1386,
                                      "indexExpression": {
                                        "id": 1385,
                                        "name": "account",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1371,
                                        "src": "29040:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "29033:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Split_$570_storage",
                                        "typeString": "struct SplitMain.Split storage ref"
                                      }
                                    },
                                    "id": 1387,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "hash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 565,
                                    "src": "29033:20:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1388,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "29057:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "29033:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "hexValue": "30",
                                  "id": 1394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "29088:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 1395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "29033:56:2",
                                "trueExpression": {
                                  "arguments": [
                                    {
                                      "id": 1392,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1371,
                                      "src": "29077:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1390,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1374,
                                      "src": "29061:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$394",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1391,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 30,
                                    "src": "29061:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "29061:24:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1396,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "29032:58:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28994:96:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1378,
                        "id": 1398,
                        "nodeType": "Return",
                        "src": "28981:109:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1369,
                    "nodeType": "StructuredDocumentation",
                    "src": "28634:237:2",
                    "text": "@notice Returns the ERC20 balance of token `token` for account `account`\n  @param account Account to return ERC20 `token` balance for\n  @param token Token to return balance for\n  @return Account's balance of `token`"
                  },
                  "functionSelector": "c3a8962c",
                  "id": 1400,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getERC20Balance",
                  "nameLocation": "28883:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1371,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "28907:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1400,
                        "src": "28899:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1370,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28899:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1374,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "28922:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1400,
                        "src": "28916:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$394",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "id": 1373,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1372,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "28916:5:2"
                          },
                          "referencedDeclaration": 394,
                          "src": "28916:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$394",
                            "typeString": "contract ERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "28898:30:2"
                  },
                  "returnParameters": {
                    "id": 1378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1377,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1400,
                        "src": "28964:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1376,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "28964:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "28963:9:2"
                  },
                  "scope": 1904,
                  "src": "28874:221:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1433,
                    "nodeType": "Block",
                    "src": "29348:280:2",
                    "statements": [
                      {
                        "assignments": [
                          1410
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1410,
                            "mutability": "mutable",
                            "name": "numbersLength",
                            "nameLocation": "29417:13:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1433,
                            "src": "29409:21:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1409,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "29409:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1413,
                        "initialValue": {
                          "expression": {
                            "id": 1411,
                            "name": "numbers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1404,
                            "src": "29433:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                              "typeString": "uint32[] memory"
                            }
                          },
                          "id": 1412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "29433:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "29409:38:2"
                      },
                      {
                        "body": {
                          "id": 1431,
                          "nodeType": "Block",
                          "src": "29494:130:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1421,
                                  "name": "sum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1407,
                                  "src": "29502:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1422,
                                    "name": "numbers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1404,
                                    "src": "29509:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                      "typeString": "uint32[] memory"
                                    }
                                  },
                                  "id": 1424,
                                  "indexExpression": {
                                    "id": 1423,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1415,
                                    "src": "29517:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "29509:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "29502:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "id": 1426,
                              "nodeType": "ExpressionStatement",
                              "src": "29502:17:2"
                            },
                            {
                              "id": 1430,
                              "nodeType": "UncheckedBlock",
                              "src": "29527:91:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1428,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "29606:3:2",
                                    "subExpression": {
                                      "id": 1427,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1415,
                                      "src": "29608:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1429,
                                  "nodeType": "ExpressionStatement",
                                  "src": "29606:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1418,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "29473:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1419,
                            "name": "numbersLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1410,
                            "src": "29477:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "29473:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1432,
                        "initializationExpression": {
                          "assignments": [
                            1415
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1415,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "29466:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1432,
                              "src": "29458:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1414,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "29458:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1417,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29470:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "29458:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "29453:171:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1401,
                    "nodeType": "StructuredDocumentation",
                    "src": "29148:120:2",
                    "text": "@notice Sums array of uint32s\n  @param numbers Array of uint32s to sum\n  @return sum Sum of `numbers`."
                  },
                  "id": 1434,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getSum",
                  "nameLocation": "29280:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1405,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1404,
                        "mutability": "mutable",
                        "name": "numbers",
                        "nameLocation": "29304:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1434,
                        "src": "29288:23:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1402,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "29288:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 1403,
                          "nodeType": "ArrayTypeName",
                          "src": "29288:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "29287:25:2"
                  },
                  "returnParameters": {
                    "id": 1408,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1407,
                        "mutability": "mutable",
                        "name": "sum",
                        "nameLocation": "29343:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1434,
                        "src": "29336:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1406,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "29336:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "29335:12:2"
                  },
                  "scope": 1904,
                  "src": "29271:357:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1457,
                    "nodeType": "Block",
                    "src": "30120:97:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1451,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1438,
                                  "src": "30166:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                {
                                  "id": 1452,
                                  "name": "percentAllocations",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1441,
                                  "src": "30176:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                    "typeString": "uint32[] memory"
                                  }
                                },
                                {
                                  "id": 1453,
                                  "name": "distributorFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1443,
                                  "src": "30196:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  },
                                  {
                                    "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                    "typeString": "uint32[] memory"
                                  },
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                ],
                                "expression": {
                                  "id": 1449,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "30149:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1450,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "30149:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "30149:62:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1448,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "30139:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30139:73:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1447,
                        "id": 1456,
                        "nodeType": "Return",
                        "src": "30126:86:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1435,
                    "nodeType": "StructuredDocumentation",
                    "src": "29632:331:2",
                    "text": "@notice Hashes a split\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n  @return computedHash Hash of the split."
                  },
                  "id": 1458,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_hashSplit",
                  "nameLocation": "29975:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1438,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "30008:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1458,
                        "src": "29991:25:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1436,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "29991:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1437,
                          "nodeType": "ArrayTypeName",
                          "src": "29991:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1441,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "30038:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1458,
                        "src": "30022:34:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1439,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "30022:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 1440,
                          "nodeType": "ArrayTypeName",
                          "src": "30022:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1443,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "30069:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1458,
                        "src": "30062:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1442,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "30062:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "29985:102:2"
                  },
                  "returnParameters": {
                    "id": 1447,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1446,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1458,
                        "src": "30111:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1445,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "30111:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "30110:9:2"
                  },
                  "scope": 1904,
                  "src": "29966:251:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1494,
                    "nodeType": "Block",
                    "src": "30845:279:2",
                    "statements": [
                      {
                        "assignments": [
                          1473
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1473,
                            "mutability": "mutable",
                            "name": "splitHash",
                            "nameLocation": "30859:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1494,
                            "src": "30851:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1472,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "30851:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1479,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1475,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1464,
                              "src": "30889:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 1476,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1467,
                              "src": "30905:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 1477,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1469,
                              "src": "30931:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 1474,
                            "name": "_hashSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1458,
                            "src": "30871:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint32_$returns$_t_bytes32_$",
                              "typeString": "function (address[] memory,uint32[] memory,uint32) pure returns (bytes32)"
                            }
                          },
                          "id": 1478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30871:80:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "30851:100:2"
                      },
                      {
                        "expression": {
                          "id": 1485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1480,
                                "name": "splits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "31014:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                  "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                }
                              },
                              "id": 1482,
                              "indexExpression": {
                                "id": 1481,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1461,
                                "src": "31021:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "31014:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Split_$570_storage",
                                "typeString": "struct SplitMain.Split storage ref"
                              }
                            },
                            "id": 1483,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "hash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 565,
                            "src": "31014:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1484,
                            "name": "splitHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1473,
                            "src": "31035:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "31014:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1486,
                        "nodeType": "ExpressionStatement",
                        "src": "31014:30:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1488,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1461,
                              "src": "31067:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1489,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1464,
                              "src": "31074:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 1490,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1467,
                              "src": "31084:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 1491,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1469,
                              "src": "31104:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 1487,
                            "name": "UpdateSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2243,
                            "src": "31055:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address[] memory,uint32[] memory,uint32)"
                            }
                          },
                          "id": 1492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31055:64:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1493,
                        "nodeType": "EmitStatement",
                        "src": "31050:69:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1459,
                    "nodeType": "StructuredDocumentation",
                    "src": "30221:465:2",
                    "text": "@notice Updates an existing split with recipients `accounts` with ownerships `percentAllocations` and a keeper fee for splitting of `distributorFee`\n  @param split Address of mutable split to update\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution"
                  },
                  "id": 1495,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_updateSplit",
                  "nameLocation": "30698:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1470,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1461,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "30724:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1495,
                        "src": "30716:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1460,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "30716:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1464,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "30754:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1495,
                        "src": "30735:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1462,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "30735:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1463,
                          "nodeType": "ArrayTypeName",
                          "src": "30735:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1467,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "30786:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1495,
                        "src": "30768:36:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1465,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "30768:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 1466,
                          "nodeType": "ArrayTypeName",
                          "src": "30768:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1469,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "30817:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1495,
                        "src": "30810:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1468,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "30810:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "30710:125:2"
                  },
                  "returnParameters": {
                    "id": 1471,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "30845:0:2"
                  },
                  "scope": 1904,
                  "src": "30689:435:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1528,
                    "nodeType": "Block",
                    "src": "31713:158:2",
                    "statements": [
                      {
                        "assignments": [
                          1510
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1510,
                            "mutability": "mutable",
                            "name": "hash",
                            "nameLocation": "31727:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1528,
                            "src": "31719:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1509,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "31719:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1516,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1512,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1501,
                              "src": "31745:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 1513,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1504,
                              "src": "31755:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                "typeString": "uint32[] memory"
                              }
                            },
                            {
                              "id": 1514,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1506,
                              "src": "31775:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                "typeString": "uint32[] memory"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 1511,
                            "name": "_hashSplit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1458,
                            "src": "31734:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint32_$returns$_t_bytes32_$",
                              "typeString": "function (address[] memory,uint32[] memory,uint32) pure returns (bytes32)"
                            }
                          },
                          "id": 1515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31734:56:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "31719:71:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1517,
                                "name": "splits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "31800:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Split_$570_storage_$",
                                  "typeString": "mapping(address => struct SplitMain.Split storage ref)"
                                }
                              },
                              "id": 1519,
                              "indexExpression": {
                                "id": 1518,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1498,
                                "src": "31807:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "31800:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Split_$570_storage",
                                "typeString": "struct SplitMain.Split storage ref"
                              }
                            },
                            "id": 1520,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 565,
                            "src": "31800:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 1521,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1510,
                            "src": "31822:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "31800:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1527,
                        "nodeType": "IfStatement",
                        "src": "31796:70:2",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "id": 1524,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1510,
                                "src": "31861:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 1523,
                              "name": "InvalidSplit__InvalidHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 548,
                              "src": "31835:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                                "typeString": "function (bytes32) pure"
                              }
                            },
                            "id": 1525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "31835:31:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1526,
                          "nodeType": "RevertStatement",
                          "src": "31828:38:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1496,
                    "nodeType": "StructuredDocumentation",
                    "src": "31128:422:2",
                    "text": "@notice Checks hash from `accounts`, `percentAllocations`, and `distributorFee` against the hash stored for `split`\n  @param split Address of hash to check\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution"
                  },
                  "id": 1529,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_validSplitHash",
                  "nameLocation": "31562:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1498,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "31591:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1529,
                        "src": "31583:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1497,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "31583:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1501,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "31619:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1529,
                        "src": "31602:25:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1499,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "31602:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1500,
                          "nodeType": "ArrayTypeName",
                          "src": "31602:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1504,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "31649:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1529,
                        "src": "31633:34:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1502,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "31633:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 1503,
                          "nodeType": "ArrayTypeName",
                          "src": "31633:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1506,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "31680:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1529,
                        "src": "31673:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1505,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "31673:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "31577:121:2"
                  },
                  "returnParameters": {
                    "id": 1508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "31713:0:2"
                  },
                  "scope": 1904,
                  "src": "31553:318:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1664,
                    "nodeType": "Block",
                    "src": "32607:2239:2",
                    "statements": [
                      {
                        "assignments": [
                          1546
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1546,
                            "mutability": "mutable",
                            "name": "mainBalance",
                            "nameLocation": "32621:11:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1664,
                            "src": "32613:19:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1545,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "32613:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1550,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1547,
                            "name": "ethBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 587,
                            "src": "32635:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1549,
                          "indexExpression": {
                            "id": 1548,
                            "name": "split",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1532,
                            "src": "32647:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "32635:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32613:40:2"
                      },
                      {
                        "assignments": [
                          1552
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1552,
                            "mutability": "mutable",
                            "name": "proxyBalance",
                            "nameLocation": "32667:12:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1664,
                            "src": "32659:20:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1551,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "32659:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1555,
                        "initialValue": {
                          "expression": {
                            "id": 1553,
                            "name": "split",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1532,
                            "src": "32682:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "32682:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32659:36:2"
                      },
                      {
                        "assignments": [
                          1557
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1557,
                            "mutability": "mutable",
                            "name": "amountToSplit",
                            "nameLocation": "32784:13:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1664,
                            "src": "32776:21:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1556,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "32776:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1558,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "32776:21:2"
                      },
                      {
                        "id": 1573,
                        "nodeType": "UncheckedBlock",
                        "src": "32803:191:2",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1559,
                                "name": "mainBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1546,
                                "src": "32865:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1560,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "32879:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "32865:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1566,
                            "nodeType": "IfStatement",
                            "src": "32861:37:2",
                            "trueBody": {
                              "expression": {
                                "id": 1564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1562,
                                  "name": "mainBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1546,
                                  "src": "32882:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1563,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "32897:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "32882:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1565,
                              "nodeType": "ExpressionStatement",
                              "src": "32882:16:2"
                            }
                          },
                          {
                            "expression": {
                              "id": 1571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1567,
                                "name": "amountToSplit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1557,
                                "src": "32945:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1568,
                                  "name": "mainBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1546,
                                  "src": "32961:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1569,
                                  "name": "proxyBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1552,
                                  "src": "32975:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "32961:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "32945:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1572,
                            "nodeType": "ExpressionStatement",
                            "src": "32945:42:2"
                          }
                        ]
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1574,
                            "name": "mainBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1546,
                            "src": "33003:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33017:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "33003:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1583,
                        "nodeType": "IfStatement",
                        "src": "32999:43:2",
                        "trueBody": {
                          "expression": {
                            "id": 1581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 1577,
                                "name": "ethBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 587,
                                "src": "33020:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1579,
                              "indexExpression": {
                                "id": 1578,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1532,
                                "src": "33032:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "33020:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 1580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "33041:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "33020:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1582,
                          "nodeType": "ExpressionStatement",
                          "src": "33020:22:2"
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1585,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1532,
                              "src": "33144:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1586,
                              "name": "amountToSplit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1557,
                              "src": "33151:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1587,
                              "name": "distributorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1542,
                              "src": "33166:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1584,
                            "name": "DistributeETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2273,
                            "src": "33130:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,address)"
                            }
                          },
                          "id": 1588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33130:55:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1589,
                        "nodeType": "EmitStatement",
                        "src": "33125:60:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 1592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1590,
                            "name": "distributorFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1540,
                            "src": "33195:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33213:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "33195:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1621,
                        "nodeType": "IfStatement",
                        "src": "33191:668:2",
                        "trueBody": {
                          "id": 1620,
                          "nodeType": "Block",
                          "src": "33216:643:2",
                          "statements": [
                            {
                              "assignments": [
                                1594
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1594,
                                  "mutability": "mutable",
                                  "name": "distributorFeeAmount",
                                  "nameLocation": "33285:20:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1620,
                                  "src": "33277:28:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1593,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "33277:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1599,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1596,
                                    "name": "amountToSplit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1557,
                                    "src": "33342:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1597,
                                    "name": "distributorFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1540,
                                    "src": "33365:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "id": 1595,
                                  "name": "_scaleAmountByPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1837,
                                  "src": "33308:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "33308:79:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "33277:110:2"
                            },
                            {
                              "id": 1619,
                              "nodeType": "UncheckedBlock",
                              "src": "33395:458:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1613,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 1600,
                                        "name": "ethBalances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 587,
                                        "src": "33520:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1611,
                                      "indexExpression": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 1606,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1601,
                                            "name": "distributorAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1542,
                                            "src": "33543:18:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "arguments": [
                                              {
                                                "hexValue": "30",
                                                "id": 1604,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "33573:1:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                }
                                              ],
                                              "id": 1603,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "33565:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 1602,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "33565:7:2",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1605,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "33565:10:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "33543:32:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "expression": {
                                            "id": 1608,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "33599:3:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1609,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "33599:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "id": 1610,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "33543:66:2",
                                        "trueExpression": {
                                          "id": 1607,
                                          "name": "distributorAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1542,
                                          "src": "33578:18:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "33520:99:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 1612,
                                      "name": "distributorFeeAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1594,
                                      "src": "33623:20:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "33520:123:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1614,
                                  "nodeType": "ExpressionStatement",
                                  "src": "33520:123:2"
                                },
                                {
                                  "expression": {
                                    "id": 1617,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1615,
                                      "name": "amountToSplit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1557,
                                      "src": "33807:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 1616,
                                      "name": "distributorFeeAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1594,
                                      "src": "33824:20:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "33807:37:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1618,
                                  "nodeType": "ExpressionStatement",
                                  "src": "33807:37:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 1652,
                        "nodeType": "UncheckedBlock",
                        "src": "33864:462:2",
                        "statements": [
                          {
                            "assignments": [
                              1623
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1623,
                                "mutability": "mutable",
                                "name": "accountsLength",
                                "nameLocation": "34028:14:2",
                                "nodeType": "VariableDeclaration",
                                "scope": 1652,
                                "src": "34020:22:2",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1622,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "34020:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1626,
                            "initialValue": {
                              "expression": {
                                "id": 1624,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1535,
                                "src": "34045:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "34045:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "34020:40:2"
                          },
                          {
                            "body": {
                              "id": 1650,
                              "nodeType": "Block",
                              "src": "34113:207:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1648,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 1637,
                                        "name": "ethBalances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 587,
                                        "src": "34191:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1641,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 1638,
                                          "name": "accounts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1535,
                                          "src": "34203:8:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 1640,
                                        "indexExpression": {
                                          "id": 1639,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1628,
                                          "src": "34212:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "34203:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "34191:24:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "id": 1643,
                                          "name": "amountToSplit",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1557,
                                          "src": "34255:13:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "id": 1644,
                                            "name": "percentAllocations",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1538,
                                            "src": "34280:18:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                              "typeString": "uint32[] memory"
                                            }
                                          },
                                          "id": 1646,
                                          "indexExpression": {
                                            "id": 1645,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1628,
                                            "src": "34299:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "34280:21:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        ],
                                        "id": 1642,
                                        "name": "_scaleAmountByPercentage",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1837,
                                        "src": "34219:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1647,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "34219:92:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "34191:120:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1649,
                                  "nodeType": "ExpressionStatement",
                                  "src": "34191:120:2"
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1631,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1628,
                                "src": "34088:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1632,
                                "name": "accountsLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1623,
                                "src": "34092:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "34088:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1651,
                            "initializationExpression": {
                              "assignments": [
                                1628
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1628,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "34081:1:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1651,
                                  "src": "34073:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1627,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "34073:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1630,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 1629,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "34085:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "34073:13:2"
                            },
                            "loopExpression": {
                              "expression": {
                                "id": 1635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": true,
                                "src": "34108:3:2",
                                "subExpression": {
                                  "id": 1634,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1628,
                                  "src": "34110:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1636,
                              "nodeType": "ExpressionStatement",
                              "src": "34108:3:2"
                            },
                            "nodeType": "ForStatement",
                            "src": "34068:252:2"
                          }
                        ]
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1653,
                            "name": "proxyBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1552,
                            "src": "34777:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "34792:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "34777:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1663,
                        "nodeType": "IfStatement",
                        "src": "34773:68:2",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1660,
                                "name": "proxyBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1552,
                                "src": "34828:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1657,
                                    "name": "split",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1532,
                                    "src": "34807:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1656,
                                  "name": "SplitWallet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2002,
                                  "src": "34795:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_SplitWallet_$2002_$",
                                    "typeString": "type(contract SplitWallet)"
                                  }
                                },
                                "id": 1658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "34795:18:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SplitWallet_$2002",
                                  "typeString": "contract SplitWallet"
                                }
                              },
                              "id": 1659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sendETHToMain",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1979,
                              "src": "34795:32:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 1661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "34795:46:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1662,
                          "nodeType": "ExpressionStatement",
                          "src": "34795:46:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1530,
                    "nodeType": "StructuredDocumentation",
                    "src": "31875:543:2",
                    "text": "@notice Distributes the ETH balance for split `split`\n  @dev `accounts`, `percentAllocations`, and `distributorFee` must be verified before calling\n  @param split Address of split to distribute balance for\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n  @param distributorAddress Address to pay `distributorFee` to"
                  },
                  "id": 1665,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_distributeETH",
                  "nameLocation": "32430:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1543,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1532,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "32458:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "32450:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "32450:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1535,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "32486:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "32469:25:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1533,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "32469:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1534,
                          "nodeType": "ArrayTypeName",
                          "src": "32469:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1538,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "32516:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "32500:34:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1536,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "32500:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 1537,
                          "nodeType": "ArrayTypeName",
                          "src": "32500:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1540,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "32547:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "32540:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1539,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "32540:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1542,
                        "mutability": "mutable",
                        "name": "distributorAddress",
                        "nameLocation": "32575:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "32567:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1541,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "32567:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "32444:153:2"
                  },
                  "returnParameters": {
                    "id": 1544,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "32607:0:2"
                  },
                  "scope": 1904,
                  "src": "32421:2425:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1824,
                    "nodeType": "Block",
                    "src": "35830:2195:2",
                    "statements": [
                      {
                        "assignments": [
                          1685
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1685,
                            "mutability": "mutable",
                            "name": "amountToSplit",
                            "nameLocation": "35844:13:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1824,
                            "src": "35836:21:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1684,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "35836:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1686,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "35836:21:2"
                      },
                      {
                        "assignments": [
                          1688
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1688,
                            "mutability": "mutable",
                            "name": "mainBalance",
                            "nameLocation": "35871:11:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1824,
                            "src": "35863:19:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1687,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "35863:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1694,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1689,
                              "name": "erc20Balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 595,
                              "src": "35885:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$394_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(contract ERC20 => mapping(address => uint256))"
                              }
                            },
                            "id": 1691,
                            "indexExpression": {
                              "id": 1690,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1671,
                              "src": "35899:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$394",
                                "typeString": "contract ERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "35885:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1693,
                          "indexExpression": {
                            "id": 1692,
                            "name": "split",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1668,
                            "src": "35906:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "35885:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "35863:49:2"
                      },
                      {
                        "assignments": [
                          1696
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1696,
                            "mutability": "mutable",
                            "name": "proxyBalance",
                            "nameLocation": "35926:12:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1824,
                            "src": "35918:20:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1695,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "35918:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1701,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1699,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1668,
                              "src": "35957:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1697,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1671,
                              "src": "35941:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$394",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "35941:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35941:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "35918:45:2"
                      },
                      {
                        "id": 1725,
                        "nodeType": "UncheckedBlock",
                        "src": "35969:377:2",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1702,
                                "name": "proxyBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1696,
                                "src": "36112:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "36127:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "36112:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1709,
                            "nodeType": "IfStatement",
                            "src": "36108:39:2",
                            "trueBody": {
                              "expression": {
                                "id": 1707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1705,
                                  "name": "proxyBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1696,
                                  "src": "36130:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1706,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "36146:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "36130:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1708,
                              "nodeType": "ExpressionStatement",
                              "src": "36130:17:2"
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1710,
                                "name": "mainBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1688,
                                "src": "36199:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "36213:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "36199:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1718,
                            "nodeType": "IfStatement",
                            "src": "36195:56:2",
                            "trueBody": {
                              "id": 1717,
                              "nodeType": "Block",
                              "src": "36216:35:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1715,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1713,
                                      "name": "mainBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1688,
                                      "src": "36226:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "hexValue": "31",
                                      "id": 1714,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "36241:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "36226:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1716,
                                  "nodeType": "ExpressionStatement",
                                  "src": "36226:16:2"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "id": 1723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1719,
                                "name": "amountToSplit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1685,
                                "src": "36297:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1720,
                                  "name": "mainBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1688,
                                  "src": "36313:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1721,
                                  "name": "proxyBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1696,
                                  "src": "36327:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "36313:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "36297:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1724,
                            "nodeType": "ExpressionStatement",
                            "src": "36297:42:2"
                          }
                        ]
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1726,
                            "name": "mainBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1688,
                            "src": "36355:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "36369:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "36355:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1737,
                        "nodeType": "IfStatement",
                        "src": "36351:52:2",
                        "trueBody": {
                          "expression": {
                            "id": 1735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 1729,
                                  "name": "erc20Balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 595,
                                  "src": "36372:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_ERC20_$394_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(contract ERC20 => mapping(address => uint256))"
                                  }
                                },
                                "id": 1732,
                                "indexExpression": {
                                  "id": 1730,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1671,
                                  "src": "36386:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$394",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "36372:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1733,
                              "indexExpression": {
                                "id": 1731,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1668,
                                "src": "36393:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "36372:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 1734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "36402:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "36372:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1736,
                          "nodeType": "ExpressionStatement",
                          "src": "36372:31:2"
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1739,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1668,
                              "src": "36507:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1740,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1671,
                              "src": "36514:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$394",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "id": 1741,
                              "name": "amountToSplit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1685,
                              "src": "36521:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1742,
                              "name": "distributorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1681,
                              "src": "36536:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_ERC20_$394",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1738,
                            "name": "DistributeERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2285,
                            "src": "36491:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_ERC20_$394_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,contract ERC20,uint256,address)"
                            }
                          },
                          "id": 1743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36491:64:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1744,
                        "nodeType": "EmitStatement",
                        "src": "36486:69:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 1747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1745,
                            "name": "distributorFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1679,
                            "src": "36565:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "36583:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "36565:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1778,
                        "nodeType": "IfStatement",
                        "src": "36561:603:2",
                        "trueBody": {
                          "id": 1777,
                          "nodeType": "Block",
                          "src": "36586:578:2",
                          "statements": [
                            {
                              "assignments": [
                                1749
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1749,
                                  "mutability": "mutable",
                                  "name": "distributorFeeAmount",
                                  "nameLocation": "36655:20:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1777,
                                  "src": "36647:28:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1748,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "36647:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1754,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1751,
                                    "name": "amountToSplit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1685,
                                    "src": "36712:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1752,
                                    "name": "distributorFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1679,
                                    "src": "36735:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "id": 1750,
                                  "name": "_scaleAmountByPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1837,
                                  "src": "36678:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1753,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "36678:79:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "36647:110:2"
                            },
                            {
                              "id": 1776,
                              "nodeType": "UncheckedBlock",
                              "src": "36834:324:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1770,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 1755,
                                          "name": "erc20Balances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 595,
                                          "src": "36888:13:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_contract$_ERC20_$394_$_t_mapping$_t_address_$_t_uint256_$_$",
                                            "typeString": "mapping(contract ERC20 => mapping(address => uint256))"
                                          }
                                        },
                                        "id": 1767,
                                        "indexExpression": {
                                          "id": 1756,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1671,
                                          "src": "36902:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ERC20_$394",
                                            "typeString": "contract ERC20"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "36888:20:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1768,
                                      "indexExpression": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 1762,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1757,
                                            "name": "distributorAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1681,
                                            "src": "36920:18:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "arguments": [
                                              {
                                                "hexValue": "30",
                                                "id": 1760,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "36950:1:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                }
                                              ],
                                              "id": 1759,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "36942:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 1758,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "36942:7:2",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1761,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "36942:10:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "36920:32:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "expression": {
                                            "id": 1764,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "36976:3:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1765,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "36976:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "id": 1766,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "36920:66:2",
                                        "trueExpression": {
                                          "id": 1763,
                                          "name": "distributorAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1681,
                                          "src": "36955:18:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "36888:108:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 1769,
                                      "name": "distributorFeeAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1749,
                                      "src": "37000:20:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "36888:132:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1771,
                                  "nodeType": "ExpressionStatement",
                                  "src": "36888:132:2"
                                },
                                {
                                  "expression": {
                                    "id": 1774,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1772,
                                      "name": "amountToSplit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1685,
                                      "src": "37112:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 1773,
                                      "name": "distributorFeeAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1749,
                                      "src": "37129:20:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "37112:37:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1775,
                                  "nodeType": "ExpressionStatement",
                                  "src": "37112:37:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 1811,
                        "nodeType": "UncheckedBlock",
                        "src": "37282:308:2",
                        "statements": [
                          {
                            "assignments": [
                              1780
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1780,
                                "mutability": "mutable",
                                "name": "accountsLength",
                                "nameLocation": "37351:14:2",
                                "nodeType": "VariableDeclaration",
                                "scope": 1811,
                                "src": "37343:22:2",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1779,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "37343:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1783,
                            "initialValue": {
                              "expression": {
                                "id": 1781,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1674,
                                "src": "37368:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "37368:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "37343:40:2"
                          },
                          {
                            "body": {
                              "id": 1809,
                              "nodeType": "Block",
                              "src": "37436:148:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1807,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 1794,
                                          "name": "erc20Balances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 595,
                                          "src": "37446:13:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_contract$_ERC20_$394_$_t_mapping$_t_address_$_t_uint256_$_$",
                                            "typeString": "mapping(contract ERC20 => mapping(address => uint256))"
                                          }
                                        },
                                        "id": 1799,
                                        "indexExpression": {
                                          "id": 1795,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1671,
                                          "src": "37460:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ERC20_$394",
                                            "typeString": "contract ERC20"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "37446:20:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1800,
                                      "indexExpression": {
                                        "baseExpression": {
                                          "id": 1796,
                                          "name": "accounts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1674,
                                          "src": "37467:8:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 1798,
                                        "indexExpression": {
                                          "id": 1797,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1785,
                                          "src": "37476:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "37467:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "37446:33:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "id": 1802,
                                          "name": "amountToSplit",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1685,
                                          "src": "37519:13:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "id": 1803,
                                            "name": "percentAllocations",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1677,
                                            "src": "37544:18:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                              "typeString": "uint32[] memory"
                                            }
                                          },
                                          "id": 1805,
                                          "indexExpression": {
                                            "id": 1804,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1785,
                                            "src": "37563:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "37544:21:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        ],
                                        "id": 1801,
                                        "name": "_scaleAmountByPercentage",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1837,
                                        "src": "37483:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1806,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "37483:92:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "37446:129:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1808,
                                  "nodeType": "ExpressionStatement",
                                  "src": "37446:129:2"
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1788,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1785,
                                "src": "37411:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1789,
                                "name": "accountsLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1780,
                                "src": "37415:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "37411:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1810,
                            "initializationExpression": {
                              "assignments": [
                                1785
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1785,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "37404:1:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1810,
                                  "src": "37396:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1784,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "37396:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1787,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 1786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "37408:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "37396:13:2"
                            },
                            "loopExpression": {
                              "expression": {
                                "id": 1792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": true,
                                "src": "37431:3:2",
                                "subExpression": {
                                  "id": 1791,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1785,
                                  "src": "37433:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1793,
                              "nodeType": "ExpressionStatement",
                              "src": "37431:3:2"
                            },
                            "nodeType": "ForStatement",
                            "src": "37391:193:2"
                          }
                        ]
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1812,
                            "name": "proxyBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1696,
                            "src": "37941:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "37956:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "37941:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1823,
                        "nodeType": "IfStatement",
                        "src": "37937:83:2",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1819,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1671,
                                "src": "38000:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$394",
                                  "typeString": "contract ERC20"
                                }
                              },
                              {
                                "id": 1820,
                                "name": "proxyBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1696,
                                "src": "38007:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$394",
                                  "typeString": "contract ERC20"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1816,
                                    "name": "split",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1668,
                                    "src": "37977:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1815,
                                  "name": "SplitWallet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2002,
                                  "src": "37965:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_SplitWallet_$2002_$",
                                    "typeString": "type(contract SplitWallet)"
                                  }
                                },
                                "id": 1817,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "37965:18:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SplitWallet_$2002",
                                  "typeString": "contract SplitWallet"
                                }
                              },
                              "id": 1818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sendERC20ToMain",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2001,
                              "src": "37965:34:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_contract$_ERC20_$394_$_t_uint256_$returns$__$",
                                "typeString": "function (contract ERC20,uint256) payable external"
                              }
                            },
                            "id": 1821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37965:55:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1822,
                          "nodeType": "ExpressionStatement",
                          "src": "37965:55:2"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1666,
                    "nodeType": "StructuredDocumentation",
                    "src": "34850:772:2",
                    "text": "@notice Distributes the ERC20 `token` balance for split `split`\n  @dev `accounts`, `percentAllocations`, and `distributorFee` must be verified before calling\n  @dev pernicious ERC20s may cause overflow in this function inside\n  _scaleAmountByPercentage, but results do not affect ETH & other ERC20 balances\n  @param split Address of split to distribute balance for\n  @param token Address of ERC20 to distribute balance for\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n  @param distributorAddress Address to pay `distributorFee` to"
                  },
                  "id": 1825,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_distributeERC20",
                  "nameLocation": "35634:16:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1682,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1668,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "35664:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1825,
                        "src": "35656:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1667,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "35656:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1671,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "35681:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1825,
                        "src": "35675:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$394",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "id": 1670,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1669,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "35675:5:2"
                          },
                          "referencedDeclaration": 394,
                          "src": "35675:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$394",
                            "typeString": "contract ERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1674,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "35709:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1825,
                        "src": "35692:25:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1672,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "35692:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1673,
                          "nodeType": "ArrayTypeName",
                          "src": "35692:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1677,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "35739:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1825,
                        "src": "35723:34:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1675,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "35723:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 1676,
                          "nodeType": "ArrayTypeName",
                          "src": "35723:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1679,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "35770:14:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1825,
                        "src": "35763:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1678,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "35763:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1681,
                        "mutability": "mutable",
                        "name": "distributorAddress",
                        "nameLocation": "35798:18:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1825,
                        "src": "35790:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "35790:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "35650:170:2"
                  },
                  "returnParameters": {
                    "id": 1683,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "35830:0:2"
                  },
                  "scope": 1904,
                  "src": "35625:2400:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1836,
                    "nodeType": "Block",
                    "src": "38391:409:2",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "38680:116:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "38725:65:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "amount",
                                        "nodeType": "YulIdentifier",
                                        "src": "38749:6:2"
                                      },
                                      {
                                        "name": "scaledPercent",
                                        "nodeType": "YulIdentifier",
                                        "src": "38757:13:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mul",
                                      "nodeType": "YulIdentifier",
                                      "src": "38745:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "38745:26:2"
                                  },
                                  {
                                    "name": "PERCENTAGE_SCALE",
                                    "nodeType": "YulIdentifier",
                                    "src": "38773:16:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "38741:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "38741:49:2"
                              },
                              "variableNames": [
                                {
                                  "name": "scaledAmount",
                                  "nodeType": "YulIdentifier",
                                  "src": "38725:12:2"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 574,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "38773:16:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1828,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "38749:6:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1833,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "38725:12:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1830,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "38757:13:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 1835,
                        "nodeType": "InlineAssembly",
                        "src": "38671:125:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1826,
                    "nodeType": "StructuredDocumentation",
                    "src": "38029:227:2",
                    "text": "@notice Multiplies an amount by a scaled percentage\n  @param amount Amount to get `scaledPercentage` of\n  @param scaledPercent Percent scaled by PERCENTAGE_SCALE\n  @return scaledAmount Percent of `amount`."
                  },
                  "id": 1837,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_scaleAmountByPercentage",
                  "nameLocation": "38268:24:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1831,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1828,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "38301:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1837,
                        "src": "38293:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1827,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "38293:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1830,
                        "mutability": "mutable",
                        "name": "scaledPercent",
                        "nameLocation": "38317:13:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1837,
                        "src": "38309:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1829,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "38309:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "38292:39:2"
                  },
                  "returnParameters": {
                    "id": 1834,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1833,
                        "mutability": "mutable",
                        "name": "scaledAmount",
                        "nameLocation": "38375:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1837,
                        "src": "38367:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1832,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "38367:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "38366:22:2"
                  },
                  "scope": 1904,
                  "src": "38259:541:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1865,
                    "nodeType": "Block",
                    "src": "39030:198:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1845,
                            "name": "withdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1843,
                            "src": "39117:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 1846,
                                "name": "ethBalances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 587,
                                "src": "39129:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1848,
                              "indexExpression": {
                                "id": 1847,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1840,
                                "src": "39141:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "39129:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "39152:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "39129:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "39117:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1852,
                        "nodeType": "ExpressionStatement",
                        "src": "39117:36:2"
                      },
                      {
                        "expression": {
                          "id": 1857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1853,
                              "name": "ethBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "39159:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1855,
                            "indexExpression": {
                              "id": 1854,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1840,
                              "src": "39171:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "39159:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "39182:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "39159:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1858,
                        "nodeType": "ExpressionStatement",
                        "src": "39159:24:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1862,
                              "name": "withdrawn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1843,
                              "src": "39213:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1859,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1840,
                              "src": "39189:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 416,
                            "src": "39189:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "39189:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1864,
                        "nodeType": "ExpressionStatement",
                        "src": "39189:34:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1838,
                    "nodeType": "StructuredDocumentation",
                    "src": "38804:150:2",
                    "text": "@notice Withdraw ETH for account `account`\n  @param account Account to withdrawn ETH for\n  @return withdrawn Amount of ETH withdrawn"
                  },
                  "id": 1866,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_withdraw",
                  "nameLocation": "38966:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1841,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1840,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "38984:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1866,
                        "src": "38976:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1839,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "38976:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "38975:17:2"
                  },
                  "returnParameters": {
                    "id": 1844,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1843,
                        "mutability": "mutable",
                        "name": "withdrawn",
                        "nameLocation": "39019:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1866,
                        "src": "39011:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1842,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "39011:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "39010:19:2"
                  },
                  "scope": 1904,
                  "src": "38957:271:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1902,
                    "nodeType": "Block",
                    "src": "39516:222:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1877,
                            "name": "withdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1875,
                            "src": "39605:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 1878,
                                  "name": "erc20Balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 595,
                                  "src": "39617:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_ERC20_$394_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(contract ERC20 => mapping(address => uint256))"
                                  }
                                },
                                "id": 1880,
                                "indexExpression": {
                                  "id": 1879,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1872,
                                  "src": "39631:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$394",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "39617:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1882,
                              "indexExpression": {
                                "id": 1881,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1869,
                                "src": "39638:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "39617:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "39649:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "39617:33:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "39605:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1886,
                        "nodeType": "ExpressionStatement",
                        "src": "39605:45:2"
                      },
                      {
                        "expression": {
                          "id": 1893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1887,
                                "name": "erc20Balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 595,
                                "src": "39656:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_contract$_ERC20_$394_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(contract ERC20 => mapping(address => uint256))"
                                }
                              },
                              "id": 1890,
                              "indexExpression": {
                                "id": 1888,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1872,
                                "src": "39670:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$394",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "39656:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1891,
                            "indexExpression": {
                              "id": 1889,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1869,
                              "src": "39677:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "39656:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "39688:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "39656:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1894,
                        "nodeType": "ExpressionStatement",
                        "src": "39656:33:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1898,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1869,
                              "src": "39714:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1899,
                              "name": "withdrawn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1875,
                              "src": "39723:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1895,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1872,
                              "src": "39695:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$394",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 462,
                            "src": "39695:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$394_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$394_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 1900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "39695:38:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1901,
                        "nodeType": "ExpressionStatement",
                        "src": "39695:38:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1867,
                    "nodeType": "StructuredDocumentation",
                    "src": "39232:180:2",
                    "text": "@notice Withdraw ERC20 `token` for account `account`\n  @param account Account to withdrawn ERC20 `token` for\n  @return withdrawn Amount of ERC20 `token` withdrawn"
                  },
                  "id": 1903,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_withdrawERC20",
                  "nameLocation": "39424:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1873,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1869,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "39447:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1903,
                        "src": "39439:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1868,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "39439:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1872,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "39462:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1903,
                        "src": "39456:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$394",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "id": 1871,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1870,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "39456:5:2"
                          },
                          "referencedDeclaration": 394,
                          "src": "39456:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$394",
                            "typeString": "contract ERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "39438:30:2"
                  },
                  "returnParameters": {
                    "id": 1876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1875,
                        "mutability": "mutable",
                        "name": "withdrawn",
                        "nameLocation": "39503:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1903,
                        "src": "39495:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1874,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "39495:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "39494:19:2"
                  },
                  "scope": 1904,
                  "src": "39415:323:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1905,
              "src": "12217:27523:2",
              "usedErrors": [
                511,
                516,
                523,
                528,
                533,
                538,
                543,
                548,
                553,
                2305,
                2308
              ]
            }
          ],
          "src": "45:39696:2"
        },
        "id": 2
      },
      "contracts/SplitWallet.sol": {
        "ast": {
          "absolutePath": "contracts/SplitWallet.sol",
          "exportedSymbols": {
            "ERC20": [
              394
            ],
            "ISplitMain": [
              2300
            ],
            "SafeTransferLib": [
              494
            ],
            "SplitWallet": [
              2002
            ],
            "Unauthorized": [
              1915
            ]
          },
          "id": 2003,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1906,
              "literals": [
                "solidity",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:22:3"
            },
            {
              "absolutePath": "contracts/interfaces/ISplitMain.sol",
              "file": "./interfaces/ISplitMain.sol",
              "id": 1908,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2003,
              "sourceUnit": 2301,
              "src": "69:55:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1907,
                    "name": "ISplitMain",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "77:10:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@rari-capital/solmate/src/tokens/ERC20.sol",
              "file": "@rari-capital/solmate/src/tokens/ERC20.sol",
              "id": 1910,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2003,
              "sourceUnit": 395,
              "src": "125:65:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1909,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "133:5:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@rari-capital/solmate/src/utils/SafeTransferLib.sol",
              "file": "@rari-capital/solmate/src/utils/SafeTransferLib.sol",
              "id": 1912,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2003,
              "sourceUnit": 495,
              "src": "191:84:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1911,
                    "name": "SafeTransferLib",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "199:15:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "documentation": {
                "id": 1913,
                "nodeType": "StructuredDocumentation",
                "src": "296:32:3",
                "text": "@notice Unauthorized sender"
              },
              "id": 1915,
              "name": "Unauthorized",
              "nameLocation": "334:12:3",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 1914,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "346:2:3"
              },
              "src": "328:21:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1916,
                "nodeType": "StructuredDocumentation",
                "src": "351:214:3",
                "text": " @title SplitWallet\n @author 0xSplits <will@0xSplits.xyz>\n @notice The implementation logic for `SplitProxy`.\n @dev `SplitProxy` handles `receive()` itself to avoid the gas cost with `DELEGATECALL`."
              },
              "fullyImplemented": true,
              "id": 2002,
              "linearizedBaseContracts": [
                2002
              ],
              "name": "SplitWallet",
              "nameLocation": "575:11:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 1919,
                  "libraryName": {
                    "id": 1917,
                    "name": "SafeTransferLib",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 494,
                    "src": "597:15:3"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "591:34:3",
                  "typeName": {
                    "id": 1918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                {
                  "id": 1923,
                  "libraryName": {
                    "id": 1920,
                    "name": "SafeTransferLib",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 494,
                    "src": "634:15:3"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "628:32:3",
                  "typeName": {
                    "id": 1922,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1921,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 394,
                      "src": "654:5:3"
                    },
                    "referencedDeclaration": 394,
                    "src": "654:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$394",
                      "typeString": "contract ERC20"
                    }
                  }
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1924,
                    "nodeType": "StructuredDocumentation",
                    "src": "689:170:3",
                    "text": "@notice emitted after each successful ETH transfer to proxy\n  @param split Address of the split that received ETH\n  @param amount Amount of ETH received"
                  },
                  "id": 1930,
                  "name": "ReceiveETH",
                  "nameLocation": "868:10:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1929,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1926,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "895:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1930,
                        "src": "879:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1925,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "879:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1928,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "910:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1930,
                        "src": "902:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1927,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "902:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "878:39:3"
                  },
                  "src": "862:56:3"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1931,
                    "nodeType": "StructuredDocumentation",
                    "src": "999:77:3",
                    "text": "@notice address of SplitMain for split distributions & EOA/SC withdrawals"
                  },
                  "functionSelector": "0e769b2b",
                  "id": 1934,
                  "mutability": "immutable",
                  "name": "splitMain",
                  "nameLocation": "1107:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "1079:37:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISplitMain_$2300",
                    "typeString": "contract ISplitMain"
                  },
                  "typeName": {
                    "id": 1933,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1932,
                      "name": "ISplitMain",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2300,
                      "src": "1079:10:3"
                    },
                    "referencedDeclaration": 2300,
                    "src": "1079:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISplitMain_$2300",
                      "typeString": "contract ISplitMain"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1949,
                    "nodeType": "Block",
                    "src": "1226:77:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1937,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1236:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1236:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1941,
                                "name": "splitMain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1934,
                                "src": "1258:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISplitMain_$2300",
                                  "typeString": "contract ISplitMain"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ISplitMain_$2300",
                                  "typeString": "contract ISplitMain"
                                }
                              ],
                              "id": 1940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1250:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1939,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1250:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1250:18:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1236:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1947,
                        "nodeType": "IfStatement",
                        "src": "1232:59:3",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1944,
                              "name": "Unauthorized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1915,
                              "src": "1277:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1277:14:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1946,
                          "nodeType": "RevertStatement",
                          "src": "1270:21:3"
                        }
                      },
                      {
                        "id": 1948,
                        "nodeType": "PlaceholderStatement",
                        "src": "1297:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1935,
                    "nodeType": "StructuredDocumentation",
                    "src": "1149:49:3",
                    "text": "@notice Reverts if the sender isn't SplitMain"
                  },
                  "id": 1950,
                  "name": "onlySplitMain",
                  "nameLocation": "1210:13:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1936,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1223:2:3"
                  },
                  "src": "1201:102:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1961,
                    "nodeType": "Block",
                    "src": "1351:45:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1954,
                            "name": "splitMain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "1357:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISplitMain_$2300",
                              "typeString": "contract ISplitMain"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1956,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1380:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1380:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1955,
                              "name": "ISplitMain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2300,
                              "src": "1369:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISplitMain_$2300_$",
                                "typeString": "type(contract ISplitMain)"
                              }
                            },
                            "id": 1958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1369:22:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISplitMain_$2300",
                              "typeString": "contract ISplitMain"
                            }
                          },
                          "src": "1357:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISplitMain_$2300",
                            "typeString": "contract ISplitMain"
                          }
                        },
                        "id": 1960,
                        "nodeType": "ExpressionStatement",
                        "src": "1357:34:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1951,
                    "nodeType": "StructuredDocumentation",
                    "src": "1307:26:3",
                    "text": " CONSTRUCTOR"
                  },
                  "id": 1962,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1952,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1348:2:3"
                  },
                  "returnParameters": {
                    "id": 1953,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1351:0:3"
                  },
                  "scope": 2002,
                  "src": "1337:59:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1978,
                    "nodeType": "Block",
                    "src": "1763:53:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1975,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1965,
                              "src": "1804:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1972,
                                  "name": "splitMain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1934,
                                  "src": "1777:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISplitMain_$2300",
                                    "typeString": "contract ISplitMain"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISplitMain_$2300",
                                    "typeString": "contract ISplitMain"
                                  }
                                ],
                                "id": 1971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1769:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1970,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1769:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1769:18:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 416,
                            "src": "1769:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1769:42:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1977,
                        "nodeType": "ExpressionStatement",
                        "src": "1769:42:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1963,
                    "nodeType": "StructuredDocumentation",
                    "src": "1448:240:3",
                    "text": "@notice Sends amount `amount` of ETH in proxy to SplitMain\n  @dev payable reduces gas cost; no vulnerability to accidentally lock\n  ETH introduced since fn call is restricted to SplitMain\n  @param amount Amount to send"
                  },
                  "functionSelector": "ab0ebff4",
                  "id": 1979,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 1968,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1967,
                        "name": "onlySplitMain",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1950,
                        "src": "1747:13:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1747:15:3"
                    }
                  ],
                  "name": "sendETHToMain",
                  "nameLocation": "1700:13:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1966,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1965,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1722:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1979,
                        "src": "1714:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1964,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1714:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1713:16:3"
                  },
                  "returnParameters": {
                    "id": 1969,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1763:0:3"
                  },
                  "scope": 2002,
                  "src": "1691:125:3",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2000,
                    "nodeType": "Block",
                    "src": "2207:57:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1995,
                                  "name": "splitMain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1934,
                                  "src": "2240:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISplitMain_$2300",
                                    "typeString": "contract ISplitMain"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISplitMain_$2300",
                                    "typeString": "contract ISplitMain"
                                  }
                                ],
                                "id": 1994,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2232:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1993,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2232:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2232:18:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1997,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1985,
                              "src": "2252:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1990,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1983,
                              "src": "2213:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$394",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 462,
                            "src": "2213:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$394_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$394_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 1998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2213:46:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1999,
                        "nodeType": "ExpressionStatement",
                        "src": "2213:46:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1980,
                    "nodeType": "StructuredDocumentation",
                    "src": "1820:283:3",
                    "text": "@notice Sends amount `amount` of ERC20 `token` in proxy to SplitMain\n  @dev payable reduces gas cost; no vulnerability to accidentally lock\n  ETH introduced since fn call is restricted to SplitMain\n  @param token Token to send\n  @param amount Amount to send"
                  },
                  "functionSelector": "7c1f3ffe",
                  "id": 2001,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 1988,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1987,
                        "name": "onlySplitMain",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1950,
                        "src": "2189:13:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2189:15:3"
                    }
                  ],
                  "name": "sendERC20ToMain",
                  "nameLocation": "2115:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1986,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1983,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2137:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 2001,
                        "src": "2131:11:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$394",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "id": 1982,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1981,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "2131:5:3"
                          },
                          "referencedDeclaration": 394,
                          "src": "2131:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$394",
                            "typeString": "contract ERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1985,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2152:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 2001,
                        "src": "2144:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1984,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2144:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2130:29:3"
                  },
                  "returnParameters": {
                    "id": 1989,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2207:0:3"
                  },
                  "scope": 2002,
                  "src": "2106:158:3",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2003,
              "src": "566:1700:3",
              "usedErrors": [
                1915
              ]
            }
          ],
          "src": "45:2222:3"
        },
        "id": 3
      },
      "contracts/TestInternalTxn.sol": {
        "ast": {
          "absolutePath": "contracts/TestInternalTxn.sol",
          "exportedSymbols": {
            "ISplitMain": [
              2300
            ],
            "TestInternalTxn": [
              2064
            ]
          },
          "id": 2065,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2004,
              "literals": [
                "solidity",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:22:4"
            },
            {
              "absolutePath": "contracts/interfaces/ISplitMain.sol",
              "file": "contracts/interfaces/ISplitMain.sol",
              "id": 2006,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2065,
              "sourceUnit": 2301,
              "src": "69:63:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2005,
                    "name": "ISplitMain",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "77:10:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2064,
              "linearizedBaseContracts": [
                2064
              ],
              "name": "TestInternalTxn",
              "nameLocation": "143:15:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 2012,
                  "mutability": "constant",
                  "name": "splitMain",
                  "nameLocation": "183:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "163:90:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISplitMain_$2300",
                    "typeString": "contract ISplitMain"
                  },
                  "typeName": {
                    "id": 2008,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2007,
                      "name": "ISplitMain",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2300,
                      "src": "163:10:4"
                    },
                    "referencedDeclaration": 2300,
                    "src": "163:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISplitMain_$2300",
                      "typeString": "contract ISplitMain"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "307832656436633442356441363337386337383937414336374261396534333130324665623639344545",
                        "id": 2010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "210:42:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x2ed6c4B5dA6378c7897AC67Ba9e43102Feb694EE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2009,
                      "name": "ISplitMain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2300,
                      "src": "199:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISplitMain_$2300_$",
                        "typeString": "type(contract ISplitMain)"
                      }
                    },
                    "id": 2011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "199:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISplitMain_$2300",
                      "typeString": "contract ISplitMain"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2015,
                    "nodeType": "Block",
                    "src": "272:2:4",
                    "statements": []
                  },
                  "id": 2016,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2013,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "269:2:4"
                  },
                  "returnParameters": {
                    "id": 2014,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "272:0:4"
                  },
                  "scope": 2064,
                  "src": "258:16:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2039,
                    "nodeType": "Block",
                    "src": "451:143:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2033,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2019,
                              "src": "501:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 2034,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2022,
                              "src": "519:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 2035,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2024,
                              "src": "547:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 2036,
                              "name": "controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "571:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2031,
                              "name": "splitMain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2012,
                              "src": "470:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISplitMain_$2300",
                                "typeString": "contract ISplitMain"
                              }
                            },
                            "id": 2032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createSplit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2090,
                            "src": "470:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint32_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address[] memory,uint32[] memory,uint32,address) external returns (address)"
                            }
                          },
                          "id": 2037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "470:119:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2030,
                        "id": 2038,
                        "nodeType": "Return",
                        "src": "457:132:4"
                      }
                    ]
                  },
                  "functionSelector": "f5f0fa77",
                  "id": 2040,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "create",
                  "nameLocation": "287:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2027,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2019,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "318:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2040,
                        "src": "299:27:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2017,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "299:7:4",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2018,
                          "nodeType": "ArrayTypeName",
                          "src": "299:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2022,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "350:18:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2040,
                        "src": "332:36:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2020,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "332:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 2021,
                          "nodeType": "ArrayTypeName",
                          "src": "332:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2024,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "381:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2040,
                        "src": "374:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2023,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "374:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2026,
                        "mutability": "mutable",
                        "name": "controller",
                        "nameLocation": "409:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2040,
                        "src": "401:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2025,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "401:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "293:130:4"
                  },
                  "returnParameters": {
                    "id": 2030,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2029,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2040,
                        "src": "442:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2028,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "442:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "441:9:4"
                  },
                  "scope": 2064,
                  "src": "278:316:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2062,
                    "nodeType": "Block",
                    "src": "748:85:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2056,
                              "name": "split",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2042,
                              "src": "776:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2057,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2045,
                              "src": "783:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            {
                              "id": 2058,
                              "name": "percentAllocations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2048,
                              "src": "793:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              }
                            },
                            {
                              "id": 2059,
                              "name": "distributorFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2050,
                              "src": "813:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                                "typeString": "uint32[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 2053,
                              "name": "splitMain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2012,
                              "src": "754:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISplitMain_$2300",
                                "typeString": "contract ISplitMain"
                              }
                            },
                            "id": 2055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateSplit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2116,
                            "src": "754:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address[] memory,uint32[] memory,uint32) external"
                            }
                          },
                          "id": 2060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "754:74:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2061,
                        "nodeType": "ExpressionStatement",
                        "src": "754:74:4"
                      }
                    ]
                  },
                  "functionSelector": "2f079a0f",
                  "id": 2063,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "update",
                  "nameLocation": "607:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2051,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2042,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "627:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2063,
                        "src": "619:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2041,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "619:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2045,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "657:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2063,
                        "src": "638:27:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2043,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "638:7:4",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2044,
                          "nodeType": "ArrayTypeName",
                          "src": "638:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2048,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "689:18:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2063,
                        "src": "671:36:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2046,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "671:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 2047,
                          "nodeType": "ArrayTypeName",
                          "src": "671:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2050,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "720:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 2063,
                        "src": "713:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2049,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "713:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "613:125:4"
                  },
                  "returnParameters": {
                    "id": 2052,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "748:0:4"
                  },
                  "scope": 2064,
                  "src": "598:235:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2065,
              "src": "134:701:4",
              "usedErrors": []
            }
          ],
          "src": "45:791:4"
        },
        "id": 4
      },
      "contracts/interfaces/ISplitMain.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ISplitMain.sol",
          "exportedSymbols": {
            "ERC20": [
              394
            ],
            "ISplitMain": [
              2300
            ]
          },
          "id": 2301,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2066,
              "literals": [
                "solidity",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:22:5"
            },
            {
              "absolutePath": "@rari-capital/solmate/src/tokens/ERC20.sol",
              "file": "@rari-capital/solmate/src/tokens/ERC20.sol",
              "id": 2068,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2301,
              "sourceUnit": 395,
              "src": "69:65:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2067,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "77:5:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2069,
                "nodeType": "StructuredDocumentation",
                "src": "136:68:5",
                "text": " @title ISplitMain\n @author 0xSplits <will@0xSplits.xyz>"
              },
              "fullyImplemented": false,
              "id": 2300,
              "linearizedBaseContracts": [
                2300
              ],
              "name": "ISplitMain",
              "nameLocation": "215:10:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2070,
                    "nodeType": "StructuredDocumentation",
                    "src": "230:24:5",
                    "text": " FUNCTIONS"
                  },
                  "functionSelector": "8117abc1",
                  "id": 2075,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "walletImplementation",
                  "nameLocation": "267:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2071,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "287:2:5"
                  },
                  "returnParameters": {
                    "id": 2074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2073,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2075,
                        "src": "308:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2072,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "308:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "307:9:5"
                  },
                  "scope": 2300,
                  "src": "258:59:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7601f782",
                  "id": 2090,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createSplit",
                  "nameLocation": "330:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2086,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2078,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "366:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2090,
                        "src": "347:27:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2076,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "347:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2077,
                          "nodeType": "ArrayTypeName",
                          "src": "347:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2081,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "398:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2090,
                        "src": "380:36:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2079,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "380:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 2080,
                          "nodeType": "ArrayTypeName",
                          "src": "380:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2083,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "429:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2090,
                        "src": "422:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2082,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "422:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2085,
                        "mutability": "mutable",
                        "name": "controller",
                        "nameLocation": "457:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2090,
                        "src": "449:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2084,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "449:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "341:130:5"
                  },
                  "returnParameters": {
                    "id": 2089,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2088,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2090,
                        "src": "490:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2087,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "490:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "489:9:5"
                  },
                  "scope": 2300,
                  "src": "321:178:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "52844dd3",
                  "id": 2103,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "predictImmutableSplitAddress",
                  "nameLocation": "512:28:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2099,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2093,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "565:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2103,
                        "src": "546:27:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2091,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "546:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2092,
                          "nodeType": "ArrayTypeName",
                          "src": "546:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2096,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "597:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2103,
                        "src": "579:36:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2094,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "579:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 2095,
                          "nodeType": "ArrayTypeName",
                          "src": "579:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2098,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "628:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2103,
                        "src": "621:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2097,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "621:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "540:106:5"
                  },
                  "returnParameters": {
                    "id": 2102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2101,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2103,
                        "src": "670:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "669:9:5"
                  },
                  "scope": 2300,
                  "src": "503:176:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ecef0ace",
                  "id": 2116,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateSplit",
                  "nameLocation": "692:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2105,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "717:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2116,
                        "src": "709:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2104,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2108,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "747:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2116,
                        "src": "728:27:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2106,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "728:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2107,
                          "nodeType": "ArrayTypeName",
                          "src": "728:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2111,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "779:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2116,
                        "src": "761:36:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2109,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "761:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 2110,
                          "nodeType": "ArrayTypeName",
                          "src": "761:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2113,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "810:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2116,
                        "src": "803:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2112,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "803:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "703:125:5"
                  },
                  "returnParameters": {
                    "id": 2115,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "837:0:5"
                  },
                  "scope": 2300,
                  "src": "683:155:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d0e4b2f4",
                  "id": 2123,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferControl",
                  "nameLocation": "851:15:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2118,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "875:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2123,
                        "src": "867:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2117,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "867:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2120,
                        "mutability": "mutable",
                        "name": "newController",
                        "nameLocation": "890:13:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2123,
                        "src": "882:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2119,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "882:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "866:38:5"
                  },
                  "returnParameters": {
                    "id": 2122,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "913:0:5"
                  },
                  "scope": 2300,
                  "src": "842:72:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "1267c6da",
                  "id": 2128,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cancelControlTransfer",
                  "nameLocation": "927:21:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2125,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "957:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2128,
                        "src": "949:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2124,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "949:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "948:15:5"
                  },
                  "returnParameters": {
                    "id": 2127,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "972:0:5"
                  },
                  "scope": 2300,
                  "src": "918:55:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c7de6440",
                  "id": 2133,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "acceptControl",
                  "nameLocation": "986:13:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2130,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "1008:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2133,
                        "src": "1000:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2129,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1000:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "999:15:5"
                  },
                  "returnParameters": {
                    "id": 2132,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1023:0:5"
                  },
                  "scope": 2300,
                  "src": "977:47:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "189cbaa0",
                  "id": 2138,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "makeSplitImmutable",
                  "nameLocation": "1037:18:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2135,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "1064:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2138,
                        "src": "1056:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2134,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1055:15:5"
                  },
                  "returnParameters": {
                    "id": 2137,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1079:0:5"
                  },
                  "scope": 2300,
                  "src": "1028:52:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e61cb05e",
                  "id": 2153,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "distributeETH",
                  "nameLocation": "1093:13:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2140,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "1120:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2153,
                        "src": "1112:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2139,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1112:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2143,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "1150:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2153,
                        "src": "1131:27:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2141,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1131:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2142,
                          "nodeType": "ArrayTypeName",
                          "src": "1131:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2146,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "1182:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2153,
                        "src": "1164:36:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2144,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1164:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 2145,
                          "nodeType": "ArrayTypeName",
                          "src": "1164:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2148,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "1213:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2153,
                        "src": "1206:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2147,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1206:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2150,
                        "mutability": "mutable",
                        "name": "distributorAddress",
                        "nameLocation": "1241:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2153,
                        "src": "1233:26:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2149,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1106:157:5"
                  },
                  "returnParameters": {
                    "id": 2152,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1272:0:5"
                  },
                  "scope": 2300,
                  "src": "1084:189:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a5e3909e",
                  "id": 2168,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateAndDistributeETH",
                  "nameLocation": "1286:22:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2155,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "1322:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2168,
                        "src": "1314:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1314:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2158,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "1352:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2168,
                        "src": "1333:27:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2156,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1333:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2157,
                          "nodeType": "ArrayTypeName",
                          "src": "1333:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2161,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "1384:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2168,
                        "src": "1366:36:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2159,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1366:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 2160,
                          "nodeType": "ArrayTypeName",
                          "src": "1366:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2163,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "1415:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2168,
                        "src": "1408:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2162,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1408:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2165,
                        "mutability": "mutable",
                        "name": "distributorAddress",
                        "nameLocation": "1443:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2168,
                        "src": "1435:26:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1435:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1308:157:5"
                  },
                  "returnParameters": {
                    "id": 2167,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1474:0:5"
                  },
                  "scope": 2300,
                  "src": "1277:198:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "15811302",
                  "id": 2186,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "distributeERC20",
                  "nameLocation": "1488:15:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2184,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2170,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "1517:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2186,
                        "src": "1509:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1509:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2173,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1534:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2186,
                        "src": "1528:11:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$394",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "id": 2172,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2171,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "1528:5:5"
                          },
                          "referencedDeclaration": 394,
                          "src": "1528:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$394",
                            "typeString": "contract ERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2176,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "1564:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2186,
                        "src": "1545:27:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2174,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1545:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2175,
                          "nodeType": "ArrayTypeName",
                          "src": "1545:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2179,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "1596:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2186,
                        "src": "1578:36:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2177,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1578:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 2178,
                          "nodeType": "ArrayTypeName",
                          "src": "1578:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2181,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "1627:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2186,
                        "src": "1620:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2180,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1620:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2183,
                        "mutability": "mutable",
                        "name": "distributorAddress",
                        "nameLocation": "1655:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2186,
                        "src": "1647:26:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1647:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1503:174:5"
                  },
                  "returnParameters": {
                    "id": 2185,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1686:0:5"
                  },
                  "scope": 2300,
                  "src": "1479:208:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "77b1e4e9",
                  "id": 2204,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateAndDistributeERC20",
                  "nameLocation": "1700:24:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2188,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "1738:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2204,
                        "src": "1730:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2187,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1730:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2191,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1755:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2204,
                        "src": "1749:11:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$394",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "id": 2190,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2189,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "1749:5:5"
                          },
                          "referencedDeclaration": 394,
                          "src": "1749:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$394",
                            "typeString": "contract ERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2194,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "1785:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2204,
                        "src": "1766:27:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2192,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1766:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2193,
                          "nodeType": "ArrayTypeName",
                          "src": "1766:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2197,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "1817:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2204,
                        "src": "1799:36:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2195,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1799:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 2196,
                          "nodeType": "ArrayTypeName",
                          "src": "1799:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2199,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "1848:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2204,
                        "src": "1841:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2198,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1841:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2201,
                        "mutability": "mutable",
                        "name": "distributorAddress",
                        "nameLocation": "1876:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2204,
                        "src": "1868:26:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2200,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1868:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1724:174:5"
                  },
                  "returnParameters": {
                    "id": 2203,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1907:0:5"
                  },
                  "scope": 2300,
                  "src": "1691:217:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6e5f6919",
                  "id": 2215,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "1921:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2206,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1943:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2215,
                        "src": "1935:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2205,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1935:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2208,
                        "mutability": "mutable",
                        "name": "withdrawETH",
                        "nameLocation": "1964:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2215,
                        "src": "1956:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2207,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1956:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2212,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "1998:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2215,
                        "src": "1981:23:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$394_$dyn_calldata_ptr",
                          "typeString": "contract ERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2210,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2209,
                              "name": "ERC20",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 394,
                              "src": "1981:5:5"
                            },
                            "referencedDeclaration": 394,
                            "src": "1981:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$394",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 2211,
                          "nodeType": "ArrayTypeName",
                          "src": "1981:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ERC20_$394_$dyn_storage_ptr",
                            "typeString": "contract ERC20[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1929:79:5"
                  },
                  "returnParameters": {
                    "id": 2214,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2017:0:5"
                  },
                  "scope": 2300,
                  "src": "1912:106:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2216,
                    "nodeType": "StructuredDocumentation",
                    "src": "2047:426:5",
                    "text": "@notice emitted after each successful split creation\n  @param split Address of the created split\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution\n  @param controller Controlling address (0x0 if immutable)"
                  },
                  "id": 2230,
                  "name": "CreateSplit",
                  "nameLocation": "2482:11:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2218,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "2515:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2230,
                        "src": "2499:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2217,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2499:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2221,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "2536:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2230,
                        "src": "2526:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2526:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2220,
                          "nodeType": "ArrayTypeName",
                          "src": "2526:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2224,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "2559:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2230,
                        "src": "2550:27:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2222,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2550:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 2223,
                          "nodeType": "ArrayTypeName",
                          "src": "2550:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2226,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "2590:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2230,
                        "src": "2583:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2225,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2583:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2228,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "controller",
                        "nameLocation": "2618:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2230,
                        "src": "2610:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2227,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2610:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2493:139:5"
                  },
                  "src": "2476:157:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2231,
                    "nodeType": "StructuredDocumentation",
                    "src": "2637:361:5",
                    "text": "@notice emitted after each successful split update\n  @param split Address of the updated split\n  @param accounts Ordered, unique list of addresses with ownership in the split\n  @param percentAllocations Percent allocations associated with each address\n  @param distributorFee Keeper fee paid by split to cover gas costs of distribution"
                  },
                  "id": 2243,
                  "name": "UpdateSplit",
                  "nameLocation": "3007:11:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2242,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2233,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "3040:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2243,
                        "src": "3024:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3024:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2236,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "3061:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2243,
                        "src": "3051:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2234,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3051:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2235,
                          "nodeType": "ArrayTypeName",
                          "src": "3051:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2239,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "percentAllocations",
                        "nameLocation": "3084:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2243,
                        "src": "3075:27:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2237,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3075:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 2238,
                          "nodeType": "ArrayTypeName",
                          "src": "3075:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2241,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "distributorFee",
                        "nameLocation": "3115:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2243,
                        "src": "3108:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2240,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3108:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3018:115:5"
                  },
                  "src": "3001:133:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2244,
                    "nodeType": "StructuredDocumentation",
                    "src": "3138:228:5",
                    "text": "@notice emitted after each initiated split control transfer\n  @param split Address of the split control transfer was initiated for\n  @param newPotentialController Address of the split's new potential controller"
                  },
                  "id": 2250,
                  "name": "InitiateControlTransfer",
                  "nameLocation": "3375:23:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2246,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "3420:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2250,
                        "src": "3404:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2245,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3404:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2248,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newPotentialController",
                        "nameLocation": "3447:22:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2250,
                        "src": "3431:38:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3431:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3398:75:5"
                  },
                  "src": "3369:105:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2251,
                    "nodeType": "StructuredDocumentation",
                    "src": "3478:142:5",
                    "text": "@notice emitted after each canceled split control transfer\n  @param split Address of the split control transfer was canceled for"
                  },
                  "id": 2255,
                  "name": "CancelControlTransfer",
                  "nameLocation": "3629:21:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2253,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "3667:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2255,
                        "src": "3651:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2252,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3651:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3650:23:5"
                  },
                  "src": "3623:51:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2256,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:278:5",
                    "text": "@notice emitted after each successful split control transfer\n  @param split Address of the split control was transferred for\n  @param previousController Address of the split's previous controller\n  @param newController Address of the split's new controller"
                  },
                  "id": 2264,
                  "name": "ControlTransfer",
                  "nameLocation": "3965:15:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2258,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "4002:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2264,
                        "src": "3986:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2257,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3986:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2260,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousController",
                        "nameLocation": "4029:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2264,
                        "src": "4013:34:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2259,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2262,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newController",
                        "nameLocation": "4069:13:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2264,
                        "src": "4053:29:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4053:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3980:106:5"
                  },
                  "src": "3959:128:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2265,
                    "nodeType": "StructuredDocumentation",
                    "src": "4091:249:5",
                    "text": "@notice emitted after each successful ETH balance split\n  @param split Address of the split that distributed its balance\n  @param amount Amount of ETH distributed\n  @param distributorAddress Address to credit distributor fee to"
                  },
                  "id": 2273,
                  "name": "DistributeETH",
                  "nameLocation": "4349:13:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2267,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "4384:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2273,
                        "src": "4368:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2266,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4368:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2269,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4403:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2273,
                        "src": "4395:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2268,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4395:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2271,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "distributorAddress",
                        "nameLocation": "4431:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2273,
                        "src": "4415:34:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2270,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4415:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4362:91:5"
                  },
                  "src": "4343:111:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2274,
                    "nodeType": "StructuredDocumentation",
                    "src": "4458:301:5",
                    "text": "@notice emitted after each successful ERC20 balance split\n  @param split Address of the split that distributed its balance\n  @param token Address of ERC20 distributed\n  @param amount Amount of ERC20 distributed\n  @param distributorAddress Address to credit distributor fee to"
                  },
                  "id": 2285,
                  "name": "DistributeERC20",
                  "nameLocation": "4768:15:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2276,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "split",
                        "nameLocation": "4805:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2285,
                        "src": "4789:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4789:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2279,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "4830:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2285,
                        "src": "4816:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$394",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "id": 2278,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2277,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "4816:5:5"
                          },
                          "referencedDeclaration": 394,
                          "src": "4816:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$394",
                            "typeString": "contract ERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2281,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4849:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2285,
                        "src": "4841:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2280,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4841:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2283,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "distributorAddress",
                        "nameLocation": "4877:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2285,
                        "src": "4861:34:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2282,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4861:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4783:116:5"
                  },
                  "src": "4762:138:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2286,
                    "nodeType": "StructuredDocumentation",
                    "src": "4904:281:5",
                    "text": "@notice emitted after each successful withdrawal\n  @param account Address that funds were withdrawn to\n  @param ethAmount Amount of ETH withdrawn\n  @param tokens Addresses of ERC20s withdrawn\n  @param tokenAmounts Amounts of corresponding ERC20s withdrawn"
                  },
                  "id": 2299,
                  "name": "Withdrawal",
                  "nameLocation": "5194:10:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2288,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "5226:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2299,
                        "src": "5210:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2287,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5210:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2290,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ethAmount",
                        "nameLocation": "5247:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2299,
                        "src": "5239:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2289,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5239:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2294,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "5270:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2299,
                        "src": "5262:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$394_$dyn_memory_ptr",
                          "typeString": "contract ERC20[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2292,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2291,
                              "name": "ERC20",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 394,
                              "src": "5262:5:5"
                            },
                            "referencedDeclaration": 394,
                            "src": "5262:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$394",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 2293,
                          "nodeType": "ArrayTypeName",
                          "src": "5262:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ERC20_$394_$dyn_storage_ptr",
                            "typeString": "contract ERC20[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2297,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokenAmounts",
                        "nameLocation": "5292:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 2299,
                        "src": "5282:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2295,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5282:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2296,
                          "nodeType": "ArrayTypeName",
                          "src": "5282:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5204:104:5"
                  },
                  "src": "5188:121:5"
                }
              ],
              "scope": 2301,
              "src": "205:5106:5",
              "usedErrors": []
            }
          ],
          "src": "45:5267:5"
        },
        "id": 5
      },
      "contracts/libraries/Clones.sol": {
        "ast": {
          "absolutePath": "contracts/libraries/Clones.sol",
          "exportedSymbols": {
            "Clones": [
              2384
            ],
            "Create2Error": [
              2308
            ],
            "CreateError": [
              2305
            ]
          },
          "id": 2385,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2302,
              "literals": [
                "solidity",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:22:6"
            },
            {
              "documentation": {
                "id": 2303,
                "nodeType": "StructuredDocumentation",
                "src": "69:33:6",
                "text": "@notice create opcode failed"
              },
              "id": 2305,
              "name": "CreateError",
              "nameLocation": "108:11:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 2304,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "119:2:6"
              },
              "src": "102:20:6"
            },
            {
              "documentation": {
                "id": 2306,
                "nodeType": "StructuredDocumentation",
                "src": "123:34:6",
                "text": "@notice create2 opcode failed"
              },
              "id": 2308,
              "name": "Create2Error",
              "nameLocation": "163:12:6",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 2307,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "175:2:6"
              },
              "src": "157:21:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 2384,
              "linearizedBaseContracts": [
                2384
              ],
              "name": "Clones",
              "nameLocation": "188:6:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2327,
                    "nodeType": "Block",
                    "src": "3887:677:6",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3902:604:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3910:22:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3927:4:6",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3921:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3921:11:6"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "3914:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3955:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3968:66:6",
                                    "type": "",
                                    "value": "0x3d605d80600a3d3981f336603057343d52307f00000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3939:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3939:103:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3939:103:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4069:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4074:4:6",
                                        "type": "",
                                        "value": "0x13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4065:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4065:14:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4089:66:6",
                                    "type": "",
                                    "value": "0x830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4049:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4049:114:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4049:114:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4190:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4195:4:6",
                                        "type": "",
                                        "value": "0x33"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4186:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4186:14:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4210:66:6",
                                    "type": "",
                                    "value": "0x60203da23d3df35b3d3d3d3d363d3d37363d7300000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4170:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4170:114:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4170:114:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4302:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4307:4:6",
                                        "type": "",
                                        "value": "0x46"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4298:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4298:14:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4318:4:6",
                                        "type": "",
                                        "value": "0x60"
                                      },
                                      {
                                        "name": "implementation",
                                        "nodeType": "YulIdentifier",
                                        "src": "4324:14:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4314:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4314:25:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4291:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4291:49:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4291:49:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4367:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4372:4:6",
                                        "type": "",
                                        "value": "0x5a"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4363:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4363:14:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4387:66:6",
                                    "type": "",
                                    "value": "0x5af43d3d93803e605b57fd5bf300000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4347:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4347:114:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4347:114:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4468:32:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4487:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4490:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4495:4:6",
                                    "type": "",
                                    "value": "0x67"
                                  }
                                ],
                                "functionName": {
                                  "name": "create",
                                  "nodeType": "YulIdentifier",
                                  "src": "4480:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4480:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "instance",
                                  "nodeType": "YulIdentifier",
                                  "src": "4468:8:6"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 2311,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4324:14:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2314,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4468:8:6",
                            "valueSize": 1
                          }
                        ],
                        "id": 2316,
                        "nodeType": "InlineAssembly",
                        "src": "3893:613:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2317,
                            "name": "instance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "4515:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4535:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4527:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2318,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4527:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4527:10:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4515:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2326,
                        "nodeType": "IfStatement",
                        "src": "4511:48:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2323,
                              "name": "CreateError",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2305,
                              "src": "4546:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4546:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2325,
                          "nodeType": "RevertStatement",
                          "src": "4539:20:6"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2309,
                    "nodeType": "StructuredDocumentation",
                    "src": "199:3610:6",
                    "text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`\n except when someone calls `receive()` and then it emits an event matching\n `SplitWallet.ReceiveETH(indexed address, amount)`\n Inspired by OZ & 0age's minimal clone implementations based on eip 1167 found at\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.3.0/contracts/proxy/Clones.sol\n and https://medium.com/coinmonks/the-more-minimal-proxy-5756ae08ee48\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address.\n init: 0x3d605d80600a3d3981f3\n 3d   returndatasize  0\n 605d push1 0x5d      0x5d 0\n 80   dup1            0x5d 0x5d 0\n 600a push1 0x0a      0x0a 0x5d 0x5d 0\n 3d   returndatasize  0 0x0a 0x5d 0x5d 0\n 39   codecopy        0x5d 0                      destOffset offset length     memory[destOffset:destOffset+length] = address(this).code[offset:offset+length]       copy executing contracts bytecode\n 81   dup2            0 0x5d 0\n f3   return          0                           offset length                return memory[offset:offset+length]                                                   returns from this contract call\n contract: 0x36603057343d52307f830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b160203da23d3df35b3d3d3d3d363d3d37363d73bebebebebebebebebebebebebebebebebebebebe5af43d3d93803e605b57fd5bf3\n     0x000     36       calldatasize      cds\n     0x001     6030     push1 0x30        0x30 cds\n ,=< 0x003     57       jumpi\n |   0x004     34       callvalue         cv\n |   0x005     3d       returndatasize    0 cv\n |   0x006     52       mstore\n |   0x007     30       address           addr\n |   0x008     7f830d.. push32 0x830d..   id addr\n |   0x029     6020     push1 0x20        0x20 id addr\n |   0x02b     3d       returndatasize    0 0x20 id addr\n |   0x02c     a2       log2\n |   0x02d     3d       returndatasize    0\n |   0x02e     3d       returndatasize    0 0\n |   0x02f     f3       return\n `-> 0x030     5b       jumpdest\n     0x031     3d       returndatasize    0\n     0x032     3d       returndatasize    0 0\n     0x033     3d       returndatasize    0 0 0\n     0x034     3d       returndatasize    0 0 0 0\n     0x035     36       calldatasize      cds 0 0 0 0\n     0x036     3d       returndatasize    0 cds 0 0 0 0\n     0x037     3d       returndatasize    0 0 cds 0 0 0 0\n     0x038     37       calldatacopy      0 0 0 0\n     0x039     36       calldatasize      cds 0 0 0 0\n     0x03a     3d       returndatasize    0 cds 0 0 0 0\n     0x03b     73bebe.. push20 0xbebe..   0xbebe 0 cds 0 0 0 0\n     0x050     5a       gas               gas 0xbebe 0 cds 0 0 0 0\n     0x051     f4       delegatecall      suc 0 0\n     0x052     3d       returndatasize    rds suc 0 0\n     0x053     3d       returndatasize    rds rds suc 0 0\n     0x054     93       swap4             0 rds suc 0 rds\n     0x055     80       dup1              0 0 rds suc 0 rds\n     0x056     3e       returndatacopy    suc 0 rds\n     0x057     605b     push1 0x5b        0x5b suc 0 rds\n ,=< 0x059     57       jumpi             0 rds\n |   0x05a     fd       revert\n `-> 0x05b     5b       jumpdest          0 rds\n     0x05c     f3       return"
                  },
                  "id": 2328,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clone",
                  "nameLocation": "3821:5:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2311,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "3835:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2328,
                        "src": "3827:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2310,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3827:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3826:24:6"
                  },
                  "returnParameters": {
                    "id": 2315,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2314,
                        "mutability": "mutable",
                        "name": "instance",
                        "nameLocation": "3877:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2328,
                        "src": "3869:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2313,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3869:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3868:18:6"
                  },
                  "scope": 2384,
                  "src": "3812:752:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2348,
                    "nodeType": "Block",
                    "src": "4680:685:6",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "4695:611:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4703:22:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4720:4:6",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4714:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4714:11:6"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "4707:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "4748:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4761:66:6",
                                    "type": "",
                                    "value": "0x3d605d80600a3d3981f336603057343d52307f00000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4732:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4732:103:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4732:103:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4862:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4867:4:6",
                                        "type": "",
                                        "value": "0x13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4858:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4858:14:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4882:66:6",
                                    "type": "",
                                    "value": "0x830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4842:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4842:114:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4842:114:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "4983:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4988:4:6",
                                        "type": "",
                                        "value": "0x33"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4979:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4979:14:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5003:66:6",
                                    "type": "",
                                    "value": "0x60203da23d3df35b3d3d3d3d363d3d37363d7300000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4963:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4963:114:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4963:114:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5095:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5100:4:6",
                                        "type": "",
                                        "value": "0x46"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5091:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5091:14:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5111:4:6",
                                        "type": "",
                                        "value": "0x60"
                                      },
                                      {
                                        "name": "implementation",
                                        "nodeType": "YulIdentifier",
                                        "src": "5117:14:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5107:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5107:25:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5084:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5084:49:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5084:49:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5160:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5165:4:6",
                                        "type": "",
                                        "value": "0x5a"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5156:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5156:14:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5180:66:6",
                                    "type": "",
                                    "value": "0x5af43d3d93803e605b57fd5bf300000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5140:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5140:114:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5140:114:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5261:39:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5281:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5284:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5289:4:6",
                                    "type": "",
                                    "value": "0x67"
                                  },
                                  {
                                    "name": "salt",
                                    "nodeType": "YulIdentifier",
                                    "src": "5295:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "create2",
                                  "nodeType": "YulIdentifier",
                                  "src": "5273:7:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5273:27:6"
                              },
                              "variableNames": [
                                {
                                  "name": "instance",
                                  "nodeType": "YulIdentifier",
                                  "src": "5261:8:6"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 2330,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5117:14:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2335,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5261:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2332,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5295:4:6",
                            "valueSize": 1
                          }
                        ],
                        "id": 2337,
                        "nodeType": "InlineAssembly",
                        "src": "4686:620:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2338,
                            "name": "instance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2335,
                            "src": "5315:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5335:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5327:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2339,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5327:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5327:10:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5315:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2347,
                        "nodeType": "IfStatement",
                        "src": "5311:49:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2344,
                              "name": "Create2Error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2308,
                              "src": "5346:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5346:14:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2346,
                          "nodeType": "RevertStatement",
                          "src": "5339:21:6"
                        }
                      }
                    ]
                  },
                  "id": 2349,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cloneDeterministic",
                  "nameLocation": "4577:18:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2330,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "4604:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2349,
                        "src": "4596:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2329,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4596:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2332,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "4628:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2349,
                        "src": "4620:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2331,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4620:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4595:38:6"
                  },
                  "returnParameters": {
                    "id": 2336,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2335,
                        "mutability": "mutable",
                        "name": "instance",
                        "nameLocation": "4668:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2349,
                        "src": "4660:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4660:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4659:18:6"
                  },
                  "scope": 2384,
                  "src": "4568:797:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2362,
                    "nodeType": "Block",
                    "src": "5618:771:6",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "5633:752:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5641:22:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5658:4:6",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5652:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5652:11:6"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "5645:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5686:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5699:66:6",
                                    "type": "",
                                    "value": "0x3d605d80600a3d3981f336603057343d52307f00000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5670:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5670:103:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5670:103:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5800:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5805:4:6",
                                        "type": "",
                                        "value": "0x13"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5796:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5796:14:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5820:66:6",
                                    "type": "",
                                    "value": "0x830d2d700a97af574b186c80d40429385d24241565b08a7c559ba283a964d9b1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5780:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5780:114:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5780:114:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5921:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5926:4:6",
                                        "type": "",
                                        "value": "0x33"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5917:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5917:14:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5941:66:6",
                                    "type": "",
                                    "value": "0x60203da23d3df35b3d3d3d3d363d3d37363d7300000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5901:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5901:114:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5901:114:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6033:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6038:4:6",
                                        "type": "",
                                        "value": "0x46"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6029:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6029:14:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6049:4:6",
                                        "type": "",
                                        "value": "0x60"
                                      },
                                      {
                                        "name": "implementation",
                                        "nodeType": "YulIdentifier",
                                        "src": "6055:14:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6045:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6045:25:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6022:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6022:49:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6022:49:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6098:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6103:4:6",
                                        "type": "",
                                        "value": "0x5a"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6094:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6094:14:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6118:66:6",
                                    "type": "",
                                    "value": "0x5af43d3d93803e605b57fd5bf3ff000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6078:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6078:114:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6078:114:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6210:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6215:4:6",
                                        "type": "",
                                        "value": "0x68"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6206:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6206:14:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6226:4:6",
                                        "type": "",
                                        "value": "0x60"
                                      },
                                      {
                                        "name": "deployer",
                                        "nodeType": "YulIdentifier",
                                        "src": "6232:8:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6222:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6222:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6199:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6199:43:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6199:43:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6260:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6265:4:6",
                                        "type": "",
                                        "value": "0x7c"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6256:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6256:14:6"
                                  },
                                  {
                                    "name": "salt",
                                    "nodeType": "YulIdentifier",
                                    "src": "6272:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6249:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6249:28:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6249:28:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6295:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6300:4:6",
                                        "type": "",
                                        "value": "0x9c"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6291:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6291:14:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6317:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6322:4:6",
                                        "type": "",
                                        "value": "0x67"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "keccak256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6307:9:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6307:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6284:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6284:44:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6284:44:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6335:44:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "6362:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6367:4:6",
                                        "type": "",
                                        "value": "0x67"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6358:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6358:14:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6374:4:6",
                                    "type": "",
                                    "value": "0x55"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "6348:9:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6348:31:6"
                              },
                              "variableNames": [
                                {
                                  "name": "predicted",
                                  "nodeType": "YulIdentifier",
                                  "src": "6335:9:6"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 2356,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6232:8:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2352,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6055:14:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2359,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6335:9:6",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2354,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6272:4:6",
                            "valueSize": 1
                          }
                        ],
                        "id": 2361,
                        "nodeType": "InlineAssembly",
                        "src": "5624:761:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2350,
                    "nodeType": "StructuredDocumentation",
                    "src": "5369:95:6",
                    "text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
                  },
                  "id": 2363,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "predictDeterministicAddress",
                  "nameLocation": "5476:27:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2357,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2352,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "5517:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2363,
                        "src": "5509:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2351,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5509:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2354,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "5545:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2363,
                        "src": "5537:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2353,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5537:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2356,
                        "mutability": "mutable",
                        "name": "deployer",
                        "nameLocation": "5563:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2363,
                        "src": "5555:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2355,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5555:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5503:72:6"
                  },
                  "returnParameters": {
                    "id": 2360,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2359,
                        "mutability": "mutable",
                        "name": "predicted",
                        "nameLocation": "5607:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2363,
                        "src": "5599:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2358,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5599:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5598:19:6"
                  },
                  "scope": 2384,
                  "src": "5467:922:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2382,
                    "nodeType": "Block",
                    "src": "6622:82:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2374,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2366,
                              "src": "6663:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2375,
                              "name": "salt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2368,
                              "src": "6679:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2378,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6693:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Clones_$2384",
                                    "typeString": "library Clones"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Clones_$2384",
                                    "typeString": "library Clones"
                                  }
                                ],
                                "id": 2377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6685:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2376,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6685:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6685:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2373,
                            "name": "predictDeterministicAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2363,
                              2383
                            ],
                            "referencedDeclaration": 2363,
                            "src": "6635:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,bytes32,address) pure returns (address)"
                            }
                          },
                          "id": 2380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6635:64:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2372,
                        "id": 2381,
                        "nodeType": "Return",
                        "src": "6628:71:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2364,
                    "nodeType": "StructuredDocumentation",
                    "src": "6393:95:6",
                    "text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
                  },
                  "id": 2383,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "predictDeterministicAddress",
                  "nameLocation": "6500:27:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2369,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2366,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "6536:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2383,
                        "src": "6528:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6528:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2368,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "6560:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2383,
                        "src": "6552:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2367,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6552:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6527:38:6"
                  },
                  "returnParameters": {
                    "id": 2372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2371,
                        "mutability": "mutable",
                        "name": "predicted",
                        "nameLocation": "6609:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2383,
                        "src": "6601:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2370,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6601:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6600:19:6"
                  },
                  "scope": 2384,
                  "src": "6491:213:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2385,
              "src": "180:6526:6",
              "usedErrors": []
            }
          ],
          "src": "45:6662:6"
        },
        "id": 6
      }
    }
  }
}
